<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿尤</title>
  
  <subtitle>博客</subtitle>
  <link href="https://ayou129.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://ayou129.github.io/blog/"/>
  <updated>2023-11-08T19:08:49.000Z</updated>
  <id>https://ayou129.github.io/blog/</id>
  
  <author>
    <name>阿尤</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UE游戏开发</title>
    <link href="https://ayou129.github.io/blog/p/614a8811/"/>
    <id>https://ayou129.github.io/blog/p/614a8811/</id>
    <published>2023-11-08T19:08:49.000Z</published>
    <updated>2023-11-08T19:08:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><p>惠普提：<a href="https://www.alibabafonts.com/#/home" target="_blank" rel="noopener">https://www.alibabafonts.com/#/home</a></p><h2 id="UExz"><a href="#UExz" class="headerlink" title="UExz"></a>UExz</h2><p>教程开发版本 4.16.2</p><p>Marketplace下载<br>Animation Starter Pack</p><ul><li>reloading</li><li>射击</li><li>移动</li><li>动画</li></ul><p>创建项目</p><ul><li>First Person</li></ul><h3 id="调整摄像头的位置，将摄像头绑定到头部"><a href="#调整摄像头的位置，将摄像头绑定到头部" class="headerlink" title="调整摄像头的位置，将摄像头绑定到头部"></a>调整摄像头的位置，将摄像头绑定到头部</h3><p>Follow Camera -&gt; Socket -&gt; Head<br>将摄像头调整进入头前方</p><h3 id="增加-鼠标控制器旋转功能"><a href="#增加-鼠标控制器旋转功能" class="headerlink" title="增加 鼠标控制器旋转功能"></a>增加 鼠标控制器旋转功能</h3><p>Follow Camera： Setting -&gt; Use Controller Rotation Yaw<br>角色： Pawn -&gt; Use Controller Rotation Yaw</p><p>添加项目 FPS Tutorial</p><h3 id="添加血条和护甲"><a href="#添加血条和护甲" class="headerlink" title="添加血条和护甲"></a>添加血条和护甲</h3><p>添加血条和护甲 变量 float</p><h2 id="Unreal-Engine-5-tutorial"><a href="#Unreal-Engine-5-tutorial" class="headerlink" title="Unreal Engine 5 tutorial"></a>Unreal Engine 5 tutorial</h2><p>鼠标右键 按住，wsad 移动方向</p><p>鼠标左键 选择对象</p><h2 id="Lyra-Cross-platform-UI-framework"><a href="#Lyra-Cross-platform-UI-framework" class="headerlink" title="Lyra Cross-platform UI framework"></a>Lyra Cross-platform UI framework</h2><p>核心游戏驱动 Actors<br>Character&#x2F;Pawn 控制的游戏对象<br>Controller 控制游戏对象、客户端向服务器发送请求的通道<br>Player State 其他玩家需要知道的信息</p><ul><li>当前得分<br>Game State 游戏的综合信息</li><li>当前的游戏阶段</li><li>剩余时间</li></ul><p>模块化</p><p>Lura UI</p><p>游戏模式</p><ul><li>占点模式</li><li>爆破模式</li></ul><h3 id="蓝图"><a href="#蓝图" class="headerlink" title="蓝图"></a>蓝图</h3><p>和平精英手游 使用什么配置的电脑进行开发的 普通的mac可以开发吗？<br>我用的macbook pro 2020年 apple M1芯片 16GB内存 1TB硬盘 8核心GPU可以进行开发吗？<br>台式机需要什么配置才能进行开发？</p><p>知识点：</p><ol><li>快捷键 快速取消 链接  alt+左键</li></ol><p>Event BeginPlay<br>print String<br>hello world<br>10s</p><p>变量<br>isDead?<br>boolean<br>details &#x3D;&gt; default value<br>变量拖进 事件图标中，isDead?false红色<br>new branch</p><ul><li>print string 角色已死亡</li><li>print string 角色正常</li></ul><p><img src="/blog/p/614a8811/isDead.png" alt="isDead.png"></p><p>增加整型类型血量变量health</p><p><img src="/blog/p/614a8811/%E6%A0%B9%E6%8D%AER_key%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%BD%93%E5%89%8D%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B8%AD%E7%9A%84%E5%90%91%E9%87%8F.png" alt="根据R_key保存用户当前在世界中的向量.png"></p><p>创建可以开关的门<br>要点：</p><ol><li>碰撞重叠，弹出按键</li></ol><p>blueprints -&gt; 01_door_bp -&gt; BP_door（蓝图 ）<br>门框door frame：static mesh</p><p>碰撞要点：</p><ul><li>Box 碰撞盒体</li><li>Graph<ul><li>Box组件右下角 事件中添加：On Component Begin Overlap 内容开始重叠 actor &#x3D;&gt; 下方 cast</li><li>Box组件右下角 事件中添加：On Component End Overlap 内容结束重叠 actor &#x3D;&gt; 下方 cast</li><li>Cast to …  (third person character) 转换为第三人称角色</li><li>f Get Player Controller<ul><li>Enable Input</li><li>Disable Input</li></ul></li><li>E key</li><li>Flip Flop</li><li>Set Relative Rotation 设置相对旋转 z 90°   x2</li><li>Door组件-&gt;根据Flip Flop的值设置相对旋转</li></ul></li></ul><p><img src="/blog/p/614a8811/%E9%97%A8%E5%A2%9E%E5%8A%A0%E5%BC%80%E5%85%B3.png" alt="门增加开关.png"></p><p>设置门无法穿越</p><ul><li>打开门的材质</li><li>Collision -&gt; add box simplified collision 简单碰撞<br><img src="/blog/p/614a8811/%E9%97%A8%E5%A2%9E%E5%8A%A0%E7%A2%B0%E6%92%9E.png" alt="门增加碰撞.png"></li></ul><p>将门打开地缓慢一些<br>要点：</p><ol><li>timeline<ol start="2"><li>两个关键帧，且自动<br><img src="/blog/p/614a8811/%E4%B8%A4%E4%B8%AA%E5%85%B3%E9%94%AE%E5%B8%A7.png" alt="两个关键帧.png"></li></ol></li><li>make rotator 创建 自旋转<br><img src="/blog/p/614a8811/%E5%B0%86%E9%97%A8%E6%89%93%E5%BC%80%E5%9C%B0%E7%BC%93%E6%85%A2%E4%B8%80%E4%BA%9B.png" alt="将门打开地缓慢一些.png"></li></ol><p>相关介绍<br>选取父类：<br>Actor：基本的游戏对象，如灯光、摄像机、触发器、门、帽子等<br>Pawn：可以被控制的游戏对象，如玩家、敌人、车辆等<br>Character：Pawn的子类，可以移动、跳跃、攻击等<br>PlayerController：玩家控制器，如玩家输入、控制角色等<br>PlayerState：玩家状态，如玩家得分、玩家队伍等<br>PlayerCameraManager：玩家摄像机管理器，如玩家视角、镜头抖动等<br>GameModeBase：游戏模式，如占点模式、爆破模式等<br>GameInstance：游戏实例，如游戏设置、玩家信息等<br>GameSession：游戏会话，如玩家列表、游戏状态等<br>GameStateBase：游戏状态，如游戏阶段、剩余时间等</p><h3 id="拾取物品-模型带帽子"><a href="#拾取物品-模型带帽子" class="headerlink" title="拾取物品+模型带帽子"></a>拾取物品+模型带帽子</h3><p>导入包</p><p>BluePrints-&gt;02_HatPickup_BP-&gt;BP_HatPickup Actor</p><p>增加 静态网格HatMesh<br>增加 材质SM_Hat</p><ul><li>增加 碰撞球体 Sphere 放大：半径65<ul><li>事件图标中添加：On Component Begin Overlap</li><li>事件图标中添加：On Component End Overlap<br>增加 文字【E】拾取 躺着</li></ul></li><li>设置文字 Press [E] to Pickup 碰撞了 person 才显示</li></ul><p>Person</p><ul><li>增加 自定义事件 EquipHat 装备帽子</li><li>增加 静态网格 HatMesh，并且等待穿戴<ul><li>增加 事件 f set static Mesh<ul><li>new Mesh 从 事件 装备帽子中获取</li></ul></li><li>拖动 HatMesh 到 Target</li></ul></li><li>增加 事件 Attach Component to Component<ul><li>绑定父组件<ul><li>Mesh (CharacterMesh)</li></ul></li><li>绑定子组件<ul><li>HatMesh</li></ul></li><li>对齐到目标<ul><li>三个全部对齐到目标</li></ul></li></ul></li></ul><p>角色-帽子 碰撞后 &amp; 按e键 触发 EquipHat</p><ul><li>E key</li><li>Flip Flop</li><li>Cast to BP 角色<ul><li>As 要 绑定Event， 也就是 EquipHat 装备帽子事件</li></ul></li><li>bind 区域的 begin overlap -&gt; other actor</li></ul><p>写好Event后测试</p><p>绑定帽子的位置<br>打开person的骨骼设置<br>person -&gt; 网格体 -&gt; 打开文件夹 -&gt; 打开网格体 -&gt; 打开骨骼<br>找到头部骨骼 search head</p><ul><li>创建 附加 插槽 Hat Socket 绑定帽子Event的socketName</li><li>预览帽子资源，调整位置</li></ul><p>装备帽子后删除帽子<br><img src="/blog/p/614a8811/BP_hat.png" alt="BP_hat.png"></p><p><img src="/blog/p/614a8811/BP_third_person.png" alt="BP_third_person.png"></p><p><img src="/blog/p/614a8811/%E7%BD%91%E6%A0%BC%E9%AA%A8%E9%AA%BC.png" alt="网格骨骼.png"></p><p>创建一个 扣减角色生命值的 Actor<br>03_damage_box -&gt; BP_damage_box -&gt; actor</p><p>玩家</p><ul><li>增加 Health float 属性</li><li>增加 Health 损耗 Event</li></ul><p>物体</p><ul><li>增加碰撞体</li><li>Set</li><li>Set Timer By Event</li><li>扣减玩家生命值 Event</li><li>Apply Damage</li></ul><p><img src="/blog/p/614a8811/%E6%89%A3%E5%87%8F%E8%A7%92%E8%89%B2%E7%94%9F%E5%91%BD%E5%80%BC01.png" alt="扣减角色生命值01.png"><br>要点：</p><ol><li>将 角色 提升为变量</li><li>Set Timer By Event &amp; sub</li><li>Event 执向自定义Event -&gt; ApplyDamage<ul><li>循环 lopping &#x3D; true</li></ul></li><li>角色 蓝图 -&gt; Event AnyDamage</li></ol><p>完整版：</p><ul><li>碰撞体蓝图：<br><img src="/blog/p/614a8811/%E6%89%A3%E5%87%8F%E8%A7%92%E8%89%B2%E7%94%9F%E5%91%BD%E5%80%BC%E5%AE%8C%E6%95%B4%E7%89%8801.png" alt="扣减角色生命值完整版01.png"></li><li>角色蓝图：<br><img src="/blog/p/614a8811/%E6%89%A3%E5%87%8F%E8%A7%92%E8%89%B2%E7%94%9F%E5%91%BD%E5%80%BC%E5%AE%8C%E6%95%B4%E7%89%8802.png" alt="扣减角色生命值完整版02.png"></li></ul><p>增加生命值UI<br>目录：03_damage_box</p><ul><li>用户页面 -&gt; 空间蓝图 -&gt; 用户控件<ul><li>Canvas Panel &amp; ProgressBar</li><li>name：WBP_health_bar<br>Canvas Panel</li></ul></li><li>ProgressBar<ul><li>Percent 进度条数值 可以进行bind<ul><li>要点：从其他蓝图中bind<ol><li>get player pawn 获取与此UI关联的角色</li><li>cast to third person character 将角色转换为第三人称角色</li><li>get health</li><li>*100 mul</li><li>bind<br><img src="/blog/p/614a8811/WBP_health_bar.png" alt="WBP_health_bar.png"></li></ol></li></ul></li></ul></li></ul><p><img src="/blog/p/614a8811/ThirdPerson.png" alt="ThirdPerson.png"></p><p><img src="/blog/p/614a8811/ThirdPerson_CreateHealthBarEvent.png" alt="ThirdPerson_CreateHealthBarEvent.png"></p><p><img src="/blog/p/614a8811/WBP_health_bar_bind.png" alt="WBP_health_bar_bind.png"></p><p>添加 角色血条 到角色画布视图上 Event</p><ul><li>打开蓝图</li><li>添加Event CreateHealthBarEvent<ul><li>create widget -&gt; user interface -&gt; Create Widget<ul><li>绑定角色 Get Player Controller</li></ul></li><li>add to viewport</li></ul></li></ul><p>触发 角色血条 Event<br>当比赛开始时增加血条UI<br>Add Input Mapping的Event BeginPlay事件增加</p><ul><li>add sequence 在原有的基play础上，顺序执行<ul><li>CreateHealthBarEvent 触发上面创建的血条UI事件</li></ul></li></ul><p>玩家离开 则不扣血<br>要点：</p><ol><li>定时器不断触发，将计数器的返回值 存储为变量TimerReference 为定时器句柄</li><li>定时器句柄中 get后，方法：Clear and Invalidate Timer Handle 可以停止定时功能。<br>碰撞体 end overload</li></ol><p>增加特效：粒子系统<br>包：FX Variety Pack</p><p>导入特效包</p><p>扣血碰撞体 增加组件</p><ul><li>粒子发射器 cascade particle system component</li></ul><p>恢复血量碰撞体<br><img src="/blog/p/614a8811/BP_repair_box.png" alt="BP_repair_box.png"></p><h2 id="UE5-课程-第一人称-多人生存游戏"><a href="#UE5-课程-第一人称-多人生存游戏" class="headerlink" title="UE5 课程 第一人称 多人生存游戏"></a>UE5 课程 第一人称 多人生存游戏</h2><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><p>Inventory：建筑物品(家具)清单，财产清单</p><p>主库存组件 or 主项目容器 蓝图容器</p><ul><li>库存相关的功能<ul><li>堆叠物品</li><li>增加</li><li>删除</li></ul></li></ul><p>玩家 快捷栏 组件播放器<br>玩家 物品栏组件<br>存储容器</p><ul><li>锻造工具台</li><li>死去的玩家</li><li>掉在地上的袋子</li></ul><img src="/blog/p/614a8811/%E7%BB%84%E4%BB%B6%E8%93%9D%E5%9B%BE%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB.png" class="" title="组件蓝图继承关系"><ul><li>install plugins Adventure Character</li><li>create 文件夹 man color red</li><li>create _main<ul><li>FirstPerson 文件夹 -&gt; 第一人称蓝图BP_FirstPersonCharacter 复制到 _main</li></ul></li><li>file -&gt; save all </li><li>文件夹 Content 属性 fix up Redirectors in folder<ul><li>修复文件中的重定向</li></ul></li><li>down project files:first person animas, all FBS<ul><li>create dir Man -&gt; Animations 并且导入 Animations.FBS<ul><li>MESH 骨骼 select -&gt; UE4_Mannequin_Skeleton</li></ul></li><li>create dir Man -&gt; Arms 导入Arms.FBS <ul><li>MESH 骨骼 select -&gt; UE4_Mannequin_Skeleton</li></ul></li></ul></li></ul><p>man mesh full SK_Man_Full_01</p><p>动画混合空间</p><ul><li>create Animation -&gt; Blend Space 1D -&gt; UE4_Mannequin_Skeleton<br>混合多个动画之间的协调画面</li></ul><p>assets details 轴设置 -&gt; 水平轴 name：speed</p><p>最小值0<br>最大值800</p><p>步行速度<br>正常奔跑速度：600<br>快速奔跑速度：800 </p><p>创建 角色蓝图 骨骼 选择 UE4_Mannequin_Skeleton<br>FirstAnima_BP</p><p>new State Machine<br>增加状态机</p><ul><li>speed [混合空间，speed：0]</li></ul><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><p>玩家统计数据</p><h3 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h3><p>玩家存储容器</p><h3 id="第-10-章"><a href="#第-10-章" class="headerlink" title="第 10 章"></a>第 10 章</h3><p>创建所有项目</p><h3 id="第11章"><a href="#第11章" class="headerlink" title="第11章"></a>第11章</h3><p>创建部落&#x2F;氏族系统</p><h3 id="第12章创建社会系统"><a href="#第12章创建社会系统" class="headerlink" title="第12章创建社会系统"></a>第12章创建社会系统</h3><h3 id="第-13-章创建开放世界地图"><a href="#第-13-章创建开放世界地图" class="headerlink" title="第 13 章创建开放世界地图"></a>第 13 章创建开放世界地图</h3><h3 id="第-14-章多生物群落-x2F-程序树叶"><a href="#第-14-章多生物群落-x2F-程序树叶" class="headerlink" title="第 14 章多生物群落&#x2F;程序树叶"></a>第 14 章多生物群落&#x2F;程序树叶</h3><h3 id="第15章人工智能系统"><a href="#第15章人工智能系统" class="headerlink" title="第15章人工智能系统"></a>第15章人工智能系统</h3><h3 id="第-16-章程序区"><a href="#第-16-章程序区" class="headerlink" title="第 16 章程序区"></a>第 16 章程序区</h3><h3 id="第-17-章玩家小地图"><a href="#第-17-章玩家小地图" class="headerlink" title="第 17 章玩家小地图"></a>第 17 章玩家小地图</h3><h3 id="第-18-章-保存-x2F-加载系统"><a href="#第-18-章-保存-x2F-加载系统" class="headerlink" title="第 18 章. 保存&#x2F;加载系统"></a>第 18 章. 保存&#x2F;加载系统</h3><h3 id="第-19-章-Steam-会话-x2F-前端小部件"><a href="#第-19-章-Steam-会话-x2F-前端小部件" class="headerlink" title="第 19 章 Steam 会话&#x2F;前端小部件"></a>第 19 章 Steam 会话&#x2F;前端小部件</h3><h3 id="第-20-章-专用服务器设置和托管"><a href="#第-20-章-专用服务器设置和托管" class="headerlink" title="第 20 章 专用服务器设置和托管"></a>第 20 章 专用服务器设置和托管</h3><h3 id="第21章"><a href="#第21章" class="headerlink" title="第21章"></a>第21章</h3><p>其他</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;暂无描述&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>Unity</title>
    <link href="https://ayou129.github.io/blog/p/c8a4b253/"/>
    <id>https://ayou129.github.io/blog/p/c8a4b253/</id>
    <published>2022-12-23T19:38:15.000Z</published>
    <updated>2022-10-21T19:59:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h3><blockquote><p><a href="https://learn.microsoft.com/zh-cn/visualstudio/gamedev/unity/unity-scripting-upgrade" target="_blank" rel="noopener">https://learn.microsoft.com/zh-cn/visualstudio/gamedev/unity/unity-scripting-upgrade</a></p></blockquote><p>编辑 项目设置 Player Configuration </p><ul><li>Scripting Backend</li><li>C++<ul><li>(首选).NET Standard 2.1。 此 配置文件与 .NET Foundation 发布的 .NET Standard 2.1 配置文件 匹配。 Unity 建议对新项目使用 .NET Standard 2.1。 它比 .NET 4.x 小，有利于尺寸受限的平台。 此外，Unity 承诺在 Unity 支持的所有平台上支持此配置文件。</li><li>.NET Framework。 此配置文件提供对最新 .NET 4 API 的访问权限。 它包括.NET Framework类库中提供的所有代码，并支持 .NET Standard 2.1 配置文件。 如果 .NET Standard 2.0 配置文件中未包含项目所需的部分 API，请使用 .NET 4.x 配置文件。 但此 API 的某些部分并非在所有 Unity 平台上均受支持。</li></ul></li></ul><h3 id="Unity-Scene-缩放"><a href="#Unity-Scene-缩放" class="headerlink" title="Unity Scene 缩放"></a>Unity Scene 缩放</h3><p>Mac 两手指滑动</p><h3 id="输出信息到控制台上"><a href="#输出信息到控制台上" class="headerlink" title="输出信息到控制台上"></a>输出信息到控制台上</h3><ul><li>输出函数 Print()</li><li>输出函数 Debug.log()</li></ul><p>相同点：</p><ul><li>都能将 <code>字符串信息</code> 打印到 Unity编辑器的 <code>Console控制台</code> 上</li><li>都来自 <code>UnityEngine</code> 命名空间，使用前必须 <code>using UnityEngine;</code></li></ul><p>不同点：</p><ul><li>Print 方法 来自于 <code>MonoBehaviour</code>,使用前必须继承<code>MonoBehaviour</code></li><li>Debug.log 不需要继承 就可以使用</li></ul><h2 id="Inspector"><a href="#Inspector" class="headerlink" title="Inspector"></a>Inspector</h2><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><h4 id="Sprite-Renderer-图片精灵渲染"><a href="#Sprite-Renderer-图片精灵渲染" class="headerlink" title="Sprite Renderer 图片精灵渲染"></a>Sprite Renderer 图片精灵渲染</h4><blockquote><p>用于渲染__精灵__并控制其在 2D 和 3D 项目场景中的可视化效果。</p></blockquote><h4 id="Rigidbody-2D-增加重力"><a href="#Rigidbody-2D-增加重力" class="headerlink" title="Rigidbody 2D 增加重力"></a>Rigidbody 2D 增加重力</h4><h4 id="CircleCollider-2D-圆形碰撞器，可以设置偏移量"><a href="#CircleCollider-2D-圆形碰撞器，可以设置偏移量" class="headerlink" title="CircleCollider 2D 圆形碰撞器，可以设置偏移量"></a>CircleCollider 2D 圆形碰撞器，可以设置偏移量</h4><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/class-CircleCollider2D.html" target="_blank" rel="noopener">https://docs.unity3d.com/cn/current/Manual/class-CircleCollider2D.html</a></p></blockquote><h4 id="Script-行为剧本"><a href="#Script-行为剧本" class="headerlink" title="Script 行为剧本"></a>Script 行为剧本</h4><p>创建Test脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用程序集，引入并功能</span></span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 和组件建立通信，使用插槽</span></span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D myRigidbody;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="comment">// 在第一帧更新之前调用Start</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// gameObject.name = &#x27;角色名&#x27;;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="comment">// 每帧调用一次更新</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>gameObject</strong></p><ul><li>gameObject 对应 Inspector对象</li><li>gameObject.name 对应 Inspector的 name</li><li>gameObject.tag 对应 Inspector的 tag</li></ul><p><strong>Script插槽</strong><br><code>Script</code>只能和 <code>ganmeObject</code> 交互，和其他组件之间要引用建立通信，使用<code>插槽</code></p><p><strong>transform</strong><br>位置组件，有两个属性</p><ul><li>position:游戏对象中心点在世界空间的位置</li><li>localPosition:游戏对象中心点在父类空间的位置</li></ul><p>世界空间就是Unity最大的空间，可以创建一个无任何父节点的空对象<br>position 0<br>rotation 0<br>scale 1</p><p><strong>Time</strong></p><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/TimeFrameManagement.html" target="_blank" rel="noopener">https://docs.unity3d.com/cn/current/Manual/TimeFrameManagement.html</a></p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 返回自上一帧完成以来所经过的时间(以秒为单位)。该值取决于游戏或应用程序运行的每秒帧数(FPS)</span><br><span class="line">Time.deltaTime </span><br><span class="line"></span><br><span class="line">## 保证无论帧率多少，运算都会计算出相同的值</span><br><span class="line">速度 = 运算 * Time.deltaTime</span><br></pre></td></tr></table></figure><p>预制，就像一个游戏对象的蓝图<br>管道生成器<br>每秒生成管道</p><p><strong>变量</strong><br>脚本绑定UI对象的方式</p><ul><li>GameObject.Find()<ul><li>查找目标的路径是从Assert的相对路径来查找的，不用将脚本挂载到要查找的对象也可以实现查找</li><li>返回的是对象的Inspector的完整属性，如果对象下面挂载了其他对象，也一并包含(子对象)</li></ul></li><li>GetComponent<ComponentType>();<ul><li>必须挂载在对象下面的脚本</li><li>获取对象的一部分属性，其他对象的脚本是无法访问当前对象的属性的</li></ul></li></ul><p><strong>Instantiate</strong><br>克隆对象 被克隆的对象 位置 四元素旋转</p><p><strong>Destory</strong><br>Destory(object,销毁延时float); 销毁对象</p><p><strong>For</strong></p><ul><li>生成随机的树<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject objectToSpawn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start is called before the first frame update</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 生成树的数量</span></span><br><span class="line">    <span class="built_in">int</span> numberOfTreesToSpawn = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; numberOfTreesToSpawn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 任意位置 <span class="doctag">TODO:</span>这里第三个参数需要补充 应该是和i有关系的</span></span><br><span class="line">        Vector3 randomPosition = <span class="keyword">new</span> Vector3(Random.Range(<span class="number">11</span>, <span class="number">-11</span>), Random.Range(<span class="number">4</span>, <span class="number">-7</span>));</span><br><span class="line">        <span class="comment">// 克隆对象</span></span><br><span class="line">        Instantiate(objectToSpawn, randomPosition, Quaternion.identity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>if else</strong></p><ul><li>根据玩家不同性别选择不同角色对象<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject female; <span class="comment">// 女性角色</span></span><br><span class="line"><span class="keyword">public</span> GameObject male; <span class="comment">// 男性角色</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">bool</span> isFemale;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start is called before the first frame update</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 读取玩家信息...</span></span><br><span class="line">    <span class="comment">// 匹配玩家的性别分配不同角色</span></span><br><span class="line">    <span class="keyword">if</span> (isFemale)</span><br><span class="line">    &#123;</span><br><span class="line">        Instantiate(female, Vector3.zero, Quaternion.identity);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        Instantiate(male, Vector3.zero, Quaternion.identity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>用户输入</strong><br>有两种方式</p><ol><li>Input 原始<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> speed = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start is called before the first frame update</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 根据用户案件输入改变位置</span></span><br><span class="line">    Vector3 playerInput = <span class="keyword">new</span> Vector3(Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>), Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>), <span class="number">0</span>);</span><br><span class="line">    transform.position = transform.position + playerInput.normalized * speed * Time.deltaTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Input Manager</li></ol><p><strong>Vector2.MoveTowards</strong><br>Vector2.MoveTowards(起始位置，目标位置，速度);</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject target; <span class="comment">// 目标对象的位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> speed; <span class="comment">// 行走时的速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 跟踪玩家，例如：怪物追踪玩家</span></span><br><span class="line">    transform.position = Vector2.MoveTowards(transform.position, transform.transform.position, speed * Time.deltaTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>OnTriggerEnter2D</strong><br>当对象碰撞或接触另一个对象时执行</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject target; <span class="comment">// 目标对象的位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> speed; <span class="comment">// 行走时的速度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D other</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 碰撞的对象信息 other</span></span><br><span class="line">    <span class="comment">// 碰撞后的行为：被攻击(粒子特效)、加减分数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安全游戏系统"><a href="#安全游戏系统" class="headerlink" title="安全游戏系统"></a>安全游戏系统</h3><p>二进制格式，保存所有想要的数据。<br>三个重要组件</p><ul><li>Gameplay Data</li><li>Save Game Container</li><li>Serialization System To write the Binary File 序列化系统读写二进制文件</li></ul><p>Assets</p><ul><li>Scripts<ul><li>Serialization<ul><li>SerializationManager</li></ul></li></ul></li></ul><p>TODU：待补充…</p><h3 id="帧同步"><a href="#帧同步" class="headerlink" title="帧同步"></a>帧同步</h3><h2 id="Unity-多人游戏框架"><a href="#Unity-多人游戏框架" class="headerlink" title="Unity 多人游戏框架"></a>Unity 多人游戏框架</h2><blockquote><p><code>Netcode for GameObjects</code> <a href="https://www.bilibili.com/video/av898075461/?vd_source=dbdc982d62ac5b2bb1058ae9896d20df" target="_blank" rel="noopener">https://www.bilibili.com/video/av898075461/?vd_source=dbdc982d62ac5b2bb1058ae9896d20df</a></p></blockquote><p>主要特点：</p><ul><li>服务器客户端都跑 Unity，运行同一套代码，但是可能跑不同逻辑分支</li><li>状态同步(区别于lock-step帧同步)</li></ul><p>安装: <code>Package Manager</code></p><p>其他介绍：<br>自定义服务器  or 云服务提供商<br>实时服务、云架构<br>云技术和游戏服务器托管</p><p>同步不同游戏循环的解决方案： <code>Netcode for GameObjects</code> 和连接工具 Relay(转播、中继节点)、Lobby(大厅)、Multiplay和Matchmaker<br>网络变量、远程过程调用，同步世界之间的关键信息<br>运行载体：桌面、手机、控制台<br>不同阶段：开发阶段、预发布阶段、生产阶段</p><p>游戏的阶段：<br>客户端启动：</p><ol><li>玩家进行匿名认证</li><li>Host在Lobby服务中创建一个Lobby，向其他玩家宣告上线</li><li>Relay服务的后台创建新位置</li><li>使用数据位置调用Netcode的start，并将网络场景切换到角色选择场景(包含网络列表的网络对象)</li><li>客户端，大厅列表，后台向Lobby服务请求该主机的Relay信息，请求Relay服务并且加入它，启动一个Netcode连接</li><li>主机端Netcode会批准连接，在 <code>自定义会话管理器</code> 中创建一个 新的玩家条目，即使断开连接，也不会丢失进程</li></ol><p>GameObject上需要有一个网络转换(Network transform),让他们的位置自动复制，从主机到所有客户端<br>游戏中的所有状态都使用网络变量：</p><ul><li>动画和特效</li><li>法师的火弩箭</li><li>坦克的近战攻击</li><li>门开的状态</li><li>弓箭手的箭</li><li>机器人被破坏的状态</li><li>角色的生命值</li></ul><p>网络条表示状态<br>支持晚加入，这样就不必维护自己的点RPC列表，以便在新玩家连接时发送</p><p>门状态使用 <code>netbars</code> 作为它的状态，点击按钮时，它们会更新状态主机站点，并且复制到所有客户端，并且使用网络动画器触发动画。<br>箭头正在使用 <code>fork对象池</code> ，使用自定义生成处理程序来管理客户端对象的生命周期</p><p>缓解延迟和抖动：</p><ul><li>角色选择的权威客户端</li><li>动作预测(在点击时运行一个小的跳跃动画来怼输入做出相应)</li><li>缓冲插值(Buffer interpolation)</li><li>网络变换</li></ul><p>Relay：连接玩家进行端到端体验的枢纽，将A的数据包传送到B<br>Relay Server<br>特点：</p><ul><li>安全性，加密方式</li><li>低延迟</li></ul><p>Lobby：</p><ul><li>创建和浏览公共游戏的方法<ul><li>邀请朋友参加私人游戏(人类可读+机器唯一ID)</li><li>Quick Join的轻量级玩家匹配功能(公开游戏)</li></ul></li><li>提供玩家设备提供一个手机和共享安全信息的场所</li><li>灵活的状态存储，具有不同级别</li></ul><p>语音系统<br>社交游戏、竞技游戏、</p><p>Multiplay：创建和上传游戏服务器fleet和游戏服务器容器，将它们分配到世界各地的混合数据中心，为游戏发布做好准备。</p><p>Matchmaker：玩家匹配系统</p><p>很多开发工作，迭代、处理自己的队列、自己的构建，Alpha&amp;Beta，公开测试，最坏的情况：停机部署和规则修复<br>结论就是需要一个支持实验的系统，支持A&#x2F;B测试、调优、尤其复杂情况时</p><p>Unity面板中：</p><ul><li>Environments系统：为生产、开发、QA执行不同的隔离</li></ul><p>新增两种隔离类型队列(Queue)和池(Pool)</p><h2 id="帧同步-1"><a href="#帧同步-1" class="headerlink" title="帧同步"></a>帧同步</h2><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><h3 id="王者荣耀-商业级手游"><a href="#王者荣耀-商业级手游" class="headerlink" title="王者荣耀 商业级手游"></a>王者荣耀 商业级手游</h3><h3 id="战斗地形的创建-地形、植物、箭塔"><a href="#战斗地形的创建-地形、植物、箭塔" class="headerlink" title="战斗地形的创建 地形、植物、箭塔"></a>战斗地形的创建 地形、植物、箭塔</h3><p>导入地形<br>增加植物<br>增加箭塔<br>  Assets-&gt;Model，选中箭塔，放到合适的位置<br>箭塔增加材质<br>  Assets-&gt;Model，选中材质拖动到箭塔中<br>增加英雄</p><h3 id="玩家控制"><a href="#玩家控制" class="headerlink" title="玩家控制"></a>玩家控制</h3><h4 id="手游"><a href="#手游" class="headerlink" title="手游"></a>手游</h4><blockquote><p>虚拟摇杆插件(EasyTouch)</p></blockquote><p>创建空元素</p><ul><li>EasyTouch 且添加组件 Assets-&gt;EasyTouch-&gt;Plugins-&gt;EasyTouch</li><li>EasyJoystick 且添加组件 Assets-&gt;EasyTouch-&gt;Plugins-&gt;EasyJoystick</li></ul><p>添加完之后 Hierarchy 会出现 MoveController</p><p>如何使用</p><ol><li>在英雄上添加 <code>MoveController</code> 组件，在Assets里面找</li></ol><h4 id="端游"><a href="#端游" class="headerlink" title="端游"></a>端游</h4><blockquote><p>新版输入系统 <code>input system</code></p></blockquote><p>创建用户 player 胶囊capsule tag&#x3D;&gt; player<br>创建 Assets &#x3D;&gt; prefabs，将player纳入</p><img src="/blog/p/c8a4b253/createUser01.png" class="" title="createUser01.png"><p>安装</p><ul><li>windows &#x3D;&gt;</li><li>package Mamager &#x3D;&gt;</li><li>unity registry &#x3D;&gt;</li><li>input system(输入控制器 键盘等等) &#x3D;&gt;</li><li>统统 yes yes</li></ul><p>OnFoot</p><ul><li>Movement wsad value Vector2</li><li>Jump space</li><li>Look Delta 鼠标滑动</li><li>Crouch 下蹲</li><li>Spring 加速</li></ul><img src="/blog/p/c8a4b253/InputManager01.png" class="" title="InputManager01.png"><p>三、方向键<br>新创建InputManger、PlayerMotor 增加到player 组件当中<br>InputManger获取到方向改变(void FixedUpdate 读取玩家的当前状态 固定帧处理) &#x3D;&gt;<br>执行玩家引擎(ProcessMove(Vector2的x和y)) &#x3D;&gt;<br>CharActerController.move(transform.TransformDirection(moveDirection)  速度  每帧产生的时间)</p><p>四、重力<br>Velocity速度<br>gravity重力<br>isGrounded 已接地<br>重力值 -9.8f<br>核心：让用户自然下坠(重力*deltaTime)，下坠到某个值就停下(地板)<br>用户y坐标降低</p><p>五、跳跃<br>y &#x3D; 跳跃的高度<em>重力</em>变数(可以减(*0.5))</p><p>六、加速<br>是否加速 sprinting<br>按了shift键就把速度提升到8，是否加速ing</p><p>七、蹲<br>是否下蹲 bool crouching<br>下蹲差 bool lerpCrouch &#x3D; false;<br>下蹲时间 float crouchTimer &#x3D; 0;</p><p>八、视角</p><ol><li>Look &#x3D;&gt; Vector2 bind Delta 鼠标</li><li>PlayerLook.cs  ProcessLook<br>InputManger 引入  <figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">private PlayerLook playerLook<span class="comment">;</span></span><br><span class="line"><span class="attribute">playerLook</span> <span class="operator">=</span> GetComponent&lt;PlayerLook&gt;()<span class="comment">;</span></span><br><span class="line">void LateUpdate()</span><br><span class="line">&#123;</span><br><span class="line">  playerLook.ProcessLook(onFoot.Look.ReadValue&lt;Vector2&gt;())<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Player&#x3D;&gt;摄像机 绑定到 player组件的cam上</li></ol><h4 id="摄像机玩家跟随"><a href="#摄像机玩家跟随" class="headerlink" title="摄像机玩家跟随"></a>摄像机玩家跟随</h4><p>移动时改变玩家视角</p><ol><li><code>Main Camera</code> 增加组件 <code>CameraFollow</code> script</li><li>编写 <code>CameraFollow</code><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">System</span>.Collections;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">System</span>.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> C : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private <span class="keyword">Transform</span> player;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> cameraX;</span><br><span class="line">    <span class="type">float</span> cameraZ;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">public</span> <span class="type">float</span> y = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">public</span> <span class="type">float</span> z = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    // <span class="keyword">Start</span> <span class="keyword">is</span> <span class="keyword">called</span> <span class="keyword">before</span> the first frame <span class="keyword">update</span></span><br><span class="line">    <span class="type">void</span> <span class="keyword">Start</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // <span class="keyword">Update</span> <span class="keyword">is</span> <span class="keyword">called</span> once per frame</span><br><span class="line">    <span class="type">void</span> <span class="keyword">Update</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(player)&#123;</span><br><span class="line">            cameraX = player.position.x;</span><br><span class="line">            cameraZ = player.position.z;</span><br><span class="line">            this.<span class="keyword">transform</span>.position = <span class="built_in">new</span> Vector3(cameraX, y, cameraZ + z)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">3.</span> `CameraFollow` script 中将玩家Player 添加到 类成员Player</span><br></pre></td></tr></table></figure>第二个方案：标准资源包中 Standard Assets -&gt; Scripts -&gt; Camera Scripts -&gt; SmoothFollow</li><li><code>Main Camera</code> 增加组件 <code>SmoothFollow</code> script</li><li><code>SmoothFollow</code> script 中将玩家 添加到 Target</li></ol><h4 id="攻击特效"><a href="#攻击特效" class="headerlink" title="攻击特效"></a>攻击特效</h4><p>触发：攻击按钮<br>画布{<br>    攻击按钮1<br>    攻击按钮2<br>    攻击按钮3 大招<br>    闪现<br>    治疗<br>}<br>执行：动画事件<br>创建玩家攻击脚本Assets&#x2F;Scripts&#x2F;PlayerAttack.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAttack</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> ParticleSystem fire1;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> GameObject fire2;</span><br><span class="line">    <span class="keyword">private</span> Animator ani; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        ani = GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Atk1</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        ani.SetInteger(<span class="string">&#x27;state&#x27;</span>, AnimState.ATTACK1)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Atk1</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        ani.SetInteger(<span class="string">&#x27;state&#x27;</span>, AnimState.ATTACK2)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Atk1</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        ani.SetInteger(<span class="string">&#x27;state&#x27;</span>, AnimState.ATTACK3)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 播放 粒子效果，点击攻击后时间线走一部分</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EffectPlayer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        fire1.play();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将状态设置回来，在时间线的尾部</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ResetIdle</span>()</span>&#123;</span><br><span class="line">        ani.SetInteger(<span class="string">&#x27;state&#x27;</span>, AnimState.IDLE)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Animator面板中，Entry-&gt;idle1-&gt;n个动画中(1技能、2技能、3技能)增加事件Events，不同时间线不同事件<br>给画布中的按钮 指定 事件，onclick-&gt;playerAttack-&gt;指定技能</p><img src="/blog/p/c8a4b253/PlayerAttack.png" class="" title="PlayerAttack.png"><h3 id="游戏打包-APK"><a href="#游戏打包-APK" class="headerlink" title="游戏打包 APK"></a>游戏打包 APK</h3><ol><li>Unity-&gt;file-&gt;Build Setting</li><li>选择平台，需要提前下载好打包软件</li><li>点击player settings，设置相关信息，基本信息+包信息</li><li>配置安卓环境 Unity Preferences-&gt;External Tools-&gt;安卓相关信息</li><li>build-&gt;目录名称</li></ol><h2 id="ISO-x2F-OSI-参考模型"><a href="#ISO-x2F-OSI-参考模型" class="headerlink" title="ISO&#x2F;OSI 参考模型"></a>ISO&#x2F;OSI 参考模型</h2><a href="/blog/p/cf930505/" title="Mian">Mian</a><p>SocketModel</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SocketModel</span>&#123;</span><br><span class="line">    <span class="comment">// 一级协议，区分 所属模块</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">byte</span> type = &#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line">    <span class="comment">// 二级协议，区分 模块下所属子模块</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> area = &#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line">    <span class="comment">// 三级协议，区分 当前处理逻辑功能</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> command = &#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line">    <span class="comment">// 消息体 当前需要处理的主体数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> message = &#123;<span class="keyword">get</span>;<span class="keyword">set</span>;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SocketModel</span>()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SocketModel</span>(<span class="params"><span class="built_in">byte</span> t, <span class="built_in">int</span> a,iunt c,<span class="built_in">object</span> o</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = t;</span><br><span class="line">        <span class="keyword">this</span>.area = a;</span><br><span class="line">        <span class="keyword">this</span>.command = c;</span><br><span class="line">        <span class="keyword">this</span>.message = o;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">GetMessage</span>&lt;<span class="title">T</span>&gt;()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (T) message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="temp"><a href="#temp" class="headerlink" title="temp"></a>temp</h3><p>动画状态机</p><h3 id="游戏模式构建"><a href="#游戏模式构建" class="headerlink" title="游戏模式构建"></a>游戏模式构建</h3><h3 id="地形创建"><a href="#地形创建" class="headerlink" title="地形创建"></a>地形创建</h3><h4 id="NGUI插件"><a href="#NGUI插件" class="headerlink" title="NGUI插件"></a>NGUI插件</h4><h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><h3 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h3><p>核心游戏场景逻辑<br>地图生成<br>地形系统<br>英雄生成<br>消息接收<br>加载英雄模型<br>设置英雄模型<br>死亡处理</p><h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><h4 id="玩家匹配"><a href="#玩家匹配" class="headerlink" title="玩家匹配"></a>玩家匹配</h4><p>房间</p><ul><li>私有房间</li><li>公开房间</li><li>自定义</li></ul><h4 id="技能模块"><a href="#技能模块" class="headerlink" title="技能模块"></a>技能模块</h4><p>技能程序框架</p><ul><li>攻击</li></ul><h4 id="战队功能"><a href="#战队功能" class="headerlink" title="战队功能"></a>战队功能</h4><h3 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h3><p>寻路<br>移动</p><p>画面</p><ul><li>血条(CRUD)</li></ul><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>内存<br>渲染</p><p>资源管理</p><p>Shader<br>AI<br>图形学<br>引擎架构</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="游戏开发流程"><a href="#游戏开发流程" class="headerlink" title="游戏开发流程"></a>游戏开发流程</h3><ol><li>将项目代码添加到git当中</li><li>unity项目结构<br>脚本Script<br>艺术Art<br>预制文件夹<br>资产包文件夹</li><li>部署和集成自动化系统</li><li>沙盒项目(用于清理Assets Store资产包和试验品)</li><li>提出一个合理的计划 trello 团队管理工具 (清单、进度)</li><li>分享进度 WebGl 或 Steam</li><li>建立游戏的垂直部分，不要构建整个事务、整个故事、整个other<br>建立游戏中最好玩的地方&amp;可玩版本(告诉自己其他玩家为什么会玩)<br>建立核心，再在基础之上往上堆栈</li><li>下一步是什么</li></ol><h3 id="搭建示例舞台"><a href="#搭建示例舞台" class="headerlink" title="搭建示例舞台"></a>搭建示例舞台</h3><h4 id="FPS"><a href="#FPS" class="headerlink" title="FPS"></a>FPS</h4><p>一、新建舞台 create cube<br>地板 floor</p><img src="/blog/p/c8a4b253/floor.png" class="" title="floor.png"><p>方块xN</p><img src="/blog/p/c8a4b253/%E6%96%B9%E5%9D%97xN01.png" class="" title="方块xN01.png"><img src="/blog/p/c8a4b253/%E6%96%B9%E5%9D%97xN02.png" class="" title="方块xN02.png"><p>灯光调暗 Directional_light_intensity 0.7</p><img src="/blog/p/c8a4b253/Directional_light_intensity.png" class="" title="Directional_light_intensity.png"><h2 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="3D数学"><a href="#3D数学" class="headerlink" title="3D数学"></a>3D数学</h3><h4 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h4><p><strong>笛卡尔坐标系</strong></p><blockquote><p><code>直角坐标系</code> 和 <code>斜坐标系</code> 统称为 <code>笛卡尔坐标系</code></p></blockquote><ul><li>相交于原点的两条数轴，构成了平面仿射坐标系</li><li>两条数轴上的度量单位相等，则称此仿射坐标系为笛卡尔坐标系</li><li>两条数轴互相垂直的笛卡尔坐标系，称为笛卡尔直角坐标系，否则称为笛卡尔斜角坐标系</li></ul><p>2D笛卡儿坐标系中，可用(x，y)来表示一个点，被称为坐标。</p><p>2D笛卡儿坐标系的基础上，增加一条垂直于2D平面的轴就构成了3D笛卡儿坐标系。<br>3D笛卡儿坐标系中，(x，y，z)用来表示一个点。</p><p><strong>左手坐标系 与 右手坐标系</strong><br>在3D笛卡儿坐标系中，有两种方式可以确定Z轴的方向，即左手坐标系与右手坐标系。</p><ul><li>左手坐标系：伸开左手，大拇指指向X轴正方向，食指指向Y轴正方向，其他3个手指指向Z轴正方向。</li><li>右手坐标系：伸开右手，大拇指指向X轴正方向，食指指向Y轴正方向，其他3个手指指向Z轴正方向。<img src="/blog/p/c8a4b253/%E5%B7%A6%E6%89%8B%E5%9D%90%E6%A0%87%E7%B3%BB%E5%92%8C%E5%8F%B3%E6%89%8B%E5%9D%90%E6%A0%87%E7%B3%BB.png" class="" title="左手坐标系和右手坐标系">两种坐标系的旋转正方向不同，左手坐标系是顺时针方向旋转，右手坐标系是逆时针方向旋转。<img src="/blog/p/c8a4b253/%E5%B7%A6%E6%89%8B%E5%9D%90%E6%A0%87%E7%B3%BB%E5%92%8C%E5%8F%B3%E6%89%8B%E5%9D%90%E6%A0%87%E7%B3%BB%E7%9A%84%E6%97%8B%E8%BD%AC%E6%96%B9%E5%90%91.png" class="" title="左手坐标系和右手坐标系的旋转方向"></li><li>常见左手坐标系<ul><li>Unity 3D(世界坐标系)</li><li>Direct 3D</li></ul></li><li>常见右手坐标系<ul><li>3D笛卡尔坐标系</li><li>OpenGL</li></ul></li></ul><h4 id="世界坐标系"><a href="#世界坐标系" class="headerlink" title="世界坐标系"></a>世界坐标系</h4><blockquote><p>全局坐标系</p></blockquote><ul><li>唯一切固定不变</li><li>建立了描述其他坐标系所需的参考和框架，即可以用世界坐标系描述其他坐标系，但是不能用更大的坐标系描述世界坐标系。</li><li>描述场景内所有物体的<code>位置和方向</code>的基准，可以使用<code>transform.position</code>获取<code>游戏对象的世界坐标</code>。</li></ul><p>因为Unity使用左手坐标系，so：</p><img src="/blog/p/c8a4b253/Unity%E4%BD%BF%E7%94%A8%E5%B7%A6%E6%89%8B%E5%9D%90%E6%A0%87%E7%B3%BB.png" class="" title="Unity使用左手坐标系"><p>在游戏对象的Transform组件中，reset后，此时位置就位于世界坐标系的原点。</p><h4 id="本地坐标系"><a href="#本地坐标系" class="headerlink" title="本地坐标系"></a>本地坐标系</h4><h5 id="本地坐标系-1"><a href="#本地坐标系-1" class="headerlink" title="本地坐标系"></a>本地坐标系</h5><blockquote><p>局部坐标系(模型或物体坐标系)，它是与特定物体相关联的坐标系，每个物体都有，当物体发生平移或旋转时，其本地坐标系也会随之发生平移或旋转。</p></blockquote><p>模型Mesh保存的顶点坐标均为本地坐标系下的坐标；每个模型的本地坐标系的位置和朝向由建模师在建模软件中设定，在<code>引擎中无法修改</code>。</p><p>选中了某个物体后，显示的坐标系就是本地坐标系</p><h5 id="父坐标系"><a href="#父坐标系" class="headerlink" title="父坐标系"></a>父坐标系</h5><p>用于描述物体间相对位置关系。指的是物体父对象的本地坐标系。</p><p>子物体将父物体的坐标点作为自身的坐标原点</p><ul><li>使用<code>transform.localPosition</code>可以获得物体在父物体的本地坐标系中的位置。<ul><li>该物体有父物体，获得其在<code>父物体的本地坐标系中的坐标</code>。</li><li>该物体没有父物体，获得的是<code>该物体在世界坐标系中的坐标</code>。</li></ul></li><li>在Inspector视图中显示的数值为localPosition的值。</li></ul><h5 id="惯性坐标系"><a href="#惯性坐标系" class="headerlink" title="惯性坐标系"></a>惯性坐标系</h5><p>惯性坐标系是为了简化从世界坐标系到本地坐标系的转换而引入的一种新坐标系。<br>惯性坐标系的原点和本地坐标系的原点重合，但惯性坐标系的坐标轴平行于世界坐标系的坐标轴。</p><img src="/blog/p/c8a4b253/Unity%E6%83%AF%E6%80%A7%E5%9D%90%E6%A0%87%E7%B3%BB.png" class="" title="Unity惯性坐标系"><h4 id="屏幕坐标系"><a href="#屏幕坐标系" class="headerlink" title="屏幕坐标系"></a>屏幕坐标系</h4><blockquote><p>建立在屏幕上的二维坐标系。</p></blockquote><p>Unity的屏幕坐标系以屏幕左下角对应坐标系的原点，屏幕水平方向对应坐标系的X轴，屏幕垂直方向对应坐标系的Y轴。</p><p>坐标以像素来定义：</p><ul><li>屏幕的左下角坐标为(0，0)</li><li>右上角坐标为(Screen.width，Screen.height)</li><li>Z轴的坐标是摄像机的世界坐标系中的Z轴坐标的负值。<img src="/blog/p/c8a4b253/Unity%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E7%B3%BB.png" class="" title="Unity屏幕坐标系"></li></ul><p><code>鼠标位置坐标</code>属于屏幕坐标，通过<code>Input.MousePosition</code>可以获得该位置的坐标。<br><code>手指触摸屏幕</code>属于屏幕坐标，通过<code>Input.GetTouch(0).position</code>可以获得单个手指触摸屏幕时手指的坐标。</p><h4 id="视口坐标系"><a href="#视口坐标系" class="headerlink" title="视口坐标系"></a>视口坐标系</h4><blockquote><p>视口坐标系主要用在摄像机显示中，可以在摄像机的属性窗口中看到。</p></blockquote><p>视口坐标系是将Game视图的屏幕坐标系单位化，即标准化之后的屏幕坐标。视口坐标与屏幕坐标的属性相同。其范围是左下角为起点(0，0)，右上角为终点(1，1)，其余与屏幕坐标同理。</p><p>利用比例可以控制点在屏幕内的位置，而不用关注屏幕实际大小的变化，常用于自适应。例如</p><ul><li>Camera的世界坐标是(0，0，-10)，屏幕大小为800像素×600像素，则屏幕的中间点的视口坐标为(0.5，0.5，10)。</li></ul><p>视口坐标系对于场景的显示非常重要，当使用多个摄像机在同一个场景中显示多个视口时，需要使用视口坐标系。一个摄像机对应一个视口，视口预览展示了摄像机看到的所有物体，其默认大小是Width&#x3D;1、Height&#x3D;1，位置也是从0到1，即左下角为(0，0)，右上角为(1，1)。</p><p>摄像机前面的长方形框为视口。视口坐标与屏幕坐标一致，指向为Z轴正方向，Z轴的坐标是摄像机的世界坐标系中的Z轴坐标的负值。</p><img src="/blog/p/c8a4b253/Unity%E8%A7%86%E5%8F%A3%E5%9D%90%E6%A0%87%E7%B3%BB.png" class="" title="Unity视口坐标系"><h4 id="坐标系的转换"><a href="#坐标系的转换" class="headerlink" title="坐标系的转换"></a>坐标系的转换</h4><p><code>世界坐标系</code>和<code>本地坐标系</code>的相互转换函数如下。</p><ul><li>Transform.TransformPoint(Vector3 position)：将一个坐标点从本地坐标系转换到世界坐标系。</li><li>Transform.InverseTransformPoint(Vector3 position)：将一个坐标点从世界坐标系转换到本地坐标系。</li><li>Transform.TransformDirection(Vector3 direction)：将一个方向从本地坐标系转换到世界坐标系。</li><li>Transform.InverseTransformDirection(Vector3 direction)：将一个方向从世界坐标系转换到本地坐标系。</li><li>Transform.TransformVector(Vector3 vector)：将一个向量从本地坐标系转换到世界坐标系。</li><li>Transform.InverseTransformVector(Vector3 vector)：将一个向量从世界坐标系转换到本地坐标系。</li></ul><p>其他常用的一些函数，如Transform.forward()、Transform.right()、Transform.up()，则表示当前物体的本地坐标系的Z轴、X轴、Y轴在世界坐标系中的指向。</p><p><code>屏幕坐标系</code>与<code>世界坐标系</code>的相互转换函数如下。</p><ul><li>Camera.ScreenToWorldPoint(Vector3 position)：将屏幕坐标系转换为世界坐标系。</li><li>Camera.WorldToScreenPoint(Vector3position)：将世界坐标系转换为屏幕坐标系。</li></ul><p><code>屏幕坐标系</code>与<code>视口坐标系</code>的相互转换函数如下。</p><ul><li>Camera.ScreenToViewportPoint(Vector3 position)：将屏幕坐标系转换为视口坐标系。</li><li>Camera.ViewportToScreenPoint(Vector3 position)：将视口坐标系转换为屏幕坐标系。</li></ul><p><code>世界坐标系</code>与<code>视口坐标系</code>的相互转换函数如下。</p><ul><li>Camera.WorldToViewportPoint(Vector3 position)：将世界坐标系转换为视口坐标系。</li><li>Camera.ViewportToWorldPoint(Vector3 position)：将视口坐标系转换为世界坐标系。</li></ul><h4 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>在空间中，向量用一段有方向的线段来表示，可以用于描述具有大小和方向的物理量</p><ul><li>物体运动的速度</li><li>加速度</li><li>摄像机观察方向</li><li>刚体受到的力等</li></ul><p>向量是物理、动画、三维图形的基础。</p><p>在数学中，向量(Vector3)也被称为矢量，是指具有大小和方向的量。</p><ul><li>向量的长度，也被称为“模”，也是向量的大小。</li><li>向量的方向描述了空间中向量的指向。</li></ul><p>在Unity中，点和向量都是以(x，y，z)的形式表示的。向量有两种类型</p><ul><li>Vector2(2D)</li><li>Vector3(3D)</li></ul><p>实际应用：</p><ul><li>设置某个物体的位置，使用 <code>Vector类型</code></li><li>物体沿着某个方向以某个速度移动，使用 <code>Vector类型</code> 表示速度的向量值，即速度的大小和方向</li><li>计算两个物体之间的距离，可以计算两个物体之间为起始和终点的向量的长度<br>TODO 待补充实际代码</li></ul><p><code>transform.position</code> 表示一个点，即物体在世界坐标系中的点。<br><code>transform.forward</code> 表示一个向量，即当前物体的本地坐标系的z轴在世界坐标系中的指向。</p><h5 id="向量运算"><a href="#向量运算" class="headerlink" title="向量运算"></a>向量运算</h5><p>向量的头是线的初始位置<br>向量的尾是线的结束为止(箭头)</p><p><strong>加法</strong></p><blockquote><p>从几何学的角度可以被理解成平移向量</p></blockquote><img src="/blog/p/c8a4b253/Unity%E5%90%91%E9%87%8F%E5%8A%A0%E6%B3%95.png" class="" title="Unity向量加法"><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向量加法</span></span><br><span class="line">Vector3 v1 = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">Vector3 v2 = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">Vector3 v3 = v1 + v2; <span class="comment">// TODO 答案待验证 v3(2,0,0)</span></span><br></pre></td></tr></table></figure><ul><li>如果v1和v2都表示一个点，v3就是<code>从原点指向v3</code>的一个带有箭头的射线，此时v3就是一个向量；</li><li>如果v1和v2都表示一个向量，v3是一个<code>从v1的尾部指向v2的头部</code>的一个向量。</li></ul><p>用法：</p><ul><li>计算物体移动位置</li></ul><p><strong>减法</strong></p><blockquote><p>从几何学的角度可以被理解成平移负向量。不满足交换律，即a-b !&#x3D; (b-a)</p></blockquote><img src="/blog/p/c8a4b253/Unity%E5%90%91%E9%87%8F%E5%87%8F%E6%B3%95.png" class="" title="Unity向量减法"><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向量减法</span></span><br><span class="line">Vector3 v1 = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">Vector3 v2 = <span class="keyword">new</span> Vector3(<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">Vector3 v3 = v2 - v1; <span class="comment">// TODO 答案待验证 v3(3,0,-2.0)</span></span><br></pre></td></tr></table></figure><ul><li>如果v1和v2都表示一个点，v3就是<code>从v1开始指向v2</code>的一个带有箭头的射线，此时v3就是一个向量；</li><li>如果v1和v2都表示一个向量，v3是一个<code>从v1头部指向v2头部</code>的一个向量。</li></ul><p><strong>数乘(实数与向量相乘)</strong></p><blockquote><p>从几何学的角度可以被理解为沿着原始向量的方向或原始向量的反方向放大或缩小。</p></blockquote><p>数乘可以对向量的长度进行缩放，</p><ul><li>如果实数<code>大于0</code>，则数乘后的向量的方向与原始向量的方向一致，</li><li>如当实数<code>大于1</code>，向量数乘如图(a)所示；</li><li>如果实数<code>小于0</code>，则数乘后的向量的方向和原始向量的方向相反，</li><li>如当实数<code>小于-1</code>，向量数乘如图(b)所示。<img src="/blog/p/c8a4b253/Unity%E5%90%91%E9%87%8F%E6%95%B0%E4%B9%98.png" class="" title="Unity向量数乘"></li></ul><p><strong>点乘</strong></p><blockquote><p>又被称为点积、数量积、内积<br>从几何学的角度可以被理解为一条边向另一条边的投影乘以另一条边的长度。向量的点乘的结果描述了两个向量的“相似”程度，点乘的结果越大，两个向量越相近。<br>运算符 <code>·</code></p></blockquote><p>两个向量的点乘是对应分量乘积的和，其结果是一个标量，数值等于两个向量长度相乘再乘以两者夹角的余弦值。向量的点乘满足交换律，即a·b&#x3D;b·a</p><img src="/blog/p/c8a4b253/Unity%E5%90%91%E9%87%8F%E7%82%B9%E4%B9%98.png" class="" title="Unity向量点乘"><p>用法：</p><ul><li>计算机图形学中，点乘常用来进行<code>方向性判断</code><ul><li>如果两个矢量的点乘<ul><li>&gt;0，他们的方向相近</li><li>&lt;0，他们的方向相反</li></ul></li></ul></li><li>Unity中，点乘用来判断角度<ul><li><code>计算物体的前进方向</code></li><li><code>计算物体到目标方向的夹角</code><ul><li>利用点乘判断一个多边形是面向摄像机还是背向摄像机</li><li>在计算聚光灯的效果时，根据点乘得到光照效果<ul><li>点乘越大说明夹角越小，则物体离光照的轴线越近，光照越强</li><li>反之，光照越弱</li></ul></li></ul></li></ul></li></ul><p><strong>叉乘</strong></p><blockquote><p>从几何学的角度可以被理解为两个向量叉乘得到一个新的向量，新向量垂直于原来的两个向量。<br>运算符 <code>*</code><br>仅用于3D向量</p></blockquote><p>如果两个向量a和b在同一个平面中，则向量a×b垂直于a和b，指向符合左手定则，其模是以两个向量为边的平行四边形的面积。<br>  <img src="/blog/p/c8a4b253/Unity%E5%90%91%E9%87%8F%E5%8F%89%E4%B9%98.png" class="" title="Unity向量叉乘"></p><p>axb叉乘 类似于 左手坐标系的z轴，仅用于3D向量</p><p>用法：(通常用于<code>判断方向</code>)</p><ul><li>判断角色是顺时针转动还是逆时针转动 才能更快的转向敌人。 <ul><li>当一个敌人在你身后时，利用叉乘可以判断是往左转还是往右转才能更快的转向敌人，点乘得到当前面朝向的方向和你到敌人的方向所成角度的大小</li></ul></li></ul><h5 id="Vector3"><a href="#Vector3" class="headerlink" title="Vector3"></a>Vector3</h5><blockquote><p>三维向量表示3D向量和点，既包含位置、方向(朝向)、欧拉角等信息，也包含普通向量运算的函数。</p></blockquote><p>Vector3三维向量可以表示位置、方向，3D向量的长度&#x3D;向量的大小&#x3D;向量的模&#x3D;向量各分量平方和的平方根。</p><p>在三维坐标系中，分别取与X轴、Y轴、Z轴方向相同的3个单位向量i、j、k作为一组基底。若a为该坐标系内的任意向量，以坐标原点O为起点向P点作向量OP&#x3D;a。a&#x3D;向量OP&#x3D;xi+yj+zk，把实数对(x，y，z)被称为向量a的坐标，记作a&#x3D;(x，y，z)，这就是向量a的坐标的表示。其中，(x，y，z)是点P的坐标，向量OP被称为点P的位置向量。</p><p>在Unity中，Vector3的常用属性如下。</p><ul><li>Vector3.zero：表示3D零向量，是Vector3(0，0，0)的简码。</li><li>forward：表示3D向量的前方，是Vector3(0，0，1)的简码，即面向Z轴。</li><li>right：表示3D向量的右方，是Vector3(1，0，0)的简码，即面向X轴。</li><li>up：表示3D向量的上方，是Vector3(0，1，0)的简码，即面向Y轴。</li><li>one：是Vector3(1，1，1)的简码。</li></ul><p>Vector3还有很多常用函数和方法，如</p><ul><li>Lerp()(两个向量之间的线性插值)、</li><li>Slerp()(两个向量之间的球形插值)、</li><li>MoveTowards()(由当前地点移向目标)、</li><li>RotateTowards()(将当前的向量转向目标)、</li><li>SmoothDamp()(随着时间的推移，逐渐改变一个向量朝向预期的目标)、</li><li>Distance()(返回a和b之间的距离)等。</li></ul><p>另外，在Unity中，有时会用到Vector2和Vector4</p><ul><li>Vector2表示二维向量，用于表示2D的位置和向量，如网格中的纹理坐标或材质中的纹理偏移等。<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对应坐标系 上下左右</span></span><br><span class="line">Vector2.down = Vector2(<span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line">Vector2.up = Vector2(<span class="number">0</span>, <span class="number">1</span>) </span><br><span class="line">Vector2.left = Vector2(<span class="number">-1</span>, <span class="number">0</span>)</span><br><span class="line">Vector2.right = Vector2(<span class="number">1</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure></li><li>Vector4表示四维向量，如网格切线、着色器的参数等。</li></ul><p>这两种向量的操作与Vector3基本类似.</p><!-- 补充： --><h4 id="欧拉角和四元数"><a href="#欧拉角和四元数" class="headerlink" title="欧拉角和四元数"></a>欧拉角和四元数</h4><p>在特定的坐标系中，描述物体的方位一般需要说明物体的位置和朝向。</p><ul><li>描述物体的位置实际上就是描述物体相对于给定参考点(通常是坐标系原点)的位移</li><li>描述物体的朝向就是描述相对于已知朝向(通常为“单位”朝向)的旋转，旋转的量被称为角位移。</li></ul><p>在图形学中，<strong>描述物体方位</strong>的常见方法有<code>矩阵</code>、<code>欧拉角</code>和<code>四元数</code>，这3种方法各有各的优点和不足，可以在不同的场合使用不同的方法。</p><h5 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h5><p>欧拉角的基本思想是 将角位移分解为绕3个互相垂直轴的3个旋转组成的序列，即按照一定的坐标轴顺序(一般为先Z轴，再X轴，最后Y轴)绕每个轴旋转一定的角度来变换坐标或向量，实际上是一系列绕坐标轴旋转的组合。</p><p>欧拉角在表现形式上是一个三维向量，每个分量的值分别表示<code>物体绕坐标系对应轴的旋转角度</code>。</p><p>Unity中，所有物体都会绑定Transform组件，Rotation属性对应的就是该游戏对象方位的欧拉角表示。描述了 <code>该游戏对象相对于副坐标系的方位</code>。<br>Transform组件：</p><ul><li>Position 本地坐标系(位置)</li><li>Potation 欧拉角表示(方位)</li></ul><img src="/blog/p/c8a4b253/Unity%E6%AC%A7%E6%8B%89%E8%A7%92x.png" class="" title="Unity欧拉角x"><p>Unity中规定了一组欧拉旋转是按照Z→X→Y的顺序进行的。</p><ul><li>一次旋转 和 多次旋转的结果是不同的。因为在一组欧拉旋转中，相对的轴向不会发生变化。  <figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一次旋转</span></span><br><span class="line">transform.Rotate(<span class="number">90</span>, <span class="number">60</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多次旋转，每次旋转后，相对的轴向都发生了变化</span></span><br><span class="line">transform.Rotate(<span class="number">0</span>, <span class="number">0</span>, <span class="number">30</span>);</span><br><span class="line">transform.Rotate(<span class="number">90</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">transform.Rotate(<span class="number">0</span>, <span class="number">60</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></li></ul><h5 id="四元数"><a href="#四元数" class="headerlink" title="四元数"></a>四元数</h5><p>通过四个数字来表示方位：<code>一个3维向量</code>表示<code>转轴</code>和 <code>一个角度分量</code>表示<code>绕次转轴的旋转角度</code>，所以叫四元数。</p><p>在Unity中：<br><strong>基本的旋转</strong>可以通过 <code>transform.Rotate</code> 实现。但是当需要对旋转角度进行计算时，只使用一个四元数就可以执行<code>绕任意过原点的向量</code>的旋转。</p><p>transform组件有个名为 <code>rotation</code> 的变量，其类型是四元数。<br>不能通过取 rotation的x、y、z对应transform面板中Rotation的各个分量。<br>四元素的x、y、z与 <code>rotation</code> 的三个值并不直接对应，但是可以通过表达式进行转换。</p><p>一个四元数p：</p><ul><li>可以表示为p&#x3D;(xi+yj+zk+w)&#x3D;((x，y，z)，w)&#x3D;(v，w)</li><li>也可以表示为p&#x3D;i(x<em>sin(θ&#x2F;2))+j(y</em>sin(θ&#x2F;2))+k(z*sin(θ&#x2F;2))+cos(θ&#x2F;2)&#x3D;((x，y，z)sinθ&#x2F;2，cosθ&#x2F;2)。<br>其中，v是向量，w是实数，θ为旋转角度。具体来说，它表示空间点P绕着单位向量轴u&#x3D;(x，y，z)表示的旋转轴旋转的角度为θ。</li></ul><p>如使点m&#x3D;Vector3(x，y，z)绕X轴(1，0，0)按顺时针旋转90°，只要有角度，即可给出四元数的4个分量值，则对应的Quaternion数值为如下形式：</p><img src="/blog/p/c8a4b253/Unity%E5%9B%9B%E5%85%83%E6%95%B0Quaternion.png" class="" title="Unity四元数Quaternion"><p>欧拉角与四元数在易读性、易运算性、表示的唯一性等方面各有优点和缺点。</p><p><code>四元数q</code>转换为<code>欧拉角v</code>的转换方法：<code>Vector3 v = q.eulerAngles;</code><br><code>欧拉角v</code>转换为<code>四元数q</code>的转换方法：<code>Quaternion q = Quaternion.Euler(v);</code></p><p><strong>四元数操作</strong></p><blockquote><p>四元数是基于复数</p></blockquote><p>大多数情况下：</p><ul><li>只需要获取和使用现有的旋转，如来自<code>Transform</code>组件</li><li>使用四元数来构造新的旋转，如在两次旋转之间平滑的插值。</li></ul><p>构造器Quaternion();<br>构建方式：</p><ul><li>Quaternion(x,y,z,w); &#x2F;&#x2F; 从四个float类型的参数构建一个新的四元数。</li><li>Quaternion(Vector3, Single); &#x2F;&#x2F; 从指定向量和旋转部分创建四元数。</li></ul><p>参数要求：</p><ul><li>xyzw的取值范围(-1,1)</li></ul><p>物体旋转两周才可以使所有数值回归初始值。<br>例如：<br>如果四元数的初始值为(0,0,0,1)，则分别沿着X轴和Y轴旋转不同的角度后，四元数的变化如下<br>沿着X轴旋转：</p><ul><li>180°(-1，0，0，0)，</li><li>360°(0，0，0，-1)，</li><li>540°(1，0，0，0)，</li><li>720°(0，0，0，1)。</li></ul><p>沿着Y轴旋转：</p><ul><li>180°(0，1，0，0)，</li><li>360°(0，0，0，-1)，</li><li>540°(0，-1，0，0)，</li><li>720°(0，0，0，1)。</li></ul><p>运算符<br>四元素的运算符主要有三个</p><ul><li>!&#x3D; 判断两个四元数是否不相等</li><li>&#x3D;&#x3D; 判断两个四元数是否相等</li><li>* 和平两个旋转</li></ul><p>四元数与 <code>方向向量</code> 相乘，必须是四元数右乘方向向量，即将四元数至于方向向量的前面</p><p>在Unity中，Quaternion的乘法操作 <code>*</code> 有以下两种：<br>(1)Quaternion<em>Quaternion，如q&#x3D;t</em>p，表示先将一个点进行t操作旋转，然后进行p操作旋转。其中，p、q、t均为四元数。<br>(2)Quaternion<em>Vector3，如q&#x3D;t</em>p，表示将点p进行t操作旋转。其中，q、t为四元数，p为方向向量。</p><p>如下代码用于计算结果向量的值：</p><img src="/blog/p/c8a4b253/Unity%E5%9B%9B%E5%85%83%E6%95%B0%E4%B9%98%E6%B3%95%E8%AE%A1%E7%AE%97.png" class="" title="Unity四元数乘法计算"><p>在上面的代码中，向量forward包含的初始值为(0，0，1)，如绕Y轴旋转90°，即向量按照顺时针方向旋转90°。</p><p>因此，resultA的值为(1，0，0)，resultB的值为(0，0，-1)，resultC的值同样为(0，0，-1)。需要注意的是，四元数是可以叠加运算的。</p><p>静态方法<br>Quaternion类中的静态方法主要有</p><ul><li>Angle()方法、</li><li>AngleAxis()方法、</li><li>Dot()方法、</li><li>Euler()方法、</li><li>LookRotation()方法、</li><li>FromToRotation()方法、</li><li>Inverse()方法、</li><li>Lerp()方法、</li><li>RotateToWards()方法</li><li>Slerp()方法。</li></ul><p>静态方法可以直接通过类名调用，如Quaternion.Angle(q1，q2)。下面对常用的静态方法进行分析。</p><ol><li>Angle()方法声明形式如下：<br><code>public static float Angle(Quaternion a, Quaternion b);</code><br>功能：计算两个旋转之间的夹角，与Vector3.Angle()的作用相同。</li><li>AngleAxis()方法声明形式如下：<br><code>public static Quaternion AngleAxis(float angle, Vector3 axis);</code><br>功能：构建一个四元数，表示沿着一个轴旋转固定的角度，即绕axis轴旋转angle，创建一个旋转。其参数是旋转的角速度和轴方向(向量)。</li><li>Euler()方法声明形式如下：<br><code>public static Quaternion Euler(float x, float y, float z);</code><br>或者<br><code>public static Quaternion Euler(Vector3 euler);</code><br>功能：返回一个旋转角度，绕Z轴旋转z°，绕X轴旋转x°，绕Y轴旋转y°(默认顺序为Z轴→X轴→Y轴)，即返回一个四元数，该四元数表示欧拉旋转后的朝向。</li><li>LookRotation()方法声明形式如下：<br><code>public static Quaternion LookRotation(Vector3 forward, [DefaultValue(&quot;Vector3.up&quot;)] Vector3 upwards);</code><br>功能：返回一个四元数，使用前方和上方矢量确定朝向，即创建一个有具体的forward方向和upward方向的旋转。这个功能很实用，传入的两个参数分别代表前方盯着的方向及自己的上方。如在以下代码中，可以使一个GameObject转动时盯着另一个物体，即当前的object一直盯着target，默认up朝向是Vector3.up，也可以自定义up朝向：<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Transform target;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Vector3 relativePos = target.position - transform.position;</span><br><span class="line">    Quaternion rotation = Quaternion.LookRotation(relativePos);</span><br><span class="line">    transform.rotation = rotation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>FromToRotation()方法声明形式如下：<br><code>public static Quaternion FromToRotation(Vector3 fromDirection, Vector3 toDirection);</code><br>功能：返回从一个方向到另一个方向的旋转，即转一个方向。</li><li>Lerp()方法声明形式如下：<br><code>public static Quaternion Lerp(Quaternion a, Quaternion b, float t);</code><br>功能：返回一个四元数，表示从四元数a到b的线性插值，即线性地从一个角度旋转到另一个角度。插值也就是中间旋转量，a作为起点，此时对应的t为0；b作为终点，此时对应的t为1。当t取0和1之间的小数时，代表中间的插值结果。</li><li>Slerp()方法声明形式如下：<br><code>public static Quaternion Slerp(Quaternion a, Quaternion b, float t);</code><br>功能：通过t值在from和to之间插值，即沿球面线性地从一个角度旋转到另一个角度，其中，旋转匀速增加t。<br>Ler()p方法与Slerp()方法的功能基本相同，Lerp()方法的计算速度快，但是精度较低，如果相对旋转变化量很小，则效果不理想。Slerp()方法的计算精度高，但是运算速度相对较慢。</li></ol><p>思考与练习</p><ol><li>简述笛卡儿坐标系的特点及常用的种类。</li><li>简述Unity中常用的坐标系及其特点。</li><li>简述Unity中常用的向量运算及其特点。</li><li>简述Vector3类型变量的特点及常用的方法。</li><li>简述欧拉角的特点。</li><li>简述四元数的特点及常用的静态方法。</li><li>简述欧拉角与四元数的优点和缺点。</li></ol><h3 id="Unity基本内容"><a href="#Unity基本内容" class="headerlink" title="Unity基本内容"></a>Unity基本内容</h3><h4 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h4><p>推荐使用Unity Hub安装，需要注册Unity账号</p><blockquote><p><a href="https://unity.cn/releases" target="_blank" rel="noopener">https://unity.cn/releases</a></p></blockquote><p>保存Scene场景：File-&gt;save as… -&gt; 输入文件名 保存即可。</p><h4 id="Unity窗口视图"><a href="#Unity窗口视图" class="headerlink" title="Unity窗口视图"></a>Unity窗口视图</h4><p><code>对象</code> 是由 <code>组件</code> 构成的，<code>对象</code> 可以理解为是 <code>组件</code> 的<code>容器</code>。</p><p>所有视图：</p><img src="/blog/p/c8a4b253/Unity%E5%9B%9B%E5%A4%A7%E9%9D%A2%E6%9D%BF.png" class="" title="Unity四大面板"><ul><li><strong>Hierarchy</strong> 层级视图，显示当前场景中所有游戏对象的<code>层级结构</code></li><li><strong>Inspector</strong> 检视视图，显示当前选择游戏对象的<code>相关属性</code>和<code>信息</code><ul><li>Transform 对象的位置、大小、旋转信息</li><li>Scripts 对象脚本，类似剧本</li><li>Camera 对象相机</li></ul></li><li><strong>Scene</strong> 场景视图，用于设置场景以及方式游戏对象，是构建游戏场景的地方<ul><li>Game 游戏视图 游戏开始后，摄像机拍到的景象</li><li>关卡</li></ul></li><li><strong>Project</strong> 工程视图(Packages和Assets)，包含整个工程中所有可用的资源<ul><li>包</li><li>脚本</li><li>字体</li><li>声音</li><li>地图</li></ul></li></ul><p>所有菜单项</p><ul><li>File：Scene和Project的创建、保存以及输出等</li><li>Edit：编辑功能，设置关联环境，控制输入的设置等</li><li>Assets：创建、导入、导出资源，提取预制体，导入C#项目等</li><li>GameObject：创建场景对象和UI，以及调整摄像机视野等</li><li>Component：为对象添加系统提供的组件</li><li>Window：打开各个视图窗口和面板</li><li>Help</li></ul><h4 id="常用工作视图"><a href="#常用工作视图" class="headerlink" title="常用工作视图"></a>常用工作视图</h4><img src="/blog/p/c8a4b253/Unity%E5%B8%B8%E7%94%A8%E5%B7%A5%E4%BD%9C%E8%A7%86%E5%9B%BEScene%E8%A7%86%E5%9B%BE.png" class="" title="Unity常用工作视图Scene视图"><p><strong>Scene视图</strong></p><ul><li>模型(对象)</li><li>摄像机</li><li>光源</li><li>Scene Gizmos工具</li><li><img src="/blog/p/c8a4b253/Unity%E5%B8%B8%E7%94%A8%E5%B7%A5%E4%BD%9C%E8%A7%86%E5%9B%BEScene%E8%A7%86%E5%9B%BE%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95.png" class="" title="Unity常用工作视图Scene视图常用操作方法"></li><li><img src="/blog/p/c8a4b253/Unity%E5%B8%B8%E7%94%A8%E5%B7%A5%E4%BD%9C%E8%A7%86%E5%9B%BEScene%E8%A7%86%E5%9B%BE%E5%9C%BA%E6%99%AF%E8%A7%86%E5%9B%BE%E6%8E%A7%E5%88%B6%E6%A0%8F.png" class="" title="Unity常用工作视图Scene视图场景视图控制栏"></li></ul><p><strong>Game游戏视图</strong></p><ul><li>顶部是Game View Control Bar(游戏视图控制条)<ul><li><img src="/blog/p/c8a4b253/UnityGame%E8%AF%95%E5%9B%BE%E9%A1%B6%E9%83%A8.png" class="" title="UnityGame试图顶部"></li><li><img src="/blog/p/c8a4b253/UnityGame%E8%A7%86%E5%9B%BE%E9%A1%B6%E9%83%A8%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D1.png" class="" title="UnityGame视图顶部功能介绍1"></li><li><img src="/blog/p/c8a4b253/UnityGame%E8%A7%86%E5%9B%BE%E9%A1%B6%E9%83%A8%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D2.png" class="" title="UnityGame视图顶部功能介绍2"></li></ul></li></ul><p><strong>Hierarchy层级视图</strong><br>先创建的游戏对象会被后创建的游戏对象遮挡住，从场景中看到的是最后创建的游戏对象<br>Scene视图中的游戏对象会随着Hierarchy视图中游戏对象的添加和删除而不断更新。<br>主要操作功能：</p><ul><li>添加游戏对象</li><li>删除游戏对象</li><li>建立父子关系<ul><li>一个父对象可以有多个子对象</li><li>子对象只能有一个父对象</li><li>对父对象的操作会影响子对象</li><li>对子对象的操作不会影响父对象</li></ul></li></ul><p><strong>Project视图</strong></p><blockquote><p>组织管理文件的模式 与 资源管理模式相同：对各种资源采用分类管理</p></blockquote><p>如果需要移动或重新组织项目资源，则在Project视图的项目资源内进行，否者会损坏或删除与该资源相关的原数据和链接，甚至破坏项目</p><p><strong>Inspector视图</strong></p><blockquote><p>显示和设置游戏对象的属性、添加代码或组件等</p></blockquote><p>组件以及部分属性：</p><img src="/blog/p/c8a4b253/UnityInspector%E8%A7%86%E5%9B%BE%E9%83%A8%E5%88%86%E7%BB%84%E4%BB%B6%E5%92%8C%E5%B1%9E%E6%80%A7.png" class="" title="UnityInspector视图部分组件和属性"><ul><li>Transform<ul><li>Position：本地坐标系</li><li>Rotation：方位信息(欧拉角)</li><li>Scale：缩放</li></ul></li><li>Mesh Filter：网格过滤器<ul><li>从资源中获取Mesh(网格)，并将其传递给网格渲染器(Mesh Renderer)，以便在屏幕上渲染。</li></ul></li><li>Mesh Collider：Mesh碰撞体，为了防止物体被穿透，需要为对象添加碰撞体。</li><li>Mesh Renderer组件：网格渲染器，从网格过滤器获得几何形状，并且根据游戏对象的Transform组件定义的位置进行渲染。<ul><li>Materials属性：设置游戏对象的颜色、贴图等信息。</li></ul></li></ul><p><strong>Console面板</strong></p><blockquote><p>调试工具，显示程序运行时产生的调试信息</p></blockquote><img src="/blog/p/c8a4b253/UnityConsole%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7.png" class="" title="UnityConsole调试工具"><p>每条信息前面的图标可以显示信息的种类：</p><ul><li><p>白色叹号是正常信息；</p></li><li><p>黄色三角形是警告信息，不影响运行；</p></li><li><p>红色叹号是错误报警信息，出现此类信息后，程序<code>无法运行</code>，调试后不再出现此类信息程序才可以运行。</p><p>所以，根据出现的信息种类可以判断信息的处理方式，<code>双击错误信息</code>会<code>直接跳转到脚本代码中出现问题的位置</code>，可以快捷地调试程序。</p></li></ul><h4 id="Unity资源商店-AssetStore"><a href="#Unity资源商店-AssetStore" class="headerlink" title="Unity资源商店 AssetStore"></a>Unity资源商店 AssetStore</h4><blockquote><p>Windows -&gt; Asset Store 命令直接访问 或者”Ctrl+9”组合键访问</p></blockquote><p>汇集了丰富的<code>插件资源</code>和<code>游戏素材资源</code>，在创建游戏时，通过资源商店获取资源如：</p><ul><li>任务模型</li><li>动画</li><li>粒子特效</li><li>纹理</li><li>音频特效</li><li>各类扩展插件</li></ul><p>同时开发者可以在资源商店出售或免费提供自己的资源。</p><p>资源安装流程：</p><ol><li>选择对应的资源</li><li>点击下载</li><li>导入(Import Unity Package)</li></ol><h3 id="Unity脚本开发技术"><a href="#Unity脚本开发技术" class="headerlink" title="Unity脚本开发技术"></a>Unity脚本开发技术</h3><h4 id="脚本简介"><a href="#脚本简介" class="headerlink" title="脚本简介"></a>脚本简介</h4><blockquote><p>脚本可以被理解为 <code>附加在游戏对象上</code>的<code>用于定义游戏对象的行为</code>的<code>指令代码</code>，必须绑定在游戏对象上才能开始它的生命周期。</p></blockquote><p>游戏吸引人的地方在于它的<code>可交互性</code>，Unity的<code>游戏交互</code>通过<code>脚本编程</code>来实现。</p><p>通过脚本，开发者可以控制每个游戏对象的创建、销毁，以及游戏对象在各种情况下的行为，进而实现预期的交互效果。</p><p>Unity集成了开源的脚本编辑器<code>MonoDevelop</code>，它具有使用简便、跨平台等特性，是Unity默认的脚本开发工具。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestScript</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 1. 最先加载，首先执行，且只执行一次</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 第一次enable后执行start，随后不再执行start</span></span><br><span class="line">    <span class="comment">//    同时可以根据程序的逻辑多次调用</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 脚本被禁用时调用，当前脚本被禁用后，脚本不在执行任何更新操作</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDisable</span>()</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 尽在enable后执行一次，及时后面多次enable，start也不执行</span></span><br><span class="line">    <span class="comment">//    在第一帧更新之前调用Start</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 只要start完成，且当前enable，每帧都执行一次</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上图是Unity生命周期调试代码，此脚本被挂载到游戏对象上之后能在控制台上显示调试信息，以此了解事件执行的先后顺序。</p><h5 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h5><p>Unity的脚本语言运行于Mono之上。Mono是一个致力于.NET开源的软件平台，严格来讲是.NET的第三方跨平台实现。Mono旨在使开发人员能够轻松地创建.NET基础的跨平台应用程序。运行于Mono之上的应用可以使用.NET库。</p><p>Unity支持三种脚本语言：</p><ul><li>UnityScript(菜单上显示为JavaScript，是两种不同的语言)</li><li>C#(推荐使用)</li><li>Boo(.net平台的第三方语言，使用群体较小)<br>在一个游戏开发中人员可以使用一种或两种语言来实现脚本的控制。</li></ul><p>Unity 5.x及以上版本，Unity推荐使用C#作为开发语言，并一直延续至今。</p><h5 id="C-简介"><a href="#C-简介" class="headerlink" title="C#简介"></a>C#简介</h5><blockquote><p>一种面向对象的计算机语言</p></blockquote><p>C#本身有很强大的语言特性，语法简单，易学易用，高度面向对象，类型体系完善且安全，能胜任从桌面应用到Web开发等诸多场景。大多数Unity第三方插件都是使用C#编写的，许多商业游戏项目也是使用C#开发的。</p><h5 id="脚本与类、组件、游戏对象之间的关系"><a href="#脚本与类、组件、游戏对象之间的关系" class="headerlink" title="脚本与类、组件、游戏对象之间的关系"></a>脚本与类、组件、游戏对象之间的关系</h5><p>一个Unity脚本对应一个.cs文件扩展名的脚本文件，该文件对应一个C#类。在不考虑创建组件的前提下，C#支持在一个.cs文件中定义多个类或声明一个命名空间。</p><p>一般来讲，一个脚本文件对应一个C#类，但不是所有的C#类都能<code>作为组件挂载到游戏对象上</code>。只有直接或间接<code>继承MonoBehaviour类</code>的脚本，才能被称为<code>组件</code>。所以，Unity组件一定是脚本，但脚本不一定是Unity组件。在一般情况下，组件可以自由调用普通的C#类提供的静态方法。</p><p>Unity组件可以分为<code>系统组件</code>和<code>用户自定义组件</code>。两者均可以直接挂载到游戏对象上。</p><ul><li>系统组件集成于Unity开发环境中，一些常用的组件被整合至Unity标准Asset资源包中</li><li>自定义组件则是用户在开发环境下自行编写的C#脚本。</li></ul><p>Unity组件依附于游戏对象，用于模拟游戏对象的行为。从本质上来说，游戏对象是GameObject类在场景内的实例化，用于充当组件的载体。将一些具有特定功能的代码封装成一个类(组件)，当这个类挂载到某个游戏对象上时，就相当于对此类进行了实例化，挂载了此实例的游戏对象将获得该实例提供的所有功能。<code>挂载组件</code>相当于<code>创建功能实体</code>，<code>添加游戏对象行为</code>。</p><p><code>继承自MonoBehaviour的组件``只能挂载(Add Component)到游戏对象上</code>，其实例化由Unity引擎自动完成。开发人员<code>不能通过new关键字</code>来创建一个组件的实例，虽然这样做可以编译成功，但是执行时会有错误提示。在场景运行状态下，组件的生命周期受限于加载它的游戏对象的生命周期。游戏对象被销毁之后，其挂载的组件的生命周期也随之结束。</p><h4 id="脚本的相关操作"><a href="#脚本的相关操作" class="headerlink" title="脚本的相关操作"></a>脚本的相关操作</h4><p><strong>创建脚本</strong></p><ul><li>菜单命令法 菜单栏中选择 Assets -&gt; Create -&gt; C# Script</li><li>快捷菜单法 Project视图上房单击Create按钮，或者在视图区右击，选择Create-&gt;C# Script</li><li>游戏对象中添加组件 点击New Script创建</li></ul><p><strong>挂载脚本</strong></p><blockquote><p>仅继承MonoBehaviour类的脚本，即组件</p></blockquote><ol><li>添加组件法<br>  创建脚本后，在Add Component中搜索组件脚本进行挂载</li><li>文件拖动法<br>  创建脚本后，从Project视图中的脚本拖到空白处</li><li>添加脚本代码法<br>  在脚本代码中，通过AddComponent<T>()方法动态添加组件  <figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 为当前脚本所依附的游戏对象添加Player组件</span></span><br><span class="line">    AddComponent&lt;Player&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>注意：</p><ul><li>一般将所有的C#脚本存放在一个单独的文件夹中，如Scripts。</li><li>直接将脚本拖到游戏对象上，运行时脚本就会自动关联该游戏对象。</li><li>脚本在Project视图中显示的名称不包括.cs文件扩展名。类名需要与.cs脚本的名称一致，否则会出现编译错误。所有类继承自MonoBehaviour类。</li><li>挂载的脚本可以通过脚本编辑器随时进行修改、保存，并在Unity编辑器中每隔几秒自动检测更新。如果脚本中存在严重的语法错误，在未更正前错误提示会一直出现在控制台区，并导致该脚本无法挂载到游戏对象上，程序也无法正常启动。</li><li>在Unity场景编辑状态下以拖动方式挂载的脚本会一直保留在Inspector视图中</li><li>在调试状态下挂载的脚本会在调试结束后自动卸载。</li></ul><p><strong>卸载脚本</strong></p><ul><li>Inspector视图 -&gt; 脚本 -&gt; Remove Component</li><li>通过代码卸载<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 销毁组件</span></span><br><span class="line">Destroy(gameObject.GetComponent&lt;Player&gt;());</span><br></pre></td></tr></table></figure></li></ul><p><strong>脚本编译顺序</strong><br>遵循特定的规则，与脚本所在的文件夹位置有关。</p><p>C＃以Assembly(汇编集)为基本单位来组织脚本代码，脚本被编译成的库文件(dll)将在运行时被实时编译执行。库文件之间有加载顺序。后编译的脚本能够引用先编译的脚本，先编译的脚本无法引用后编译的脚本。</p><p>C＃脚本的编译顺序如下。</p><ol><li>所有在Standard Assets、Pro Standard Assets或Plugins中的脚本最先编译。</li><li>所有在Standard Assets&#x2F;Editor、Pro Standard Assets&#x2F;Editor、Plugins&#x2F;Editor中的脚本相继被编译。</li><li>所有在Assets&#x2F;Editor外面的，并且不在(1)、(2)中的脚本相继被编译。</li><li>Assets&#x2F;Editor中的脚本最后被编译。</li></ol><p><strong>脚本执行顺序</strong><br>Unity脚本的执行顺序有一套默认的规则，在特殊情况下也可以根据需要手动定制脚本的执行顺序。注意：这里所说的脚本的执行顺序是指多个脚本之间执行的先后顺序，不单指脚本内部代码的执行顺序(脚本内方法的执行顺序遵循MonoBehaviour类的生命周期规则，方法间的调用顺序并没有改变)。</p><p>默认规则</p><ol><li>单个游戏对象脚本方法的执行顺序按照挂载到该游戏对象的时间先后顺序倒序执行(后挂载的先执行)，而不是按照Inspector视图上显示的上下顺序。当脚本方法执行时，所有脚本初始化阶段的Awake()执行完毕后再执行所有脚本的OnEnable()，然后依次执行Start()、Update()、LateUpdate()，程序运行期间任何脚本被禁用，该脚本的更新将停止。</li><li>当场景中有多个游戏对象时，按照脚本创建在游戏对象上的时间先后顺序(不是上下顺序)倒序初始化(后创建的先初始化)，脚本执行顺序遵循规则(1)，与脚本挂载到哪个游戏对象上无关。未被激活的游戏对象在场景中将不可见，挂载在其上的脚本也不会运行。</li><li>如果游戏对象有子对象，则同样遵循规则(2)。</li><li>单个脚本内部方法的执行顺序如图所示。脚本主要内部方法的执行顺序如下：<ol><li>唤醒(Awake()，仅执行一次)</li><li>→激活(OnEnable())</li><li>→重置(Reset())</li><li>→开始(Start()，仅执行一次)</li><li>→固定更新(FixedUpdate())</li><li>→模拟物理(Physics)</li><li>→触发器(Trigger)的进入、离开等</li><li>→碰撞器(Collision)的进入、离开等</li><li>→刚体(Rigidbody)的位置和旋转的处理</li><li>→鼠标按下、抬起等事件(OnMouse())</li><li>→更新(Update())</li><li>→最后更新(LateUpdate())</li><li>→渲染(Rendering())</li><li>→禁用(OnDisable())</li><li>→销毁(OnDestroy())。  <img src="/blog/p/c8a4b253/Unity%E8%84%9A%E6%9C%AC%E7%BC%96%E8%AF%91%E9%A1%BA%E5%BA%8F-%E9%BB%98%E8%AE%A4%E9%A1%BA%E5%BA%8F.jpeg" class="" title="Unity脚本编译顺序-默认顺序"></li></ol></li></ol><p>手动设置<br>  Unity也提供了用来设置脚本的执行顺序的方法，在菜单栏中选择“Edit→Project Settings→Script Execution Order”命令，即可在Inspector视图中看到Script Execution Order面板。单击右下角的“+”按钮将弹出下拉列表，包括游戏中的所有脚本。单击所需脚本即可把脚本添加至Script Execution Order面板中，如图所示。<br>  <img src="/blog/p/c8a4b253/Unity%E8%84%9A%E6%9C%AC%E7%BC%96%E8%AF%91%E9%A1%BA%E5%BA%8F-%E6%89%8B%E5%8A%A8%E8%AE%BE%E7%BD%AE.jpeg" class="" title="Unity脚本编译顺序-手动设置"></p><p>  脚本添加完毕之后，可以使用鼠标拖动脚本为脚本排序，脚本的位置越靠上，脚本名称后面的数字越小，执行越靠前(这种调整方式仅仅影响不同脚本名称之间的优先级，同名脚本的执行顺序遵循后挂载先执行的堆栈原则)。其中，Default Time表示没有设置执行顺序的那些脚本的执行顺序。</p><h4 id="脚本编辑器"><a href="#脚本编辑器" class="headerlink" title="脚本编辑器"></a>脚本编辑器</h4><p>Unity支持多种外部脚本编辑器</p><ul><li>MonoDevelop编辑器(默认)</li><li>Visual Studio(Mono的替代方案)</li><li>Visual Studio Code(个人推荐)</li><li>Other…</li></ul><h5 id="设置默认编辑器"><a href="#设置默认编辑器" class="headerlink" title="设置默认编辑器"></a>设置默认编辑器</h5><p>Unity 首选项<br>External Tools<br>External Script Editor 选择编辑器</p><h5 id="VSCode编辑器-代码不提示"><a href="#VSCode编辑器-代码不提示" class="headerlink" title="VSCode编辑器 代码不提示"></a>VSCode编辑器 代码不提示</h5><p>Unity版本 2022.2.1f1c1</p><p><strong>安装.net</strong></p><blockquote><p><a href="https://dotnet.microsoft.com/zh-cn/download" target="_blank" rel="noopener">https://dotnet.microsoft.com/zh-cn/download</a> arm64(m1)</p></blockquote><p>选择最新版 M1芯片arm64安装即可，看安装文档是否需要重启。</p><p><strong>安装momo</strong></p><blockquote><p><a href="https://www.mono-project.com/download/stable/" target="_blank" rel="noopener">https://www.mono-project.com/download/stable/</a></p></blockquote><p>选择最新版Visual Studio channel版本，并且重启。</p><p><strong>安装C#扩展</strong></p><blockquote><p>从指定文件安装 <a href="https://github.com/OmniSharp/omnisharp-vscode/releases/tag/v1.23.11" target="_blank" rel="noopener">https://github.com/OmniSharp/omnisharp-vscode/releases/tag/v1.23.11</a></p></blockquote><p>如果出现</p><img src="/blog/p/c8a4b253/OmniShart_requires.png" class="" title="OmniShart_requires"><p>说明当前版本的C#是还未修复的最新版本，需要安装23.11</p><p><strong>设置VSCode</strong><br>user-&gt;settings.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;omnisharp.useGlobalMono&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;omnisharp.useModernNet&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;omnisharp.monoPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/Library/Frameworks/Mono.framework/Versions/Current&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>monoPath通过命令<code>which mono</code>查看，但是只能按照上面的Path写，不然第一个VSCode实例是可以运行的，但是第二个实例会报错<br><code>[ERROR] Error: Unable to find Mono. Update the &quot;omnisharp.monoPath&quot; setting to point to the folder containing Mono&#39;s &#39;/bin&#39; folder.</code></p><p><strong>最后</strong><br>删除项目中的 <code>Assembly-CSharp.csproj</code> 和 <code>study_FlappyBird.sln</code> 文件，Unity首选项也可以进行生成。</p><p>彻底退出VSCode、Unity、Unity HUB。</p><p>重新打开即可</p><h4 id="常用命名空间"><a href="#常用命名空间" class="headerlink" title="常用命名空间"></a>常用命名空间</h4><p>TODO…</p><h4 id="MonoBehaviour类"><a href="#MonoBehaviour类" class="headerlink" title="MonoBehaviour类"></a>MonoBehaviour类</h4><h4 id="游戏对象和组件"><a href="#游戏对象和组件" class="headerlink" title="游戏对象和组件"></a>游戏对象和组件</h4><h4 id="常用脚本API"><a href="#常用脚本API" class="headerlink" title="常用脚本API"></a>常用脚本API</h4><h4 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h4><h3 id="创建基本的3D场景"><a href="#创建基本的3D场景" class="headerlink" title="创建基本的3D场景"></a>创建基本的3D场景</h3><p>游戏对象 和 组件</p><p>预制体</p><p>Runball案例<br>地形</p><h3 id="物理系统"><a href="#物理系统" class="headerlink" title="物理系统"></a>物理系统</h3><p>Rigidbody组件<br>Collider组件<br>Constant Force组件</p><p>Runball案例2<br>Joint组件<br>Cloth组件<br>Character Controller组件</p><h3 id="图形用户界面UGUI"><a href="#图形用户界面UGUI" class="headerlink" title="图形用户界面UGUI"></a>图形用户界面UGUI</h3><p>简介<br>常用组件</p><p>Rect Transform组件<br>UGUI布局组件<br>Runball案例3</p><h3 id="Mecanim动画系统"><a href="#Mecanim动画系统" class="headerlink" title="Mecanim动画系统"></a>Mecanim动画系统</h3><p>介绍</p><p>人性角色动画</p><p>Animator Controller<br>动画混合树<br>Sprite动画剪辑</p><h3 id="导航网格寻路"><a href="#导航网格寻路" class="headerlink" title="导航网格寻路"></a>导航网格寻路</h3><p>介绍</p><ul><li>常见寻路技术概述</li></ul><p>实现导航网格寻路</p><p>导航常用属性概述</p><h3 id="音效系统"><a href="#音效系统" class="headerlink" title="音效系统"></a>音效系统</h3><p>介绍</p><p>音频文件格式<br>Audio Source组件<br>Audio Listener组件<br>空间音效环绕效果案例分析</p><h3 id="全局光照和粒子系统"><a href="#全局光照和粒子系统" class="headerlink" title="全局光照和粒子系统"></a>全局光照和粒子系统</h3><p>全局光照介绍<br>Light光照</p><p>粒子系统</p><h3 id="游戏资源打包与跨平台发布"><a href="#游戏资源打包与跨平台发布" class="headerlink" title="游戏资源打包与跨平台发布"></a>游戏资源打包与跨平台发布</h3><p>AssetBundle概述</p><p>平台发布设置<br>发布到PC<br>发布到Android<br>发布到WebGL</p><h3 id="UGUI综合案例"><a href="#UGUI综合案例" class="headerlink" title="UGUI综合案例"></a>UGUI综合案例</h3><p>介绍与环境搭建</p><p>游戏的开始面板</p><p>游戏的主面板</p><p>游戏的角色面板</p><p>游戏的背包面板</p><p>游戏的关卡选择面板</p><p>游戏的设置面板</p><p>游戏的登录面板</p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>网络教程：<br>游戏网络同步 <a href="https://www.bilibili.com/video/BV15P4y1U79G/?p=4&amp;vd_source=508e069b09636e2f68f3ef05a2868539" target="_blank" rel="noopener">https://www.bilibili.com/video/BV15P4y1U79G/?p=4&amp;vd_source=508e069b09636e2f68f3ef05a2868539</a><br>《王者荣耀》2亿用户量的背后：产品定位、技术架构、网络方案等 <a href="http://www.52im.net/thread-1595-1-1.html" target="_blank" rel="noopener">http://www.52im.net/thread-1595-1-1.html</a><br>从《王者荣耀》来聊聊游戏的帧同步 <a href="https://gwb.tencent.com/community/detail/115398" target="_blank" rel="noopener">https://gwb.tencent.com/community/detail/115398</a></p><p>课程：<br>《FPS射击游戏》训练营 <a href="https://ke.qq.com/course/4000336#term_id=105639476" target="_blank" rel="noopener">https://ke.qq.com/course/4000336#term_id=105639476</a><br>Unity3D(U3D)从零打造王者荣耀 - 钻石班 <a href="https://ke.qq.com/course/260595#term_id=100574690" target="_blank" rel="noopener">https://ke.qq.com/course/260595#term_id=100574690</a><br>Unity3D(U3D)从零打造王者荣耀 - 王者班 <a href="https://ke.qq.com/course/260601#term_id=100573021" target="_blank" rel="noopener">https://ke.qq.com/course/260601#term_id=100573021</a><br>P2【商业级MMORPG大型网游】Unity全栈开发 <a href="https://ke.qq.com/course/329046#term_id=100390455" target="_blank" rel="noopener">https://ke.qq.com/course/329046#term_id=100390455</a></p><p>Unity Asset Store Packages：<br>Easy Touch Controls 摇杆 <a href="https://assetstore.unity.com/packages/tools/input-management/easy-touch-controls-28118#content" target="_blank" rel="noopener">https://assetstore.unity.com/packages/tools/input-management/easy-touch-controls-28118#content</a><br>其他 <a href="https://assetstore.unity.com/?on_sale=true&amp;q=FPS&amp;orderBy=1" target="_blank" rel="noopener">https://assetstore.unity.com/?on_sale=true&amp;q=FPS&amp;orderBy=1</a></p><p>Blender(uv editing 角色、枪械、地图) <a href="http://www.baidu.com/link?url=CYr_XnWcJw26dpGc_1Lgqm5nDCwJxJYnchlpZOA-7UXQXqttk--wSzzujQt7lCL0QfOuFEr6YmZBubtWk51g6K" target="_blank" rel="noopener">http://www.baidu.com/link?url=CYr_XnWcJw26dpGc_1Lgqm5nDCwJxJYnchlpZOA-7UXQXqttk--wSzzujQt7lCL0QfOuFEr6YmZBubtWk51g6K</a></p><p>游戏设计(色彩、音乐)<br><a href="https://www.youtube.com/watch?v=gTZT8GE5928" target="_blank" rel="noopener">https://www.youtube.com/watch?v=gTZT8GE5928</a><br><a href="https://github.com/FlowingSPDG/CS-GO-Observer-Unity-HUD" target="_blank" rel="noopener">https://github.com/FlowingSPDG/CS-GO-Observer-Unity-HUD</a></p><p>音效 <a href="https://www.imphenzia.com/files/file-list-game-ready-blasters.pdf" target="_blank" rel="noopener">https://www.imphenzia.com/files/file-list-game-ready-blasters.pdf</a></p><p>网络：<br><a href="https://blog.theknightsofunity.com/steamworks-and-unity-p2p-multiplayer/" target="_blank" rel="noopener">https://blog.theknightsofunity.com/steamworks-and-unity-p2p-multiplayer/</a><br><a href="https://steamworks.github.io/installation/" target="_blank" rel="noopener">https://steamworks.github.io/installation/</a></p><p>7小时 fps：<br><a href="https://www.youtube.com/watch?v=WxqsIGeCxg0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=WxqsIGeCxg0</a><br><a href="https://www.youtube.com/watch?v=WxqsIGeCxg0&amp;t=54s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=WxqsIGeCxg0&amp;t=54s</a></p><h3 id="多人FPS-15年"><a href="#多人FPS-15年" class="headerlink" title="多人FPS 15年"></a>多人FPS 15年</h3><blockquote><p><a href="https://www.youtube.com/watch?v=-m28axeuRNs&amp;list=PLPV2KyIb3jR5PhGqsO7G4PsbEC_Al-kPZ&amp;index=3" target="_blank" rel="noopener">https://www.youtube.com/watch?v=-m28axeuRNs&amp;list=PLPV2KyIb3jR5PhGqsO7G4PsbEC_Al-kPZ&amp;index=3</a></p></blockquote><p>了解如何在 Unity 中制作多人第一人称射击游戏。本系列讲授非常酷的 Unity Networking 系统 (uNet)。所有代码完全用 C# 编写。</p><ul><li>初始场景</li><li>网络介绍</li><li>同步运动</li><li>Flying</li><li>射击</li><li>重复创建Respawn</li><li>玩家模型</li><li>十字准线</li><li>Gun GFX</li><li>Rapid Fire</li><li>错误修复</li><li>加入连接</li><li>断开连接</li><li>用户账户</li><li>获取数据</li><li>发送数据</li><li>光标锁定</li><li>记分牌</li></ul><h3 id="生成地形程序-17年"><a href="#生成地形程序-17年" class="headerlink" title="生成地形程序 17年"></a>生成地形程序 17年</h3><blockquote><p><a href="https://www.youtube.com/playlist?list=PLFt_AvWsXl0eBW2EiBtl_sxmDtSgZBxB3" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLFt_AvWsXl0eBW2EiBtl_sxmDtSgZBxB3</a></p></blockquote><p>章节：</p><ul><li>八度</li><li>颜色</li><li>网格</li><li>LOD</li><li>无尽地形</li><li>现成</li><li>LOD切换</li><li>接缝</li><li>衰减贴图</li><li>法线</li><li>碰撞</li><li>平面着色</li><li>数据存储</li><li>颜色着色器</li><li>纹理着色器</li><li>修复和优化</li><li>重构</li><li>修复间隙</li></ul><h3 id="2D平台游戏-15年"><a href="#2D平台游戏-15年" class="headerlink" title="2D平台游戏 15年"></a>2D平台游戏 15年</h3><blockquote><p><a href="https://www.youtube.com/playlist?list=PLPV2KyIb3jR42oVBU6K2DIL6Y22Ry9J1c" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLPV2KyIb3jR42oVBU6K2DIL6Y22Ry9J1c</a></p></blockquote><p>章节：</p><ul><li>视差滚动</li><li>平铺</li><li>Character</li><li>动画</li><li>摄像</li><li>Bullet Trail</li><li>Muzzle Flash</li><li>玩家生命</li><li>ReSpawning</li><li>重生效果</li><li>敌人AI</li><li>敌人</li><li>拍摄GFX</li><li>Camera Shake</li><li>敌人枪</li><li>Enemy Attack攻击</li><li>GUI</li><li>游戏结束</li><li>MENU</li><li>音效管理</li><li>升级-&gt;4.0</li></ul><h3 id="在线多人游戏01-2022"><a href="#在线多人游戏01-2022" class="headerlink" title="在线多人游戏01 2022"></a>在线多人游戏01 2022</h3><blockquote><p><a href="https://www.youtube.com/watch?v=stJ4SESQwJQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=stJ4SESQwJQ</a></p></blockquote><p>章节：</p><ul><li>0:00介绍</li><li>0:20安装</li><li>1:00并行同步</li><li>1:26网络管理员</li><li>1:45统一传输层</li><li>2:18播放器预制件&#x2F;网络对象</li><li>4:09什么是主机、服务器和客户端？</li><li>6:15只控制你的本地对象</li><li>7:40使用 ClientNetworkTransform 同步数据</li><li>8:30使用 NetworkVariable 手动序列化</li><li>11:25使用 INetworkSerializable 自定义网络序列化</li><li>14:10插值网络运动（乡巴佬风格）</li><li>14:33减少网络流量</li><li>15:30使用 ServerRPC 调用服务器代码</li><li>17:00服务器与客户端权限</li><li>19:45添加模拟延迟</li><li>20:45让服务器权限感觉良好的技巧</li><li>21:35订阅网络变化</li></ul><h2 id="good-project-构思"><a href="#good-project-构思" class="headerlink" title="good project 构思"></a>good project 构思</h2><p>前提：</p><ul><li>可以与抖音有趣的梗结合<ul><li>跑酷 意外从高处掉下，带着摄像机拍下了过程 神评：”带我死的你还是第一个”</li></ul></li></ul><h3 id="1-双人情侣类"><a href="#1-双人情侣类" class="headerlink" title="1.双人情侣类"></a>1.双人情侣类</h3><blockquote><p>需要提前解剖双人成行游戏</p></blockquote><p>剖析：<br>叙事<br>互动叙事类游戏<br>家庭关系<br>夫妻关系<br>爱情与亲情<br>父母与孩子<br>NPC哈金博士：它主张“爱治愈一切”，并且回应了小女孩的期待，帮助修复父母之间的关系。<br>游戏弱化了小梅和科迪的争吵与分歧，利用一些矛盾点作为开端，引出一系列有趣的交互行为，在有意无意间转移了玩家的关注点，开始专心钻研合作事宜。<br>可以作妖<br>故地重游，做一些能够挽救这段感情的互动<br>合理的分配故事情节，比如故事剧情整体较为平缓，一共两个有起伏转折点：一个是游戏途中小梅和科迪破坏小象玩具，另一个是接近尾声时女儿做出的离家决定。这两个设定都正好出现在一系列的闯关内容之后，彼时玩家正好从需要花精力的配合中脱离出来，想要享受片刻安宁：比如终于到达了小象的城堡里，比如终于破解了咒语返回现实。</p><p>丛林中手持 喷射油和火药，与松鼠战斗。</p><p>融入</p><p>双人互动 最大化游戏乐趣<br>走心<br>配合解密，分工差异</p><ul><li><p>远战和近战</p></li><li><p>情侣 懵懂</p></li><li><p>情侣 相处</p></li><li><p>结婚</p></li><li><p>情侣 孩子</p></li><li><p>1</p></li></ul><h2 id="Game-Jam-极限开发"><a href="#Game-Jam-极限开发" class="headerlink" title="Game Jam 极限开发"></a>Game Jam 极限开发</h2><blockquote><p>重在学习、练习、实验、挑战自我、与新伙伴合作、尝试新点子，而不全是为了奖品和荣誉。<br>迅速开发，能跑就行，后期优化</p></blockquote><h3 id="游戏类型："><a href="#游戏类型：" class="headerlink" title="游戏类型："></a>游戏类型：</h3><blockquote><p><a href="https://baike.baidu.com/item/%E6%B8%B8%E6%88%8F%E5%88%86%E7%B1%BB/7690482" target="_blank" rel="noopener">https://baike.baidu.com/item/%E6%B8%B8%E6%88%8F%E5%88%86%E7%B1%BB/7690482</a></p></blockquote><ul><li>RPG：角色扮演游戏，由玩家扮演游戏中的一个或数个角色，有完整的故事情节的游戏，RPG更强调的是剧情发展和个人体验<ol><li>最终幻想</li><li>仙剑奇侠穿</li><li>暗黑破坏神</li></ol></li><li>ACT：动作游戏，玩家控制游戏人物用各种武器消灭敌人以过关的游戏，不追求故事情节<ul><li>魂斗罗</li><li>三国志</li><li>鬼泣</li></ul></li><li>AVG：冒险游戏，由玩家控制游戏人物进行虚拟冒险的游戏。与RPG不同的是，AVG的特色是故事情节往往是以完成一个任务或解开某些谜题的形式出现的，而且在游戏过程中刻意强调谜题的重要性。<ul><li>动作类，包含(AAG：动作冒险游戏)<ul><li>生化危机</li><li>古墓丽影</li><li>恐龙危机</li></ul></li><li>解密类<ul><li>神秘岛</li></ul></li></ul></li><li>SLG：策略游戏<ul><li>RTS：即时战略游戏</li><li>MOBA：多人在线战术竞技游戏<ol><li>英雄联盟</li><li>dota</li><li>D10</li></ol></li></ul></li><li>SRPG：模拟类角色扮演游戏</li><li>FTG：格斗游戏</li><li>STG：射击类游戏</li><li>FPS：第一人称视角射击游戏</li><li>TPS：第三人称视角射击游戏</li><li>PZL：益智类游戏</li><li>SPG：体育竞技类游戏</li><li>RCG（RAC）：竞速游戏</li><li>CAG：卡片游戏</li><li>TAB：桌面游戏</li><li>MSC:音乐游戏<ol><li>节奏大师</li></ol></li><li>塔防建造游戏</li></ul><p>开发游戏设计原则：</p><ul><li>多一些恍然大悟的「觉悟时刻」</li><li>游戏上手简易，不能带来太大的负面体验</li></ul><ul><li>创意廉价，宝贵的是实现创意，尤其是创意落地过程中实现程度、细节推敲和权衡<ul><li>客观地舍弃自己非常喜爱但性价比低的设计</li><li>全局视角权衡，夹缝中找到最优解，长远而不是舒服的决策。<br>难点：</li></ul></li></ul><ul><li>设计上：同步PVP体验 提高角色的技能设计</li><li>技术上：实时PVP，模拟物理，物理同步(大问题)，部分地方使用UI、色彩等解决方案。<br>如何学习：</li><li>找到一个靠谱的团队和项目</li></ul><ul><li>找到一个愿意带自己的人很重要</li><li>积极主动，争取机会</li><li>实践为主，多动手自己做</li></ul><p>备考设计功能：</p><ul><li>关卡<ul><li>可以跳过关卡，不以固定顺序游玩</li><li>关卡过渡动画</li></ul></li><li>通过建立一个多行为的脚本，用面板可控的方式，替换掉需要频繁修改多处位置的方式</li><li>Event，例如btn的event中，按钮被按下<ul><li>可以使用<code>onButtonPressed?.Invoke();</code></li><li>然后属性面板中OnButtonPressed()中可以选择，运行Object上附带的函数</li></ul></li><li>通过用户输入*，控制行为</li><li>通过防御进行击杀</li><li>消消乐 例如：游戏Fish</li><li>UI<ul><li>背景图<ul><li>与主题相关的元素</li><li>按键说明</li></ul></li><li>动画场景<ul><li>被攻击动画<ul><li>Player对象 闪烁 3S</li></ul></li><li>过关动画<ul><li>居中 从大到小 抖动 效果</li><li>过关处<ul><li>某个动画</li></ul></li></ul></li><li>升级动画<ul><li>居中 从大到小 抖动 效果</li></ul></li></ul></li></ul></li><li>无法后退的游戏(例如2D游戏)</li><li>2D</li></ul><blockquote><p><a href="https://www.youtube.com/watch?v=3sWTzMsmdx8" target="_blank" rel="noopener">https://www.youtube.com/watch?v=3sWTzMsmdx8</a><br><a href="https://github.com/Matthew-J-Spencer/Ultimate-2D-Controller" target="_blank" rel="noopener">https://github.com/Matthew-J-Spencer/Ultimate-2D-Controller</a></p></blockquote><p>可变跳跃高度(尽早释放跳跃让玩家控制跳跃的高度)</p><blockquote><p>当玩家在你跳跃的顶点释放，跳跃顶点修改器时，通过向角色添加额外的向下力来完成</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fallSpeed = _endedJumpEarly &amp;&amp; _currentVerticalSpeed &gt; <span class="number">0</span> ? _fallSpeed * _jumpEndEarlyGravityModifier : _fallSpeed;</span><br><span class="line">_currentVerticalSpeed -= fallSpeed * Time.deltaTime;</span><br></pre></td></tr></table></figure><p>Apex Modifiers(顶点修改器)</p><blockquote><p>得到一个反作用力的改变以及轻微的速度提升，轻松地降落在想要的地方，这是一个带有夸大值的例子</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">float</span> _apexPoint = Mathf.InverseLerp(_jumpApexThreshold, <span class="number">0</span>, Mathf.Abs(Velocity.y));</span><br><span class="line"><span class="keyword">var</span> apexBonus = Mathf.Sign(Input.x) * _apexBonus * _apexPoint;</span><br><span class="line">_currentHorizontalSpeed += apexBonus * Time.deltaTime;</span><br><span class="line">_fallSpeed = Mathf.Lerp(_minFallSpeed, _maxFallSpeed, _apexPoint);</span><br></pre></td></tr></table></figure><p>Jump Buffering(跳跃缓冲)</p><blockquote><p>带有夸大值，在实际落地之前排队下一次跳跃，这可能是一个好的控制器最重要的隐藏部分<br>如果玩家按下跳跃，角色只是坐在那里</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(_colDown &amp;&amp; _lastJumpPressed + _jumpBuffer &gt; Time.time)&#123;</span><br><span class="line">    <span class="comment">// 跳跃</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Coyote time</p><blockquote><p>离开平台几号秒后执行，离开地面后并检查是否在Coyote阈值内按下跳跃</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.JumpDown &amp;&amp; !_colDown &amp;&amp; _timeLeftGrounded + _coyoteTimeThreshold &gt; Time.time)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Do more jumpies</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Clamped fall speed</p><blockquote><p>在下降的时候控制，用于轻松躲避或降落在平台</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (_currentVerticalSpeed &lt; _fallClamp)</span><br><span class="line">&#123;</span><br><span class="line">    _currentVerticalSpeed = _fallClamp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Edge detection(边缘检测)</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (_currentVerticalSpeed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _currentVerticalSpeed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> dir = transform.position - hit.transform.position;</span><br><span class="line">transform.position += dir.normalized * move.magnitude;</span><br></pre></td></tr></table></figure><p>备考功能：</p><ul><li>控制窗口大小</li><li>攻击<ul><li>攻击<ul><li>单体攻击</li><li>多体攻击(穿透攻击)</li></ul></li><li>攻击类型<ul><li>范围攻击</li><li>连击</li></ul></li><li>其他<ul><li>子弹追踪</li></ul></li></ul></li><li>分数</li><li>血条</li></ul><p>备考实例：</p><ol><li>决定游戏类型</li><li>提前准备固定模板<ol><li>菜单</li><li>屏幕HUD界面</li><li>保存和读取数据<ol><li>同步选项</li><li>追踪进展</li></ol></li><li>支持各种不同的控制器类型<ul><li>不同类型<ol><li>2D</li><li>3D</li><li>双人</li></ol></li><li>不同设备<ol start="4"><li>键盘+鼠标</li><li>滑动控制</li></ol></li></ul></li><li>制作组名单<ol><li>Game Design 游戏设计</li><li>Programming 程序</li><li>Music&#x2F;SFX 音乐&#x2F;特效</li></ol></li></ol></li></ol><h3 id="Game-Jam正式步骤："><a href="#Game-Jam正式步骤：" class="headerlink" title="Game Jam正式步骤："></a>Game Jam正式步骤：</h3><ol><li>决定游戏类型<br>拿到题目，脑子最清醒，有很多想法<br>在非常短的时间内，不要想的很清楚，有个雏形就行，——小会议进行思维碰撞。<br>关卡设计<br>素材+故事<br>设计关卡<br>放出惊喜DEMO</li></ol><p>实战：<br>过场管理器(控制关卡)</p><ul><li>关卡控制<ul><li>擦除现有关卡</li><li>跳转新的关卡<br>音乐管理器</li></ul></li><li>BGM控制<ul><li>随着关卡载入，进行淡入淡出<br>HUD窗口管理器</li></ul></li><li>负责在屏幕上绘制信息<ul><li>教程提示</li><li>根据情况出现按键提示图标</li><li>分数</li><li>开始&#x2F;暂停</li><li>选项菜单<ul><li>设置<ul><li>show particles</li><li>show trails</li><li>screen shake</li><li>low sensitivity aiming</li><li>toggle aim mode on&#x2F;off</li><li>always show arrow when holding magnet</li></ul></li><li>音乐</li><li>手柄</li><li>键盘<ul><li>上下左右</li><li>跳</li></ul></li><li>艺术</li></ul></li></ul></li></ul><p>配置管理器</p><ol><li>设置管理器，对设置进行读取，操控硬盘上的文本读取</li><li>销毁管理器GameObject对象，替换成关卡</li><li>每次开始关卡之前都读取数据</li></ol><h3 id="优质游戏："><a href="#优质游戏：" class="headerlink" title="优质游戏："></a>优质游戏：</h3><h4 id="Vintage-Flashlight"><a href="#Vintage-Flashlight" class="headerlink" title="Vintage Flashlight"></a>Vintage Flashlight</h4><h4 id="Roll-Of-The-Dice-2022GameJam"><a href="#Roll-Of-The-Dice-2022GameJam" class="headerlink" title="Roll Of The Dice 2022GameJam"></a>Roll Of The Dice 2022GameJam</h4><blockquote><p><a href="https://escapadegames.itch.io/roll-of-the-dice" target="_blank" rel="noopener">https://escapadegames.itch.io/roll-of-the-dice</a></p></blockquote><img src="/blog/p/c8a4b253/RollOfTheDice.png" class="" title="RollOfTheDice"><h4 id="Randomancer"><a href="#Randomancer" class="headerlink" title="Randomancer"></a>Randomancer</h4><blockquote><p><a href="https://riuku.itch.io/randomancer" target="_blank" rel="noopener">https://riuku.itch.io/randomancer</a></p></blockquote><p>类似于植物大战僵尸</p><img src="/blog/p/c8a4b253/Randomancer.gif" class="" title="Randomancer">]]></content>
    
    
    <summary type="html">&lt;p&gt;暂无描述&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="游戏开发" scheme="https://ayou129.github.io/blog/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Lua</title>
    <link href="https://ayou129.github.io/blog/p/6fbb57c1/"/>
    <id>https://ayou129.github.io/blog/p/6fbb57c1/</id>
    <published>2022-12-09T11:44:01.000Z</published>
    <updated>2022-10-23T10:22:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习一下lua语言，使用到的场景有许多，游戏开发、redis中并发问题。</p><span id="more"></span><h2 id="有关游戏的"><a href="#有关游戏的" class="headerlink" title="有关游戏的"></a>有关游戏的</h2><p>在编写<code>第三人称游戏</code>的开发核心代码时，我们可以考虑以下几个方面：</p><ul><li>使用<code>变量</code>来存储<code>玩家的位置和姿势</code>，并根据键盘或控制器的输入来更新玩家的位置。</li><li>使用<code>函数</code>来封装<code>游戏世界中的各种对象</code>，例如：敌人、道具、建筑物等。</li><li>使用<code>循环</code>来处理<code>游戏世界中各个对象的逻辑</code>，例如：敌人的移动、道具的消失、建筑物的损坏等。</li><li>使用<code>条件语句</code>来处理游戏<code>世界中各种事件的发生</code>，例如：玩家的死亡、敌人的攻击、道具的收集等。</li></ul><p>以下是一段基本的第三人称游戏开发核心代码的例子：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 定义玩家的位置和姿势变量</span></span><br><span class="line"><span class="keyword">local</span> playerPosition = &#123;x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>&#125;</span><br><span class="line"><span class="keyword">local</span> playerRotation = &#123;x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义游戏世界中各种对象的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createEnemy</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> enemy = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    health = <span class="number">100</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> enemy</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createItem</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> item = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    duration = <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> item</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createBuilding</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> building = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    health = <span class="number">1000</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> building</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 初始化游戏世界中的各种对象</span></span><br><span class="line"><span class="keyword">local</span> enemies = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> items = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> buildings = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 处理游戏世界中各个对象</span></span><br></pre></td></tr></table></figure><h3 id="计算炮弹的轨迹"><a href="#计算炮弹的轨迹" class="headerlink" title="计算炮弹的轨迹"></a>计算炮弹的轨迹</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 炮弹的初始位置</span></span><br><span class="line"><span class="keyword">local</span> bullet_x = <span class="number">10</span></span><br><span class="line"><span class="keyword">local</span> bullet_y = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 炮弹的初始速度和方向</span></span><br><span class="line"><span class="keyword">local</span> bullet_speed = <span class="number">100</span></span><br><span class="line"><span class="keyword">local</span> bullet_angle = <span class="number">45</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 炮弹的重力加速度</span></span><br><span class="line"><span class="keyword">local</span> gravity = <span class="number">9.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 计算炮弹的位移</span></span><br><span class="line"><span class="keyword">local</span> <span class="built_in">time</span> = <span class="number">0.1</span></span><br><span class="line">bullet_x = bullet_x + bullet_speed * <span class="built_in">math</span>.<span class="built_in">cos</span>(bullet_angle) * <span class="built_in">time</span></span><br><span class="line">bullet_y = bullet_y + bullet_speed * <span class="built_in">math</span>.<span class="built_in">sin</span>(bullet_angle) * <span class="built_in">time</span> - <span class="number">0.5</span> * gravity * <span class="built_in">time</span> * <span class="built_in">time</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出炮弹的新位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;bullet_x = &quot;</span> .. bullet_x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;bullet_y = &quot;</span> .. bullet_y)</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><a href="http://www.lua.org/start.html" target="_blank" rel="noopener">http://www.lua.org/start.html</a></p></blockquote><h3 id="MAC源代码编译"><a href="#MAC源代码编译" class="headerlink" title="MAC源代码编译"></a>MAC源代码编译</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -R -O http://www.lua.org/ftp/lua-<span class="number">5</span>.<span class="number">4</span>.<span class="number">4</span>.tar.gz</span><br><span class="line">tar zxf lua-<span class="number">5</span>.<span class="number">4</span>.<span class="number">4</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lua-<span class="number">5</span>.<span class="number">4</span>.<span class="number">4</span></span><br><span class="line">make all test</span><br><span class="line"></span><br><span class="line"># 出现这个说明成功</span><br><span class="line">lua -v</span><br><span class="line">Lua <span class="number">5</span>.<span class="number">4</span>.<span class="number">4</span>  Copyright (C) <span class="number">1994</span>-<span class="number">2022</span> Lua.org, PUC-Rio</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">sudo make all install</span><br><span class="line"></span><br><span class="line">lua -v</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ol><li><a href="https://www.lua.org/download.html" target="_blank" rel="noopener">https://www.lua.org/download.html</a> 选择 <code>Building</code> -&gt; <code>get a binary</code></li><li>Download</li><li>lua-5.4.2_Win64_bin.zip</li><li>Windows 高级系统设置 环境变量 系统变量 Path + <code>C:\Users\lee\lua-5.4.2_Win64_bin</code><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lua54 -v</span><br><span class="line"><span class="meta">&gt;</span> <span class="language-javascript"><span class="title class_">Lua</span> <span class="number">5.4</span><span class="number">.2</span>  <span class="title class_">Copyright</span> (C) <span class="number">1994</span>-<span class="number">2020</span> <span class="title class_">Lua</span>.<span class="property">org</span>, <span class="variable constant_">PUC</span>-<span class="title class_">Rio</span></span></span><br></pre></td></tr></table></figure></li></ol><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>注释</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">    多行注释</span></span><br><span class="line"><span class="comment">]]</span></span><br></pre></td></tr></table></figure><p>类型和值</p><blockquote><p>使用 type 可以获取 <code>值</code> 对应的类型名称(return string)</p></blockquote><p>8中基本类型</p><ul><li>nil(空，主要作用是和其他值进行区分，初始化的时候会被回收内存)</li><li>boolean</li><li>number</li><li>string</li><li>userdata(用户数据，例如，标准I&#x2F;O库使用用户数据来表示打开的文件)</li><li>function(函数)</li><li>thread(线程)</li><li>table(表)</li></ul><p>数值常量<br>整型 和 浮点型 都是”number”，可以相互转换，也相等</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="number">1</span> == <span class="number">1.0</span> <span class="comment">--&gt; true</span></span><br><span class="line">&gt; <span class="number">-3</span> == <span class="number">-3.0</span> <span class="comment">--&gt; true</span></span><br><span class="line">&gt; <span class="number">0.2e3</span> == <span class="number">200</span> <span class="comment">--&gt; true</span></span><br></pre></td></tr></table></figure><p>如果要区分整型 和 浮点型，则使用<code>math.type</code></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">math</span>.<span class="built_in">type</span>(<span class="number">3</span>)  <span class="comment">--&gt; integer</span></span><br><span class="line"><span class="built_in">math</span>.<span class="built_in">type</span>(<span class="number">3.0</span>) <span class="comment">--&gt; float</span></span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 幂运算 ^ <span class="keyword">return</span> float</span><br><span class="line">x^<span class="number">0.5</span> 计算x的平方根</span><br><span class="line">x^(<span class="number">1</span>/<span class="number">3</span>) 计算x的立方根</span><br></pre></td></tr></table></figure><p>关系运算</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">== 相等性测试</span><br><span class="line">~= 不等性测试</span><br><span class="line">&lt;=</span><br><span class="line">&gt;=</span><br><span class="line">&gt;</span><br><span class="line">&lt;</span><br></pre></td></tr></table></figure><p>数学库(math)<br>数学函数、<br>指数函数、<br>取整函数</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">floor</span> 向负无穷取整</span><br><span class="line"><span class="built_in">ceil</span> 向正无穷取整</span><br><span class="line"><span class="built_in">modf</span> 向零取整，额外返回小数部分</span><br></pre></td></tr></table></figure><p>最大和最小函数maxmin、<br>随机数random</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">random</span>() 不带参数[<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">random</span>() 带<span class="number">1</span>参数：整型，[<span class="number">1</span>,n]</span><br><span class="line"><span class="built_in">random</span>() 带<span class="number">2</span>参数：整型，[n,y]</span><br><span class="line">例子：<span class="built_in">random</span>(<span class="number">6</span>) 模拟筛子</span><br><span class="line"></span><br><span class="line"><span class="built_in">randomseed</span> 设置伪随机数发生器的种子，，通常调用<span class="built_in">math</span>.<span class="built_in">randomseed</span>(<span class="built_in">os</span>.<span class="built_in">time</span>())来使用当前系统时间作为种子初始化随机数发生器</span><br></pre></td></tr></table></figure><p>πpi、<br>huge(最大可表示数值，大多数平台代表inf)</p><p>表示范围</p><table><thead><tr><th>版本</th><th>整型存储</th><th>浮点型存储</th></tr></thead><tbody><tr><td>标准Lua</td><td>64个比特位 最大值是2^63-1</td><td>双精度，64个比特位，11位为指数；16个有效十进制位</td></tr><tr><td>精简Lua</td><td>32个比特位 最大值是2^31-1</td><td>单精度，32个比特位；7个有效十进制位</td></tr></tbody></table><p>双精度浮点数的限制：</p><ul><li>回环</li><li>超过表示范围之后不可控，会导致精度缺失，要谨慎思考所使用的表示方式</li></ul><p>强制转换<br>对于整型 可以使用 + 0.0 强制转换成浮点型</p><p>但是如果精度缺失后，可以使用 与零进行按位或运算，可以讲浮点型强制转换成整型</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">2</span>^<span class="number">53</span>         <span class="comment">--&gt; 9.007199254741e+15 (浮点型值)</span></span><br><span class="line">&gt;<span class="number">2</span>^<span class="number">53</span> | <span class="number">0</span>     <span class="comment">--&gt; 9007199254740992 (整型值)</span></span><br></pre></td></tr></table></figure><p>练习：<br>练习3.1：以下哪些是有效的数值常量？它们的值分别是多少？</p><img src="/blog/p/6fbb57c1/3.9%E7%BB%83%E4%B9%A0-%E6%9C%89%E6%95%88%E6%95%B0%E5%80%BC1.png" class="" title="3.9练习-有效数值1.png"><p>练习3.2：解释下列表达式之所以得出相应结果的原因。（注意：整型算术运算总是会回环。）</p><img src="/blog/p/6fbb57c1/3.9%E7%BB%83%E4%B9%A0-%E6%9C%89%E6%95%88%E6%95%B0%E5%80%BC2.png" class="" title="3.9练习-有效数值2.png"><p>练习3.3：下列代码的输出结果是什么？</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i = <span class="number">-10</span>, <span class="number">10</span> <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(i, i%<span class="number">3</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><img src="/blog/p/6fbb57c1/3.9%E7%BB%83%E4%B9%A0-%E6%9C%89%E6%95%88%E6%95%B0%E5%80%BC3.png" class="" title="3.9练习-有效数值3.png"><h2 id="3-7-运算符优先级"><a href="#3-7-运算符优先级" class="headerlink" title="3.7 运算符优先级"></a>3.7 运算符优先级</h2><p>TODO</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="33-线程和状态"><a href="#33-线程和状态" class="headerlink" title="33 线程和状态"></a>33 线程和状态</h2><p>多线程：共享内存(重点1)的抢占式线程(重点2)</p><p><code>Lua协程</code> 本质就是<code>线程(thread)</code></p><p>lua_pushnumber时 lua_State这些函数的第一个参数，不仅表示的lua状态</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习一下lua语言，使用到的场景有许多，游戏开发、redis中并发问题。&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Lua" scheme="https://ayou129.github.io/blog/tags/Lua/"/>
    
    <category term="游戏开发" scheme="https://ayou129.github.io/blog/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>安卓反编译</title>
    <link href="https://ayou129.github.io/blog/p/5001f0a0/"/>
    <id>https://ayou129.github.io/blog/p/5001f0a0/</id>
    <published>2022-11-25T08:03:20.000Z</published>
    <updated>2022-11-08T12:19:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候想通过研究大厂的APP内部Mysql字段是如何设计的，但是大厂开发人员将信息传递的方式放入了TCP更深层的地方，尝试使用反编译的方式获取其数据信息，方便研究。</p><span id="more"></span><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>安卓 <code>Android app</code> 的包后缀是apk</p><p>工具：<code>apktool</code>：资源文件获取，可以提取出图片文件和布局文件进行使用查看<br>工具：<code>dex2jar</code>将apk反编译成Java源码（classes.dex转化成jar文件）<br>工具：<code>jd-gui</code>查看APK中classes.dex转化成出的jar文件，即源码文件</p><h2 id="资源文件获取-Apktool"><a href="#资源文件获取-Apktool" class="headerlink" title="资源文件获取 Apktool"></a>资源文件获取 Apktool</h2><p><code>apktool</code> 可以进行反编译，52pojie中有很多工具，全部都是集成了apktool工具进行操作的。<br>所以这里只介绍 <code>apktool</code> 的工具使用说明</p><p>官网 <code>https://ibotpeaches.github.io/Apktool/build/</code><br>github <code>https://github.com/iBotPeaches/Apktool</code></p><p><code>apktool</code> 源代码编译后的文件就是 <code>released</code>版本</p><h3 id="Mac切换不同版本的apktool"><a href="#Mac切换不同版本的apktool" class="headerlink" title="Mac切换不同版本的apktool"></a>Mac切换不同版本的apktool</h3><p>1.下载多个版本到根目录的apktool list文件夹中<br>2.<code>sudo cp apktool\ list/apktool_2.7.0.jar /usr/local/bin/apktool.jar</code><br>3.<code>chmod +x /usr/local/bin/apktool.jar</code></p><h3 id="Mac如何build"><a href="#Mac如何build" class="headerlink" title="Mac如何build"></a>Mac如何build</h3><p><code>https://ibotpeaches.github.io/Apktool/build/</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ./gradlew build dist</span><br><span class="line"><span class="comment"># 以及</span></span><br><span class="line">sudo ./gradlew build <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Mac如何反编译"><a href="#Mac如何反编译" class="headerlink" title="Mac如何反编译"></a>Mac如何反编译</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除之前编译的文件夹</span></span><br><span class="line">rm <span class="operator">-</span>rf app<span class="operator">-</span><span class="built_in">prod</span><span class="operator">-</span>release_encrypted_guanwang_16_align</span><br><span class="line"><span class="comment"># 反编译</span></span><br><span class="line">sudo apktool d app<span class="operator">-</span><span class="built_in">prod</span><span class="operator">-</span>release_encrypted_guanwang_16_align.apk</span><br></pre></td></tr></table></figure><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p><code>uki apk</code> 安全方面可能利用了apktool的bug，解码不使用<code>v2.0.0-RC2</code><br>会报</p><img src="/blog/p/5001f0a0/Could%20not%20decode%20arsc%20file.png" class="" title="Could not decode arsc file.png"><p>但是使用了rc2版本之后依然会遇到下面的问题</p><ul><li>要使用java7 如何安装<a href="/blog/p/c8447915/" title="Java">Java</a></li><li>maven不再支持http的方式，尝试解决了一下，<br>在每个<code>repositories</code> 下面都修改了代码<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">repositories</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 这里需要注销这行 mavenCentral()</span></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        url <span class="string">&quot;https://repo1.maven.org/maven2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">name</span> <span class="operator">=</span> <span class="string">&quot;forge&quot;</span></span><br><span class="line">        <span class="attr">url</span> <span class="operator">=</span> <span class="string">&quot;http://files.minecraftforge.net/maven&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">name</span> <span class="operator">=</span> <span class="string">&quot;sonatype&quot;</span></span><br><span class="line">        <span class="attr">url</span> <span class="operator">=</span> <span class="string">&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>但是依然遇到了一些问题，就此放弃<img src="/blog/p/5001f0a0/problem2.png" class="" title="problem2.png"></li></ul><p>经测试</p><ul><li>酷狗apk，反编译通过，但是安全方面使用了混淆，所以源代码较难理解</li><li>微信apk，反编译通过，使用了混淆</li><li>Keep apk，反编译通过，</li><li>Soul apk，反编译通过，</li><li>积木 apk，未尝试</li><li>uki apk，反编译不通过</li></ul><h2 id="dex2jar-将apk反编译成Java源码（classes-dex转化成jar文件）"><a href="#dex2jar-将apk反编译成Java源码（classes-dex转化成jar文件）" class="headerlink" title="dex2jar 将apk反编译成Java源码（classes.dex转化成jar文件）"></a>dex2jar 将apk反编译成Java源码（classes.dex转化成jar文件）</h2><ol><li>解压apk</li><li>获取所有classes.dex(每一个dex都有相关代码)</li><li>执行<code>./d2j-dex2jar.sh ../keep_keep_homepage___default_7.39.0_73326892的副本/classes.dex</code></li></ol><h2 id="jd-gui-查看jar里面的文件"><a href="#jd-gui-查看jar里面的文件" class="headerlink" title="jd-gui 查看jar里面的文件"></a><code>jd-gui</code> 查看jar里面的文件</h2><h2 id="其他相关"><a href="#其他相关" class="headerlink" title="其他相关"></a>其他相关</h2><p>dex2jar <code>https://github.com/pxb1988/dex2jar</code></p>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="Android" scheme="https://ayou129.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>加密算法</title>
    <link href="https://ayou129.github.io/blog/p/79dcde6c/"/>
    <id>https://ayou129.github.io/blog/p/79dcde6c/</id>
    <published>2022-11-24T04:01:59.000Z</published>
    <updated>2022-09-02T08:05:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>介绍经常用到的加密算法，不同场景对加密算法的选择。</p><span id="more"></span><h2 id="对称加密和非对称加密"><a href="#对称加密和非对称加密" class="headerlink" title="对称加密和非对称加密"></a>对称加密和非对称加密</h2><p><code>https://zhuanlan.zhihu.com/p/347114235</code></p><p>加密算法分 <code>对称加密</code> 和 <code>非对称加密</code>，其中<br><code>对称加密算法</code> 的加密与解密 密钥相同<br><code>非对称加密算法</code> 的加密密钥与解密 密钥不同，<br>此外，还有一类 不需要密钥 的 散列算法。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">常见的 对称加密 算法主要有 DES、<span class="number">3</span>DES、AES 等</span><br><span class="line">常见的 非对称算法 主要有 RSA、DSA 等</span><br><span class="line">散列算法 主要有 <span class="keyword">SHA-1、MD5 </span>等</span><br></pre></td></tr></table></figure><h3 id="对称加密-私钥-早期加密算法"><a href="#对称加密-私钥-早期加密算法" class="headerlink" title="对称加密(私钥)(早期加密算法)"></a>对称加密(私钥)(早期加密算法)</h3><p>发送放和接收方 使用相同的私钥<br>例子：</p><ul><li>寄快递 收快递 快递上了保险盒，两人都有相同的钥匙。<img src="/blog/p/79dcde6c/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png" class="" title="对称加密.png"></li></ul><h3 id="非对称加密-公开密钥加密算法"><a href="#非对称加密-公开密钥加密算法" class="headerlink" title="非对称加密(公开密钥加密算法)"></a>非对称加密(公开密钥加密算法)</h3><p><code>加密</code> 和 <code>解密</code> 使用不同的密钥(一公一私)</p><img src="/blog/p/79dcde6c/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png" class="" title="非对称加密.png"><h3 id="常见的签名加密算法"><a href="#常见的签名加密算法" class="headerlink" title="常见的签名加密算法"></a>常见的签名加密算法</h3><h4 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h4><p>MD5 用的是 哈希函数，它的典型应用是对一段信息产生 信息摘要，以 防止被篡改。<br>严格来说，MD5 不是一种 加密算法 而是 摘要算法。<br>无论是多长的输入，MD5 都会输出长度为 128bits 的一个串 (通常用 16 进制 表示为 32 个字符)。</p><h4 id="SHA1"><a href="#SHA1" class="headerlink" title="SHA1"></a>SHA1</h4><p>SHA1 是和 MD5 一样流行的 消息摘要算法，然而 SHA1 比 MD5 的 安全性更强。<br>对于长度小于 2 ^ 64 位的消息，SHA1 会产生一个 160 位的 消息摘要。<br>基于 MD5、SHA1 的信息摘要特性以及 不可逆 (一般而言)，可以被应用在检查 文件完整性 以及 数字签名 等场景。</p><h4 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h4><p>HMAC 是密钥相关的 哈希运算消息认证码（Hash-based Message Authentication Code），HMAC 运算利用 哈希算法 (MD5、SHA1 等)，以 一个密钥 和 一个消息 为输入，生成一个 消息摘要 作为 输出。<br>HMAC 发送方 和 接收方 都有的 key 进行计算，而没有这把 key 的第三方，则是 无法计算 出正确的 散列值的，这样就可以 防止数据被篡改。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试结论：HMAC 算法实例在 多线程环境 下是 不安全的。但是需要在 多线程访问 时，进行同步的辅助类，使用 ThreadLocal 为 每个线程缓存 一个实例可以避免进行锁操作。</span><br></pre></td></tr></table></figure><h4 id="AES-x2F-DES-x2F-3DES算法"><a href="#AES-x2F-DES-x2F-3DES算法" class="headerlink" title="AES&#x2F;DES&#x2F;3DES算法"></a>AES&#x2F;DES&#x2F;3DES算法</h4><p>AES、DES、3DES 都是 对称 的 块加密算法，加解密 的过程是 可逆的。<br>常用的有 AES128、AES192、AES256 (默认安装的 JDK 尚不支持 AES256，需要安装对应的 jce 补丁进行升级 jce1.7，jce1.8)。</p><h4 id="RSA算法"><a href="#RSA算法" class="headerlink" title="RSA算法"></a>RSA算法</h4><p>RSA 加密算法是目前最有影响力的 公钥加密算法，并且被普遍认为是目前 最优秀的公钥方案 之一。<br>RSA 是第一个能同时用于 加密 和 数字签名 的算法，它能够 抵抗 到目前为止已知的 所有密码攻击，已被 ISO 推荐为公钥数据加密标准。</p>]]></content>
    
    
    <summary type="html">数字签名、信息加密 是前后端开发都经常需要使用到的技术，应用场景包括了用户登入、交易、信息通讯、oauth 等等，不同的应用场景也会需要使用到不同的签名加密算法，或者需要搭配不一样的 签名加密算法 来达到业务目标。这里简单的给大家介绍几种常见的签名加密算法和一些典型场景下的应用。</summary>
    
    
    
    
    <category term="加密算法" scheme="https://ayou129.github.io/blog/tags/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分布式锁</title>
    <link href="https://ayou129.github.io/blog/p/f3599f9f/"/>
    <id>https://ayou129.github.io/blog/p/f3599f9f/</id>
    <published>2021-12-05T14:23:29.000Z</published>
    <updated>2022-10-02T01:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>分布式锁，即分布式系统中的锁，目的是为了解决 分布式系统中控制共享资源访问 的问题。<br><br>以下是我的个人理解…</p><span id="more"></span><h2 id="分布式锁应该具备哪些条件："><a href="#分布式锁应该具备哪些条件：" class="headerlink" title="分布式锁应该具备哪些条件："></a>分布式锁应该具备哪些条件：</h2><ul><li>分布式系统环境下，一个方法在同一时间只能被一个机器的一个线程执行</li><li>高可用的获取锁与释放锁</li><li>高性能的获取锁与释放锁</li><li>具备可重入特性（可理解为重新进入，由多于一个任务并发使用，而不必担心数据错误）</li><li>具备锁失效机制，即自动解锁，防止死锁</li><li>具备非阻塞锁特性，即没有获取到锁将直接返回获取锁失败</li></ul><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><h3 id="基于数据库"><a href="#基于数据库" class="headerlink" title="基于数据库"></a>基于数据库</h3><p>核心是 <code>数据库表的唯一索引</code>，唯一索引具有排他性。</p><p>缺点：</p><ul><li>性能有瓶颈。</li></ul><h3 id="基于缓存-redis-x2F-memcached-x2F-tair"><a href="#基于缓存-redis-x2F-memcached-x2F-tair" class="headerlink" title="基于缓存(redis&#x2F;memcached&#x2F;tair)"></a>基于缓存(redis&#x2F;memcached&#x2F;tair)</h3><p>核心是 <code>setnx</code> ，理论上讲使用缓存的方案效率最高。</p><h3 id="基于zookeeper"><a href="#基于zookeeper" class="headerlink" title="基于zookeeper"></a>基于zookeeper</h3><p>核心是创建瞬时节点，节点不能重复创建 保证排他性。一般用于配置中心</p><p>缺点：</p><ul><li>磁盘IO效率低下</li></ul><h2 id="下方是待处理的内容"><a href="#下方是待处理的内容" class="headerlink" title="下方是待处理的内容"></a>下方是待处理的内容</h2><h3 id="Redis实现"><a href="#Redis实现" class="headerlink" title="Redis实现"></a>Redis实现</h3><h4 id="Redis类"><a href="#Redis类" class="headerlink" title="Redis类"></a>Redis类</h4><h3 id="第二个版本-Mysql悲观锁实现-for-update"><a href="#第二个版本-Mysql悲观锁实现-for-update" class="headerlink" title="第二个版本 Mysql悲观锁实现 for update"></a>第二个版本 Mysql悲观锁实现 for update</h3><p>解决超发问题</p><p>注意，在 SQL 中加入的 for update 语句，意味着将持有对数据库记录的行更新锁（因为这里使用主键查询，所以只会对行加锁。如果使用的是非主键查询，要考虑是否对全表加锁的问题，加锁后可能引发其他查询的阻塞），那就意味着在高并发的场景下，当一条事务持有了这个更新锁才能往下操作，其他的线程如果要更新这条记录，都需要等待，这样就不会出现超发现象引发的数据一致性问题了。</p><p>有性能瓶颈，因为悲观锁的实现方式就是抢锁，当请求过多时，会堵塞进程，造成延迟甚至 bad request</p><h3 id="第三个版本-Mysql乐观锁-以及-CAS机制-实现-version"><a href="#第三个版本-Mysql乐观锁-以及-CAS机制-实现-version" class="headerlink" title="第三个版本 Mysql乐观锁 以及 CAS机制 实现(version)"></a>第三个版本 Mysql乐观锁 以及 CAS机制 实现(version)</h3><p>会有ABA的问题</p><blockquote><p><a href="https://en.wikipedia.org/wiki/ABA_problem" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/ABA_problem</a></p></blockquote><h3 id="第四个版本-重入机制"><a href="#第四个版本-重入机制" class="headerlink" title="第四个版本 重入机制"></a>第四个版本 重入机制</h3><p>有性能问题</p><h3 id="最终版本-Redis实现"><a href="#最终版本-Redis实现" class="headerlink" title="最终版本 Redis实现"></a>最终版本 Redis实现</h3><p>解决的问题：超发(原子性)、性能问题(内存操作，非阻塞Io多路复用机制)、</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;分布式锁，即分布式系统中的锁，目的是为了解决 分布式系统中控制共享资源访问 的问题。&lt;br&gt;&lt;br&gt;以下是我的个人理解…&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="分布式" scheme="https://ayou129.github.io/blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="Mysql" scheme="https://ayou129.github.io/blog/tags/Mysql/"/>
    
    <category term="Redis" scheme="https://ayou129.github.io/blog/tags/Redis/"/>
    
    <category term="Zookeeper" scheme="https://ayou129.github.io/blog/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>实战：在线售票功能</title>
    <link href="https://ayou129.github.io/blog/p/fc5b94cd/"/>
    <id>https://ayou129.github.io/blog/p/fc5b94cd/</id>
    <published>2021-10-13T15:00:40.000Z</published>
    <updated>2021-12-01T15:00:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><ul><li>展示图<ul><li><img src="/blog/p/fc5b94cd/1.png" class="" title="展示图1"></li><li><img src="/blog/p/fc5b94cd/2.png" class="" title="展示图2"></li><li><img src="/blog/p/fc5b94cd/3.png" class="" title="展示图3"></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;暂无描述&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="实战" scheme="https://ayou129.github.io/blog/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Paxos</title>
    <link href="https://ayou129.github.io/blog/p/c20c6b6/"/>
    <id>https://ayou129.github.io/blog/p/c20c6b6/</id>
    <published>2021-08-20T12:30:41.000Z</published>
    <updated>2021-10-22T12:30:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="Paxos-算法"><a href="#Paxos-算法" class="headerlink" title="Paxos 算法"></a>Paxos 算法</h2><p>「Pa so si」</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>一种基于<code>消息传递</code>的<code>分布式一致性算法</code>。</p><h3 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>在分布式系统中的各个进程之间对某个值如何达成一致，即<code>分布式一致性</code>的问题。</p><h3 id="如何解决问题？"><a href="#如何解决问题？" class="headerlink" title="如何解决问题？"></a>如何解决问题？</h3><p>Paxos通过类似 <code>民主议会制度</code> 进行选举</p><ul><li><code>所有的人民</code> 都可以参与决议(提议和投票)。</li><li><code>少数服从多数(N/2+1)</code> 的方式来达成共识(只有超过一半的机器都认可某一个消息，最终所有的机器都对这个消息的决议达成共识)</li></ul><p>涉及到的角色：</p><ul><li><strong>提议者(Proposer)</strong> ：提出提案。提案信息包括：「提议编号、提议值」。</li><li><strong>决策者(Acceptor)</strong> ：参与决策，回应P的提案。如果多数批准，则通过。</li><li><strong>最终决策学习者(Learner)</strong> ：不参与决策，从P和A学习最新达成一致的提案。</li></ul><p>在多副本状态机中，每个副本同时具有三种角色</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2.png" class="" title="Paxos算法中的角色.png"><p>通过一个决议分成两个阶段(学习阶段之前决议已经形成)</p><ol><li><strong>第一：准备阶段(Prepare)</strong> ：<code>P</code> 向 <code>所有A</code> 发出准备决议请求，<code>所有A</code>收到请求后进行Promise承诺。</li><li><strong>第二：通过阶段(Accept)</strong> ：<code>P</code> 收到了 <code>多数A</code> 的Promise承诺，标志着本次决议成功，将决议结果发送给 <code>所有A</code>。</li><li><strong>第二：学习阶段(Learn)</strong> ：将决议结果抄送一份发给 <code>所有L</code></li></ol><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E6%B5%81%E7%A8%8B.png" class="" title="Paxos算法流程.png"><p>Paxos算法流程中的每条消息描述如下：</p><ul><li>Prepare: Proposer生成全局唯一且递增的Proposal ID (可使用时间戳加Server ID)，向所有Acceptors发送Prepare请求，这里无需携带提案内容，只携带Proposal ID即可。</li><li>Promise: Acceptors收到Prepare请求后，做出“两个承诺，一个应答”。</li></ul><p>两个承诺：</p><ol><li>不再接受Proposal ID小于等于（注意：这里是&lt;&#x3D; ）当前请求的Prepare请求。</li><li>不再接受Proposal ID小于（注意：这里是&lt; ）当前请求的Propose请求。</li></ol><p>一个应答：</p><ul><li><p>不违背以前作出的承诺下，回复已经Accept过的提案中Proposal ID最大的那个提案的Value和Proposal ID，没有则返回空值。</p></li><li><p>Propose: Proposer 收到多数Acceptors的Promise应答后，从应答中选择Proposal ID最大的提案的Value，作为本次要发起的提案。如果所有应答的提案Value均为空值，则可以自己随意决定提案Value。然后携带当前Proposal ID，向所有Acceptors发送Propose请求。</p></li><li><p>Accept: Acceptor收到Propose请求后，在不违背自己之前作出的承诺下，接受并持久化当前Proposal ID和提案Value。</p></li><li><p>Learn: Proposer收到多数Acceptors的Accept后，决议形成，将形成的决议发送给所有Learners。</p></li></ul><p>Paxos算法伪代码描述如下：</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E4%BC%AA%E4%BB%A3%E7%A0%81.png" class="" title="Paxos算法伪代码.png"><ol><li>获取一个Proposal ID n，为了保证Proposal ID唯一，可采用时间戳+Server ID生成；</li><li>Proposer向所有Acceptors广播Prepare(n)请求；</li><li>Acceptor比较n和minProposal，如果n&gt;minProposal，minProposal&#x3D;n，并且将 acceptedProposal 和 acceptedValue 返回；</li><li>Proposer接收到过半数回复后，如果发现有acceptedValue返回，将所有回复中acceptedProposal最大的acceptedValue作为本次提案的value，否则可以任意决定本次提案的value；</li><li>到这里可以进入第二阶段，广播Accept (n,value) 到所有节点；</li><li>Acceptor比较n和minProposal，如果n&gt;&#x3D;minProposal，则acceptedProposal&#x3D;minProposal&#x3D;n，acceptedValue&#x3D;value，本地持久化后，返回；否则，返回minProposal。</li><li>提议者接收到过半数请求后，如果发现有返回值result &gt;n，表示有更新的提议，跳转到1；否则value达成一致。</li></ol><p>几个例子，实例1如下图：</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E5%AE%9E%E4%BE%8B1.png" class="" title="Paxos算法实例1.png"><p>图中P代表Prepare阶段，A代表Accept阶段。3.1代表Proposal ID为3.1，其中3为时间戳，1为Server ID。X和Y代表提议Value。</p><p>实例1中P 3.1达成多数派，其Value(X)被Accept，然后P 4.5学习到Value(X)，并Accept。</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E5%AE%9E%E4%BE%8B2.png" class="" title="Paxos算法实例2.png"><p>实例2中P 3.1没有被多数派Accept（只有S3 Accept），但是被P 4.5学习到，P 4.5将自己的Value由Y替换为X，Accept（X）。</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E5%AE%9E%E4%BE%8B3.png" class="" title="Paxos算法实例3.png"><p>实例3中P 3.1没有被多数派Accept（只有S1 Accept），同时也没有被P 4.5学习到。由于P 4.5 Propose的所有应答，均未返回Value，则P 4.5可以Accept自己的Value (Y)。后续P 3.1的Accept (X) 会失败，已经Accept的S1，会被覆盖。</p><p>Paxos算法可能形成活锁而永远不会结束，如下图实例所示：</p><img src="/blog/p/c20c6b6/Paxos%E7%AE%97%E6%B3%95%E5%BD%A2%E6%88%90%E6%B4%BB%E9%94%81.png" class="" title="Paxos算法形成活锁.png"><p>回顾两个承诺之一，Acceptor不再应答Proposal ID小于等于当前请求的Prepare请求。意味着需要应答Proposal ID大于当前请求的Prepare请求。</p><p>两个Proposers交替Prepare成功，而Accept失败，形成活锁（Livelock）。</p><h2 id="三、Multi-Paxos算法"><a href="#三、Multi-Paxos算法" class="headerlink" title="三、Multi-Paxos算法"></a>三、Multi-Paxos算法</h2><p>原始的Paxos算法（Basic Paxos）只能对一个值形成决议，决议的形成至少需要两次网络来回，在高并发情况下可能需要更多的网络来回，极端情况下甚至可能形成活锁。如果想连续确定多个值，Basic Paxos搞不定了。因此Basic Paxos几乎只是用来做理论研究，并不直接应用在实际工程中。</p><p>实际应用中几乎都需要连续确定多个值，而且希望能有更高的效率。Multi-Paxos正是为解决此问题而提出。Multi-Paxos基于Basic Paxos做了两点改进：</p><ol><li>针对每一个要确定的值，运行一次Paxos算法实例（Instance），形成决议。每一个Paxos实例使用唯一的Instance ID标识。</li><li>在所有Proposers中选举一个Leader，由Leader唯一地提交Proposal给Acceptors进行表决。这样没有Proposer竞争，解决了活锁问题。在系统中仅有一个Leader进行Value提交的情况下，Prepare阶段就可以跳过，从而将两阶段变为一阶段，提高效率。</li></ol><img src="/blog/p/c20c6b6/Multi-Paxos%E6%B5%81%E7%A8%8B.png" class="" title="Multi-Paxos流程.png"><p>Multi-Paxos首先需要选举Leader，Leader的确定也是一次决议的形成，所以可执行一次Basic Paxos实例来选举出一个Leader。选出Leader之后只能由Leader提交Proposal，在Leader宕机之后服务临时不可用，需要重新选举Leader继续服务。在系统中仅有一个Leader进行Proposal提交的情况下，Prepare阶段可以跳过。</p><p>Multi-Paxos通过改变Prepare阶段的作用范围至后面Leader提交的所有实例，从而使得Leader的连续提交只需要执行一次Prepare阶段，后续只需要执行Accept阶段，将两阶段变为一阶段，提高了效率。为了区分连续提交的多个实例，每个实例使用一个Instance ID标识，Instance ID由Leader本地递增生成即可。</p><p>Multi-Paxos允许有多个自认为是Leader的节点并发提交Proposal而不影响其安全性，这样的场景即退化为Basic Paxos。</p><p>Chubby和Boxwood均使用Multi-Paxos。ZooKeeper使用的Zab也是Multi-Paxos的变形。</p><h2 id="Paxos算法推导过程"><a href="#Paxos算法推导过程" class="headerlink" title="Paxos算法推导过程"></a>Paxos算法推导过程</h2><p>Paxos算法的设计过程就是从正确性开始的，对于分布式一致性问题，很多进程提出（Propose）不同的值，共识算法保证最终只有其中一个值被选定，Safety表述如下：</p><ul><li>只有被提出（Propose）的值才可能被最终选定（Chosen）。</li><li>只有一个值会被选定（Chosen）。</li><li>进程只会获知到已经确认被选定（Chosen）的值。</li></ul><p>Paxos以这几条约束作为出发点进行设计，只要算法最终满足这几点，正确性就不需要证明了。Paxos算法中共分为三种参与者：Proposer、Acceptor以及Learner，通常实现中每个进程都同时扮演这三个角色。</p><p>Proposers向Acceptors提出Proposal，为了保证最多只有一个值被选定（Chosen），Proposal必须被超过一半的Acceptors所接受（Accept），且每个Acceptor只能接受一个值。</p><p>为了保证正常运行（必须有值被接受），所以Paxos算法中：</p><h3 id="P1：Acceptor必须接受（Accept）它所收到的第一个Proposal。"><a href="#P1：Acceptor必须接受（Accept）它所收到的第一个Proposal。" class="headerlink" title="P1：Acceptor必须接受（Accept）它所收到的第一个Proposal。"></a>P1：Acceptor必须接受（Accept）它所收到的第一个Proposal。</h3><p>先来先服务，合情合理。但这样产生一个问题，如果多个Proposers同时提出Proposal，很可能会导致无法达成一致，因为没有Propopal被超过一半Acceptors的接受，因此，Acceptor必须能够接受多个Proposal，不同的Proposal由不同的编号进行区分，当某个Proposal被超过一半的Acceptors接受后，这个Proposal就被选定了。<br>既然允许Acceptors接受多个Proposal就有可能出现多个不同值都被最终选定的情况，这违背了Safety要求，为了保证Safety要求，Paxos进一步提出：</p><h3 id="P2：如果值为v的Proposal被选定（Chosen），则任何被选定（Chosen）的具有更高编号的Proposal值也一定为v。"><a href="#P2：如果值为v的Proposal被选定（Chosen），则任何被选定（Chosen）的具有更高编号的Proposal值也一定为v。" class="headerlink" title="P2：如果值为v的Proposal被选定（Chosen），则任何被选定（Chosen）的具有更高编号的Proposal值也一定为v。"></a>P2：如果值为v的Proposal被选定（Chosen），则任何被选定（Chosen）的具有更高编号的Proposal值也一定为v。</h3><p>只要算法同时满足P1和P2，就保证了Safety。P2是一个比较宽泛的约定，完全没有算法细节，我们对其进一步延伸：</p><h3 id="P2a：如果值为v的Proposal被选定（Chosen），则对所有的Acceptors，它们接受（Accept）的任何具有更高编号的Proposal值也一定为v。"><a href="#P2a：如果值为v的Proposal被选定（Chosen），则对所有的Acceptors，它们接受（Accept）的任何具有更高编号的Proposal值也一定为v。" class="headerlink" title="P2a：如果值为v的Proposal被选定（Chosen），则对所有的Acceptors，它们接受（Accept）的任何具有更高编号的Proposal值也一定为v。"></a>P2a：如果值为v的Proposal被选定（Chosen），则对所有的Acceptors，它们接受（Accept）的任何具有更高编号的Proposal值也一定为v。</h3><p>如果满足P2a则一定满足P2，显然，因为只有首先被接受才有可能被最终选定。但是P2a依然难以实现，因为acceptor很有可能并不知道之前被选定的Proposal（恰好不在接受它的多数派中），因此进一步延伸：</p><h3 id="P2b：如果值为v的Proposal被选定（Chosen），则对所有的Proposer，它们提出的的任何具有更高编号的Proposal值也一定为v。"><a href="#P2b：如果值为v的Proposal被选定（Chosen），则对所有的Proposer，它们提出的的任何具有更高编号的Proposal值也一定为v。" class="headerlink" title="P2b：如果值为v的Proposal被选定（Chosen），则对所有的Proposer，它们提出的的任何具有更高编号的Proposal值也一定为v。"></a>P2b：如果值为v的Proposal被选定（Chosen），则对所有的Proposer，它们提出的的任何具有更高编号的Proposal值也一定为v。</h3><p>更进一步的： </p><h3 id="P2c：为了提出值为v且编号为n的Proposal，必须存在一个包含超过一半Acceptors的集合S，满足-1-没有任何S中的Acceptors曾经接受（Accept）过编号比n小的Proposal，或者-2-v和S中的Acceptors所接受过-Accept-的编号最大且小于n的Proposal值一致。"><a href="#P2c：为了提出值为v且编号为n的Proposal，必须存在一个包含超过一半Acceptors的集合S，满足-1-没有任何S中的Acceptors曾经接受（Accept）过编号比n小的Proposal，或者-2-v和S中的Acceptors所接受过-Accept-的编号最大且小于n的Proposal值一致。" class="headerlink" title="P2c：为了提出值为v且编号为n的Proposal，必须存在一个包含超过一半Acceptors的集合S，满足(1) 没有任何S中的Acceptors曾经接受（Accept）过编号比n小的Proposal，或者(2) v和S中的Acceptors所接受过(Accept)的编号最大且小于n的Proposal值一致。"></a>P2c：为了提出值为v且编号为n的Proposal，必须存在一个包含超过一半Acceptors的集合S，满足(1) 没有任何S中的Acceptors曾经接受（Accept）过编号比n小的Proposal，或者(2) v和S中的Acceptors所接受过(Accept)的编号最大且小于n的Proposal值一致。</h3><p>满足P2c即满足P2b即满足P2a即满足P2。至此Paxos提出了Proposer的执行流程，以满足P2c：</p><ol><li>Proposer选择一个新的编号n，向超过一半的Acceptors发送请求消息，Acceptor回复: (a)承诺不会接受编号比n小的proposal，以及(b)它所接受过的编号比n小的最大Proposal（如果有）。该请求称为Prepare请求。</li><li>如果Proposer收到超过一半Acceptors的回复，它就可以提出Proposal，Proposal的值为收到回复中编号最大的Proposal的值，如果没有这样的值，则可以自由提出任何值。</li><li>向收到回复的Acceptors发送Accept请求，请求对方接受提出的Proposal。</li></ol><p>仔细品味Proposer的执行流程，其完全吻合P2c中的要求，但你可能也发现了，当多个Proposer同时运行时，有可能出现没有任何Proposal可以成功被接受的情况（编号递增的交替完成第一步），这就是Paxos算法的Liveness问题，或者叫“活锁”，论文中建议通过对Proposers引入选主算法选出Distinguished Proposer来全权负责提出Proposal来解决这个问题，但是即使在出现多个Proposers同时提出Proposal的情况时，Paxos算法也可以保证Safety。</p><p>接下来看看Acceptors的执行过程，和我们对P2做的事情一样，我们对P1进行延伸：</p><h3 id="P1a：Acceptor可以接受（Accept）编号为n的Proposal当且仅当它没有回复过一个具有更大编号的Prepare消息。"><a href="#P1a：Acceptor可以接受（Accept）编号为n的Proposal当且仅当它没有回复过一个具有更大编号的Prepare消息。" class="headerlink" title="P1a：Acceptor可以接受（Accept）编号为n的Proposal当且仅当它没有回复过一个具有更大编号的Prepare消息。"></a>P1a：Acceptor可以接受（Accept）编号为n的Proposal当且仅当它没有回复过一个具有更大编号的Prepare消息。</h3><p>易见，P1a包含了P1，对于Acceptors：</p><ol><li>当收到Prepare请求时，如果其编号n大于之前所收到的Prepare消息，则回复。</li><li>当收到Accept请求时，仅当它没有回复过一个具有更大编号的Prepare消息，接受该Proposal并回复。<br>以上涵盖了满足P1a和P2b的一套完整一致性算法。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;暂无描述&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>小提琴</title>
    <link href="https://ayou129.github.io/blog/p/1ckaiojcz/"/>
    <id>https://ayou129.github.io/blog/p/1ckaiojcz/</id>
    <published>2021-05-06T13:38:41.000Z</published>
    <updated>2021-05-06T13:38:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><p>琴身<br>琴头<br>琴弓<br>面板<br>侧板<br>噻托  </p><p>调旋</p><h2 id="持琴"><a href="#持琴" class="headerlink" title="持琴"></a>持琴</h2><p>下巴靠紧，其他放松，左手不要托盘</p><p>右手臂：<br>大拇指中指相对应，弯曲不要僵硬<br>手臂略低，不能太高也不能太低<br>琴弓和琴要直<br>整体正方形</p>]]></content>
    
    
    <summary type="html">1</summary>
    
    
    
    <category term="Diary" scheme="https://ayou129.github.io/blog/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>CharlesProxy抓包指南</title>
    <link href="https://ayou129.github.io/blog/p/3aa747c4/"/>
    <id>https://ayou129.github.io/blog/p/3aa747c4/</id>
    <published>2021-03-28T14:26:19.000Z</published>
    <updated>2022-07-23T09:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>蒸无语辣，大厂的app抓不到包，解决方案跳转到 <a href="/blog/p/5001f0a0/" title="安卓反编译">安卓反编译</a></p><span id="more"></span><h2 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h2><ol><li>Charles是一个运行在自己计算机中的Web代理（http代理&#x2F;http监视器）</li><li>将web浏览器(或者其他任何的Internet应用程序,手机或物联网设备)配置通过Charles访问Internet</li><li>然后就可以通过Charles看到所有发送和接收的数据</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>官网 <a href="https://charlesproxy.com/" target="_blank" rel="noopener">https://charlesproxy.com</a></p></blockquote><p>…省略步骤</p><h2 id="常见的抓包需求"><a href="#常见的抓包需求" class="headerlink" title="常见的抓包需求"></a>常见的抓包需求</h2><ol><li>数据缺陷分析（分析数据结构，一般分析手机或物联网设备）</li><li>模拟不同网络速度场景（龟龟）</li><li>模拟各种疑难杂症网络场景（各种http错误状态码）</li><li>更改请求数据 或 response数据（BreakPoint）</li><li>将目的源地址替换成其他，或本地（Map）</li><li>压测</li></ol><h2 id="HTTPS代理-安装SSL"><a href="#HTTPS代理-安装SSL" class="headerlink" title="HTTPS代理 安装SSL"></a>HTTPS代理 安装SSL</h2><blockquote><p><a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/" target="_blank" rel="noopener">https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/</a></p></blockquote><p>如果不安装ssl则无法以纯文本的方式查看内容，通俗点讲就是看不到实际内容，而只能看到加密后的乱码<br>步骤详情：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 手机端安装SSL  https:<span class="comment">//www.charlesproxy.com/documentation/using-charles/ssl-certificates/</span></span><br><span class="line">## 这里是 `iphone` 手机的安装步骤，不同机型进入网站按照提示安装</span><br><span class="line"><span class="number">1.</span> iphone打开Safari(重点)浏览器访问 https:<span class="comment">//chls.pro/ssl 并下载SSL证书</span></span><br><span class="line"><span class="number">2.</span> 进入iphone设置-&gt;已下载描述文件-&gt;安装-&gt;输入密码</span><br><span class="line"><span class="number">3.</span> 进入iphone设置-&gt;通用-&gt;关于本机-&gt;证书信任设置-&gt;信任Charles Proxy CA...</span><br><span class="line"></span><br><span class="line">## 这里是 `android` 手机的安装步骤，不同机型进入网站按照提示安装</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CharlesProxy客户端安装SSL证书</span><br><span class="line"><span class="number">1.</span> Help-&gt;SSL Proxying-&gt;Install Charles Root Certificate，安装到系统</span><br><span class="line"><span class="number">2.</span> 默认会弹出钥匙串访问的窗口，要点击CharlesProxy的证书，并且添加信任，没有的话自行打开 Mac-&gt;启动台-&gt;钥匙串访问</span><br><span class="line"><span class="number">3.</span> Proxy-&gt;SSL Proxy Settings-&gt;Enable SSL Proxying 并且添加域名</span><br><span class="line">note:域名处觉得麻烦可以直接填写*</span><br><span class="line"></span><br><span class="line"># Charles默认禁止所有IP连接，连接时，会要求授权，若不想授权，可 Proxy -&gt; Access Control Settgings -&gt; Add <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> 以允许所有IP连接</span><br></pre></td></tr></table></figure><img src="/blog/p/3aa747c4/%E9%92%A5%E5%8C%99%E4%B8%B2%E8%AE%BF%E9%97%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6%E5%B9%B6%E4%BF%A1%E4%BB%BB.png" class="" title="钥匙串访问中添加证书并信任.png"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A41.png" class="" title="CharlesProxySSl证书安装步骤1"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A42.png" class="" title="CharlesProxySSl证书安装步骤2"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A43.png" class="" title="CharlesProxySSl证书安装步骤3"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A44.png" class="" title="CharlesProxySSl证书安装步骤4"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A45.png" class="" title="CharlesProxySSl证书安装步骤5"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A46.png" class="" title="CharlesProxySSl证书安装步骤6"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A47.png" class="" title="CharlesProxySSl证书安装步骤7"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="网速模拟"><a href="#网速模拟" class="headerlink" title="网速模拟"></a>网速模拟</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Proxy</span>-&gt;Throtte Setting</span><br><span class="line">Bandwidth 带宽</span><br><span class="line">Utilistation 利用百分比</span><br><span class="line">Round-trip 往返延迟</span><br><span class="line">MTU 字节</span><br></pre></td></tr></table></figure><h3 id="Map-remote"><a href="#Map-remote" class="headerlink" title="Map remote"></a>Map remote</h3><p>将指定的网络请求重定向到指定网址<br>一般用于正式环境&#x2F;测试环境的切换<br>使用步骤：抓包之后，选中需要替换的请求，Map remote，修改更改后的指定网址，重新请求即可</p><h3 id="Map-local"><a href="#Map-local" class="headerlink" title="Map local"></a>Map local</h3><blockquote><p>常用操作，一般用在调试服务端代码</p></blockquote><p>将指定的网络请求的结果重定向到本地文件，<br>每个API都可以 <code>Save response</code><br>保存之后 选中一个网络请求 开启Map local选择本地文件路径保存。重新请求即可</p><h3 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h3><p>在 请求 与 返回结果中间通过断点停顿编辑所有相关信息<br>操作步骤：抓包之后，选中需要打断点的请求，重新请求即可</p>]]></content>
    
    
    <summary type="html">针对开发人员测试抓包的使用指南</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>产品设计总结</title>
    <link href="https://ayou129.github.io/blog/p/2252453f/"/>
    <id>https://ayou129.github.io/blog/p/2252453f/</id>
    <published>2021-03-28T11:33:01.000Z</published>
    <updated>2021-04-20T11:33:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="用户账户-账号-体系"><a href="#用户账户-账号-体系" class="headerlink" title="用户账户(账号)体系"></a>用户账户(账号)体系</h2><h3 id="账号体系的类别"><a href="#账号体系的类别" class="headerlink" title="账号体系的类别"></a>账号体系的类别</h3><p>自定义账号<br>    账号+密码<br>邮箱账号<br>    邮箱+密码<br>手机账号<br>    手机+密码(验证码)<br>第三方平台<br>    用户在第三方平台上将部分的信息授权至我方账号体系当中<br>    微信、QQ、微博<br>        包含的信息：昵称&#x2F;头像&#x2F;地址&#x2F;省市区</p><h3 id="设计账号体系"><a href="#设计账号体系" class="headerlink" title="设计账号体系"></a>设计账号体系</h3><p>相关字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># user</span><br><span class="line">id create_at</span><br><span class="line"></span><br><span class="line"># auth</span><br><span class="line">phone email username</span><br><span class="line"></span><br><span class="line"># user_base_info</span><br><span class="line">nickname //第一次创建账号时，使用自定义或者第三方授权过来的昵称</span><br><span class="line"></span><br><span class="line"># 第三方平台</span><br><span class="line">type 微信 微博 QQ</span><br><span class="line">unionid</span><br><span class="line">openid </span><br></pre></td></tr></table></figure><h3 id="账号体系的核心流程"><a href="#账号体系的核心流程" class="headerlink" title="账号体系的核心流程"></a>账号体系的核心流程</h3><h4 id="注册-和-登陆流程"><a href="#注册-和-登陆流程" class="headerlink" title="注册 和 登陆流程"></a>注册 和 登陆流程</h4><p>一切都是以手机号为准，无论哪个平台注册都需要手机号验证。<br>第三方注册登陆流程<br>    通过第三方授权成功，返回信息至我方登陆API，如果没有账户存在，则要求绑定手机号</p><h4 id="找回密码流程"><a href="#找回密码流程" class="headerlink" title="找回密码流程"></a>找回密码流程</h4><p>首先通过手机号查找，但是由于手机号会发生更换，并且当手机卡停机一段时间后手机运营商会重新投递到市场中，导致其他人能够使用到这个手机号，最后篡改信息<br>所以核心需要用户绑定更为深层次的信息，</p><h4 id="风控流程"><a href="#风控流程" class="headerlink" title="风控流程"></a>风控流程</h4><h2 id="提升用户体验的设计"><a href="#提升用户体验的设计" class="headerlink" title="提升用户体验的设计"></a>提升用户体验的设计</h2><h3 id="手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验"><a href="#手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验" class="headerlink" title="手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验"></a>手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验</h3><h3 id="精准的错误提示"><a href="#精准的错误提示" class="headerlink" title="精准的错误提示"></a>精准的错误提示</h3><p>例如：</p><ol><li>参数错误</li><li>用户名已存在</li></ol><p>选择更精准的错误提示，提高用户体验</p><h3 id="输入数字的时候，自动打开数字键盘"><a href="#输入数字的时候，自动打开数字键盘" class="headerlink" title="输入数字的时候，自动打开数字键盘"></a>输入数字的时候，自动打开数字键盘</h3><h3 id="有前置条件的按钮可置灰，输入信息后恢复可点击状态"><a href="#有前置条件的按钮可置灰，输入信息后恢复可点击状态" class="headerlink" title="有前置条件的按钮可置灰，输入信息后恢复可点击状态"></a>有前置条件的按钮可置灰，输入信息后恢复可点击状态</h3><p>例如用户正在输入账号密码进行登陆，当输入结果符合要求的时候，按钮恢复可点击的状态<br>可以减少不必要的点击</p><h3 id="密码提供显示-x2F-隐藏按钮"><a href="#密码提供显示-x2F-隐藏按钮" class="headerlink" title="密码提供显示&#x2F;隐藏按钮"></a>密码提供显示&#x2F;隐藏按钮</h3>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mac使用指南</title>
    <link href="https://ayou129.github.io/blog/p/614a2564/"/>
    <id>https://ayou129.github.io/blog/p/614a2564/</id>
    <published>2021-03-24T13:56:53.000Z</published>
    <updated>2022-09-29T01:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>介绍使用Mac以来相关的使用技巧和黑科技🫢。</p><span id="more"></span><h2 id="安装brew"><a href="#安装brew" class="headerlink" title="安装brew"></a>安装brew</h2><blockquote><p><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p></blockquote><p>brew 相关指令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索一个包</span></span><br><span class="line"><span class="keyword">brew </span>search * </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个包</span></span><br><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>* </span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载一个包</span></span><br><span class="line"><span class="keyword">brew </span>uninstall * </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看包的相关信息（可以从中查看安装路径等）</span></span><br><span class="line"><span class="keyword">brew </span>info *</span><br></pre></td></tr></table></figure><h2 id="Centos-安装"><a href="#Centos-安装" class="headerlink" title="Centos 安装"></a>Centos 安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> brew 无法在root用户上安装</span><br><span class="line">sudo adduser liguoxin</span><br><span class="line">sudo passwd liguoxin   <span class="regexp">//</span> jH9gxicnew</span><br><span class="line">sudo usermod -aG wheel liguoxin <span class="regexp">//</span> Centos中给权限</span><br><span class="line">su - liguoxin  <span class="regexp">//</span> 进入到该用户</span><br></pre></td></tr></table></figure><blockquote><p>使用清华大学开元软件镜像站安装 brew   <a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a></p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从本镜像下载安装脚本并安装 Homebrew / Linuxbrew</span></span><br><span class="line">git clone --depth=<span class="number">1</span> https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/git/</span>homebrew/install.git brew-install</span><br><span class="line"><span class="regexp">/bin/</span>bash brew-install/install.sh</span><br><span class="line">rm -rf brew-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可从 GitHub 获取官方安装脚本安装 Homebrew / Linuxbrew</span></span><br><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://github.com/Homebrew/install/raw/master/install.sh)&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将brew添加到环境变量中</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">HOMEBREW_API_DOMAIN</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">HOMEBREW_BOTTLE_DOMAIN</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">HOMEBREW_BREW_GIT_REMOTE</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">HOMEBREW_CORE_GIT_REMOTE</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">HOMEBREW_PIP_INDEX_URL</span>=<span class="string">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><blockquote><p>添加brew到环境变量</p></blockquote><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 以下针对基于 Apple Silicon CPU 设备上的 macOS 系统（命令行运行 uname -m 应输出 arm64）上的 Homebrew：</span><br><span class="line"><span class="keyword">test </span>-r ~/.bash_profile &amp;&amp; echo &#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27; &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="keyword">test </span>-r ~/.zprofile &amp;&amp; echo &#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27; &gt;&gt; ~/.zprofile</span><br><span class="line"></span><br><span class="line"># linux</span><br><span class="line"><span class="keyword">test </span>-d ~/.linuxbrew &amp;&amp; eval &quot;$(~/.linuxbrew/bin/brew shellenv)&quot;</span><br><span class="line"><span class="keyword">test </span>-d /home/linuxbrew/.linuxbrew &amp;&amp; eval &quot;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&quot;</span><br><span class="line"><span class="keyword">test </span>-r ~/.bash_profile &amp;&amp; echo &quot;eval \&quot;\$($(brew --prefix)/bin/brew shellenv)\&quot;&quot; &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="keyword">test </span>-r ~/.profile &amp;&amp; echo &quot;eval \&quot;\$($(brew --prefix)/bin/brew shellenv)\&quot;&quot; &gt;&gt; ~/.profile</span><br><span class="line"><span class="keyword">test </span>-r ~/.zprofile &amp;&amp; echo &quot;eval \&quot;\$($(brew --prefix)/bin/brew shellenv)\&quot;&quot; &gt;&gt; ~/.zprofile</span><br></pre></td></tr></table></figure><blockquote><p>将后续每个软件添加到环境变量</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/linuxbrew/.linuxbrew/opt/python@3.8/libexec/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h2 id="Linux-安装-NVIDIA-驱动"><a href="#Linux-安装-NVIDIA-驱动" class="headerlink" title="Linux 安装 NVIDIA 驱动"></a>Linux 安装 NVIDIA 驱动</h2><h3 id="Centos8"><a href="#Centos8" class="headerlink" title="Centos8"></a>Centos8</h3><p><img src="/blog/p/614a2564/Centos8%E9%85%8D%E7%BD%AE.png" alt="Centos8配置.png"></p><ol><li>先安装NVIDIA驱动<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重装系统时，不要后台安装，手动安装</span></span><br><span class="line"><span class="regexp">//</span> 先查看nvidia-smi</span><br><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure>Data Center Driver For Linux X64</li></ol><p>版本:515.105.01<br>发布日期:2023.3.30<br>操作系统:Linux 64-bit<br>CUDA Toolkit:11.7<br>语言:Chinese (Simplified)<br>文件大小:346.89 MB</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>cn.download.nvidia.com<span class="regexp">/tesla/</span><span class="number">535.129</span>.<span class="number">03</span>/NVIDIA-Linux-x86_64-<span class="number">515.105</span>.<span class="number">01</span>.run</span><br><span class="line"></span><br><span class="line">sudo chmod +x NVIDIA-Linux-x86_64-<span class="number">515.105</span>.<span class="number">01</span>.run</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 切换到多用户目标模式，这会关闭图形界面</span><br><span class="line">sudo systemctl isolate multi-user.target </span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 安装新的驱动程序</span><br><span class="line">sudo bash NVIDIA-Linux-x86_64-<span class="number">515.105</span>.<span class="number">01</span>.run</span><br><span class="line"></span><br><span class="line">sudo yum install vulkan</span><br></pre></td></tr></table></figure><blockquote><p>卸载 NVIDIA</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="regexp">/usr/</span>bin/nvidia-uninstall</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line">sudo bash NVIDIA-Linux-x86_64-<span class="number">515.105</span>.<span class="number">01</span>.run --uninstall</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 重新生成内核模块</span><br><span class="line">sudo dracut --force</span><br><span class="line"></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><ol start="2"><li>安装CUDA</li></ol><blockquote><p><a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=CentOS&amp;target_version=7&amp;target_type=rpm_network" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=CentOS&amp;target_version=7&amp;target_type=rpm_network</a></p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里选择 runufile 本地安装</span></span><br><span class="line"><span class="attribute">sudo</span> yum install pkg-config xorg-x11-server-devel</span><br><span class="line"></span><br><span class="line"><span class="attribute">wget</span> https://developer.download.nvidia.com/compute/cuda/<span class="number">12</span>.<span class="number">3</span>.<span class="number">0</span>/local_installers/cuda_12.<span class="number">3</span>.<span class="number">0</span>_545.<span class="number">23</span>.<span class="number">06</span>_linux.run</span><br><span class="line"><span class="attribute">sudo</span> sh cuda_12.<span class="number">3</span>.<span class="number">0</span>_545.<span class="number">23</span>.<span class="number">06</span>_linux.run</span><br><span class="line"><span class="attribute">jH9gxicnew111</span></span><br></pre></td></tr></table></figure><h2 id="pip太慢"><a href="#pip太慢" class="headerlink" title="pip太慢"></a>pip太慢</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 更改pip源</span><br><span class="line">pip install -i https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple 安装的文件</span><br><span class="line">pip install -i https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple modelscope</span><br><span class="line">pip install -i https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2023-11-08 19:59:25 本次未成功测试，环境没配好，要固定nvidia cuda cudnn版本，否则会报错<br>相关链接：<br><a href="https://pytorch.org/get-started/locally/#supported-linux-distributions" target="_blank" rel="noopener">https://pytorch.org/get-started/locally/#supported-linux-distributions</a><br><a href="https://pytorch.org/get-started/previous-versions/" target="_blank" rel="noopener">https://pytorch.org/get-started/previous-versions/</a><br>NVIDIA-Linux-x86_64-460.106.00.run<br>cuda_11.2.2_460.32.03_linux.run</p><h2 id="安装web相关环境"><a href="#安装web相关环境" class="headerlink" title="安装web相关环境"></a>安装web相关环境</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx</span></span><br><span class="line">brew install nginx</span><br><span class="line">brew info nginx <span class="regexp">//</span>查看相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>nginx/<span class="number">1.19</span>.<span class="number">8</span></span><br><span class="line">cp homebrew.mxcl.nginx.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mysql</span></span><br><span class="line">brew install mysql</span><br><span class="line">brew info mysql <span class="regexp">//</span>查看mysql相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/my</span>sql/<span class="number">8.0</span>.<span class="number">23</span>_1</span><br><span class="line">cp homebrew.mxcl.mysql.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">brew install php@<span class="number">7.4</span></span><br><span class="line">brew info php@<span class="number">7.4</span> <span class="regexp">//</span>查看mysql相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>php@<span class="number">7.4</span>/<span class="number">7.4</span>.<span class="number">16</span></span><br><span class="line">cp homebrew.mxcl.php@<span class="number">7.4</span>.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.php@<span class="number">7.4</span>.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.php@<span class="number">7.4</span>.plist</span><br><span class="line"></span><br><span class="line">pecl install swoole <span class="comment"># 这里需要注意 swoole扩展开启部分功能需要这么写</span></span><br><span class="line">&gt; ln -s <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>pcre2<span class="regexp">/10.36/i</span>nclude<span class="regexp">/pcre2.h /</span>opt<span class="regexp">/homebrew/</span>Cellar<span class="regexp">/php@7.4/</span><span class="number">7.4</span>.<span class="number">18</span><span class="regexp">/include/</span>php<span class="regexp">/ext/</span>pcre/pcre2.h</span><br><span class="line">&gt; pecl install swoole</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes --with-openssl-dir=<span class="regexp">/opt/</span>homebrew<span class="regexp">/opt/</span>openssl@<span class="number">1.1</span>/</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes</span><br><span class="line"></span><br><span class="line">pecl install xdebug</span><br><span class="line">pecl install redis</span><br></pre></td></tr></table></figure><h2 id="安装-部分扩展-shivammathur-x2F-php"><a href="#安装-部分扩展-shivammathur-x2F-php" class="headerlink" title="安装 部分扩展 shivammathur&#x2F;php"></a>安装 部分扩展 shivammathur&#x2F;php</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 教程 <span class="selector-tag">https</span>:<span class="comment">//github.com/shivammathur/homebrew-extensions</span></span><br><span class="line"></span><br><span class="line">## 如果报错：<span class="selector-tag">you</span> <span class="selector-tag">must</span> <span class="selector-tag">configure</span> <span class="selector-tag">with</span> `<span class="selector-tag">--enable-openssl</span>` <span class="selector-tag">to</span> <span class="selector-tag">support</span> <span class="selector-tag">ssl</span> <span class="selector-tag">connection</span> <span class="keyword">when</span> compiling Swoole</span><br><span class="line">### 更新一下swoole就行</span><br><span class="line">brew remove swoole<span class="variable">@7</span>.<span class="number">4</span></span><br><span class="line">brew install shivammathur/extensions/swoole<span class="variable">@7</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><p>yes --with-openssl-dir&#x3D;&#x2F;opt&#x2F;homebrew&#x2F;opt&#x2F;openssl@3<br>yes –with-pcre2-dir&#x3D;&#x2F;opt&#x2F;homebrew&#x2F;opt&#x2F;pcre2&#x2F;</p><p>ln -s &#x2F;opt&#x2F;homebrew&#x2F;opt&#x2F;pcre2&#x2F;include&#x2F;pcre2.h &#x2F;opt&#x2F;homebrew&#x2F;opt&#x2F;<a href="mailto:&#x70;&#104;&#112;&#x40;&#x38;&#x2e;&#x31;">&#x70;&#104;&#112;&#x40;&#x38;&#x2e;&#x31;</a>&#x2F;include&#x2F;php&#x2F;ext&#x2F;pcre&#x2F;pcre2.h<br>yes</p><h2 id="使用alias添加一个快捷键"><a href="#使用alias添加一个快捷键" class="headerlink" title="使用alias添加一个快捷键"></a>使用alias添加一个快捷键</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 经常会使用到的比如cd一个经常进入的path</span></span><br><span class="line"><span class="built_in">alias</span> cdphpbin=<span class="string">&quot;cd /opt/homebrew/etc/php/7.4/&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cdnginxbin=<span class="string">&quot;cd /opt/homebrew/etc/nginx/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上述的快捷键在重启电脑后会失效，所以要编辑 ~/.zshr</span></span><br><span class="line">vim ~/.zshr</span><br><span class="line">添加相应的指令</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="给shell安装一个主题"><a href="#给shell安装一个主题" class="headerlink" title="给shell安装一个主题"></a>给shell安装一个主题</h2><blockquote><p>ohmyz <a href="https://ohmyz.sh/#install" target="_blank" rel="noopener">https://ohmyz.sh/#install</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">安装后根据提示设置 ~/.zshrc</span></span><br></pre></td></tr></table></figure><img src="/blog/p/614a2564/ohmyz.png" class="" title="ohmyz主题"><h2 id="给shell安装自动补全"><a href="#给shell安装自动补全" class="headerlink" title="给shell安装自动补全"></a>给shell安装自动补全</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh zsh-completions</span><br></pre></td></tr></table></figure><img src="/blog/p/614a2564/shell%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8.png" class="" title="shell自动补全"><h2 id="安装cask"><a href="#安装cask" class="headerlink" title="安装cask"></a>安装cask</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh cask</span><br></pre></td></tr></table></figure><h2 id="安装v2ray"><a href="#安装v2ray" class="headerlink" title="安装v2ray"></a>安装v2ray</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>v2ray</span><br><span class="line"><span class="comment"># 设置config.json即可</span></span><br></pre></td></tr></table></figure><h2 id="安装启动命令"><a href="#安装启动命令" class="headerlink" title="安装启动命令"></a>安装启动命令</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh cask</span><br></pre></td></tr></table></figure><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>已损坏，无法打开，您应该将它移到废纸篓<br><code>sudo xattr -d com.apple.quarantine /Applications/xxx.app</code></p>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="Mac" scheme="https://ayou129.github.io/blog/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>生意经</title>
    <link href="https://ayou129.github.io/blog/p/4f959226/"/>
    <id>https://ayou129.github.io/blog/p/4f959226/</id>
    <published>2021-03-24T00:56:38.000Z</published>
    <updated>2021-03-24T00:59:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="如何发家"><a href="#如何发家" class="headerlink" title="如何发家"></a>如何发家</h2><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ol><li>创造资源</li><li>对接资源(衍生出平台的概念)</li></ol><p>单纯卖货不行了，必须要“卖货+服务”</p><h3 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 手下人多了，坏消息也就会逐渐增加</span></span><br><span class="line"><span class="bullet">1.</span> 要会分辨，有一些坏消息是底下人误导你</span><br><span class="line"><span class="bullet">2.</span> 要会拍板，比如有个地方坏账了，现在止损是10W，如果不及时处理，可能打官司后影响更差、损失更多</span><br><span class="line"><span class="bullet">3.</span> 要会预判，</span><br><span class="line"><span class="bullet">4.</span> 要会统筹，人财多，各环节都要争夺资源，如何安排以实现盈利目标</span><br><span class="line"><span class="bullet">5.</span> 分配，赚到钱拿多少分配给底下？</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    <category term="Diary" scheme="https://ayou129.github.io/blog/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>K8s学习并实践云原生技术</title>
    <link href="https://ayou129.github.io/blog/p/41057579/"/>
    <id>https://ayou129.github.io/blog/p/41057579/</id>
    <published>2021-03-14T16:37:26.000Z</published>
    <updated>2022-10-23T09:03:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>是时机开始学习分布式相关的技能了，这篇是关于K8s相关的内容，慢慢补充…</p><span id="more"></span><h1 id="学习并实践云原生技术"><a href="#学习并实践云原生技术" class="headerlink" title="学习并实践云原生技术"></a>学习并实践云原生技术</h1><p>基础知识：CNCF X Alibaba云与安生技术公开课 -&gt; 第三讲：Kubernetes 核心概念</p><p>K8s可以管理成百上千个容器组成的应用程序，在物理虚拟机、云环境、混合部署环境等不同环境中管理</p><h2 id="K8S解决了哪些问题？"><a href="#K8S解决了哪些问题？" class="headerlink" title="K8S解决了哪些问题？"></a>K8S解决了哪些问题？</h2><p>微服务的兴起导致增加容器技术的使用，因为容器实际上为微服务等小型独立应用程序提供了完美的宿主</p><p>K8s</p><ul><li>高可用</li><li>可伸缩性</li><li>灾难恢复</li></ul><p>容器编排工具的实际任务是什么？</p><h2 id="1-如何创建k8s集群与应用"><a href="#1-如何创建k8s集群与应用" class="headerlink" title="1. 如何创建k8s集群与应用"></a>1. 如何创建k8s集群与应用</h2><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>方式1：</p><ol><li>minikube 不适用生产环境</li></ol><ul><li>社区版 <code>https://minikube.sigs.k8s.io/</code></li><li>中国版 <code>https://developer.aliyun.com/article/221687</code></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">启动集群：minikube start</span><br><span class="line">插件系统：minikube addons list</span><br><span class="line">Dashboard界面：minikube dashboard</span><br><span class="line">插件集群状态：minikube status</span><br><span class="line"></span><br><span class="line"><span class="comment"># K8S</span></span><br><span class="line">alias <span class="attribute">k</span>=kubectl</span><br><span class="line">kubectl cluster-<span class="built_in">info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启服务</span></span><br><span class="line">k apply -f ./k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除服务</span></span><br><span class="line">k delete -f ./k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有 pod</span></span><br><span class="line">k <span class="built_in">get</span> pods</span><br><span class="line"></span><br><span class="line">minikube ssh</span><br><span class="line">cd build</span><br><span class="line">docker load xxxx</span><br></pre></td></tr></table></figure><ol start="2"><li>阿里云ACK快速创建<br>标准集群</li></ol><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><ol><li><p>应用访问(内外)问题<br>解决方案：设置一个Server</p></li><li><p>应用之间的依赖关系：nginx-&gt;php<br>解决方案：设置参数后，pod不断重启，如果最后还是检测到失败则整体失败</p></li><li><p>应用嗅探其他应用是否存活<br>解决方案：yaml-&gt;server-&gt;containers-&gt;配置 readinessProbe 以及 livenessProbe</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">readinessProbe:</span></span><br><span class="line"><span class="symbol">  tcpSocket:</span></span><br><span class="line"><span class="symbol">    port:</span><span class="number">8888</span></span><br><span class="line"><span class="symbol">  initialDelaySeconds:</span><span class="number">5</span></span><br><span class="line"><span class="symbol">  periodSeconds:</span><span class="number">10</span></span><br><span class="line"><span class="symbol">livenessProbe:</span></span><br><span class="line"><span class="symbol">  tcpSocket:</span></span><br><span class="line"><span class="symbol">    port:</span><span class="number">8888</span></span><br><span class="line"><span class="symbol">  initialDelaySeconds:</span>`<span class="number">5</span></span><br><span class="line"><span class="symbol">  periodSeconds:</span><span class="number">20</span></span><br></pre></td></tr></table></figure></li></ol><p>应用数据存储问题<br>    数据(持久化存储) -<br>    日志</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>一个k8s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/k8s</span><br><span class="line">    /mysql.yaml</span><br><span class="line">        kind:Service <span class="comment">#</span></span><br><span class="line">        kind:PersistentVolumeClaim <span class="comment">#数据持久化</span></span><br><span class="line">        kind:Deployment <span class="comment">#项目配置启动</span></span><br><span class="line">            环境变量</span><br><span class="line">            镜像</span><br><span class="line">            应用嗅探</span><br><span class="line">    /redis.yaml</span><br><span class="line">    /web.yaml</span><br></pre></td></tr></table></figure><h2 id="2-部署到生产环境注意事项"><a href="#2-部署到生产环境注意事项" class="headerlink" title="2. 部署到生产环境注意事项"></a>2. 部署到生产环境注意事项</h2><ol><li>生产环境的mysql、redis等数据库不建议放在k8s中，应提前构建实例，并且通过external类型的svc指向对应实例</li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;cat mysql.yaml</span><br><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span>Service</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  lables:</span></span><br><span class="line"><span class="symbol">    app:</span>mysql</span><br><span class="line"><span class="symbol">  name:</span>mysql</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  type:</span> ExternalName</span><br><span class="line"><span class="symbol">  externalName:</span> 实例的host</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="language-bash"><span class="built_in">cat</span> web.yaml</span></span><br><span class="line">这里修改的是mysql的具体详情</span><br></pre></td></tr></table></figure><ol start="2"><li><p>应用的部署应该与之前保持一致<br><code>k apply -f https://raw.githubusercontent.com/wonderflow/gin-vue-admin/master/k8s/web-server.yaml</code></p></li><li><p>业务高峰期 pod压力大 nod压力就回答 会判定QoS，导致pod会被重启，也就是某个核心业务被重启</p><blockquote><p>我们的目的是提高资源利用率，流量大后会导致该问题</p></blockquote></li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">resources:</span></span><br><span class="line"><span class="symbol">  requests:</span></span><br><span class="line"><span class="symbol">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">    memory:</span> <span class="number">1</span>Gi</span><br><span class="line"><span class="symbol">  limits:</span></span><br><span class="line"><span class="symbol">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">    memory:</span> <span class="number">1</span>Gi</span><br></pre></td></tr></table></figure><p>建议requests &#x3D; limits</p><ol start="4"><li>上下线要变得更优雅一些<br>上线</li></ol><ul><li><p>linveness探针 例如：开始时间 靠后一些 容错率提高</p></li><li><p>readiness探针 例如：<br>检查到pod失效，会自动找到pod对应在service的endpoint列表中拆除，让pod下线，尽量严格一些</p></li></ul><p>下线</p><ul><li><p>服务端负载均衡</p></li><li><p>客户端负载均衡</p></li></ul><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81.jpg" class="" title="应用-优雅上下线核心代码.jpg"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.png" class="" title="应用-优雅上下线.png"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.jpg" class="" title="应用-优雅上下线.jpg"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E9%9D%9E%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.jpg" class="" title="应用-非优雅上下线.jpg"><ol start="5"><li>集群级别的生产<br>微服务体系<br>日志体系<br>监控体系<br>安全体系<br>弹性体系</li></ol><h2 id="3-k8s监控与日志"><a href="#3-k8s监控与日志" class="headerlink" title="3. k8s监控与日志"></a>3. k8s监控与日志</h2><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><h4 id="如何选型"><a href="#如何选型" class="headerlink" title="如何选型"></a>如何选型</h4><ul><li><p>传统架构</p><ul><li>资源监控</li><li>应用监控</li></ul></li><li><p>容器架构</p><ul><li>资源监控</li><li>管控系统监控</li><li>微服务拓扑监控</li><li>中间件系统监控</li><li>应用监控</li></ul></li></ul><h4 id="采集的方式动态化了，应该如何使用"><a href="#采集的方式动态化了，应该如何使用" class="headerlink" title="采集的方式动态化了，应该如何使用"></a>采集的方式动态化了，应该如何使用</h4><ul><li><p>传统架构：</p><ul><li>配置静态采集对象</li><li>正向拓扑关系配置</li></ul></li><li><p>容器架构</p><ul><li>容器发现动态采集</li><li>反向拓扑关系耦合</li></ul></li></ul><h4 id="可观测能力整合了应该如何运维"><a href="#可观测能力整合了应该如何运维" class="headerlink" title="可观测能力整合了应该如何运维"></a>可观测能力整合了应该如何运维</h4><ul><li><p>传统架构</p><ul><li>报警 运维 报警消除</li></ul></li><li><p>容器架构</p><ul><li>报警 自愈 报警消除 复盘</li><li>报警 自愈失败 运维 报警消除</li></ul></li></ul><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li><p>日志监控方式 <code>https://developer.aliyun.com/lesson_2174_21488#_21488</code></p><ul><li>资源监控：CPU、内存、网络 以数值 百分比为单位进行统计</li><li>性能监控：应用内部监控，通常是通过勾子在虚拟机层、字节码执行回调，获取更深层次的监控指标</li><li>安全监控：越权管理、安全漏洞扫描</li><li>事件监控：K8s中的口岸空方式，补充未监控到的内容</li></ul></li><li><p>监控接口标准化</p><ul><li>Resource Metrics K8s内置消费链路，无法自定义监控</li><li>Custom Metrics Prometheus 提供资源监控和自定义监控</li><li>External Metrics 云厂商(Aliyun)提供监控指标</li></ul></li><li><p>日志分类</p><ul><li>主机内核日志：网络栈、驱动、文件系统异常</li><li>Runtime：比如Docker运行日志</li><li>核心组件日志：APIServer用来审计，Scheduler日志可以诊断调度，etcd可以查看存储状态，Ingress日志可以分析接入层流量</li><li>部署应用的日志：分析查看业务层的状态，诊断异常</li></ul></li><li><p>日志采集方式</p><ul><li>挂载宿主机采集：将日志目录挂载出来，采集器自动采集</li><li>标准输入输出采集(推荐)：主动提交采集</li><li>Sidecar采集：将采集器注入到pod，一般用于安全或者隔离级别很高的应用</li></ul></li><li><p>核心：</p><ul><li><p>减少出现的问题</p><ol><li>集群组件尽量精简，减少全局组件</li><li>应用配置合理的request、limit 超卖比，高并发请求下可能会导致业务pod被重启</li><li>在线业务配置Readiness、Liveness，因为会导致k8s操作时，pod不可用</li></ol></li><li><p>建立有梯度的管理体系，事件监控最适合容器</p><ol><li>最上层：APM监控</li><li>中层：日志、事件孔安静</li><li>最下层：资源监控</li></ol></li><li><p>标准化的问题如何解决</p><ol><li>资源、容量的问题配置HPA或者资源弹性</li><li>常见的问题固化为自愈脚本、文档、手册</li></ol></li></ul></li></ul><h2 id="4-k8s弹性伸缩"><a href="#4-k8s弹性伸缩" class="headerlink" title="4. k8s弹性伸缩"></a>4. k8s弹性伸缩</h2><h3 id="调度层伸缩"><a href="#调度层伸缩" class="headerlink" title="调度层伸缩"></a>调度层伸缩</h3><img src="/blog/p/41057579/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E7%9A%84%E6%9C%AC%E8%B4%A8-%E5%AE%B9%E9%87%8F%E4%B8%8E%E6%88%90%E6%9C%AC.jpg" class="" title="弹性伸缩的本质-容量与成本.jpg"><img src="/blog/p/41057579/%E8%B0%83%E5%BA%A6%E4%B8%8E%E8%B5%84%E6%BA%90%E8%A7%A3%E8%80%A6%E7%9A%84%E4%B8%A4%E5%B1%82%E6%9E%B6%E6%9E%84.jpg" class="" title="调度与资源解耦的两层架构.jpg"><p>容器水平伸缩(HPA)是k8s常用的弹性伸缩方式，使用注意事项<br>HPA根据统计数据指标进行扩容</p><img src="/blog/p/41057579/%E5%AE%B9%E5%99%A8%E6%B0%B4%E5%B9%B3%E4%BC%B8%E7%BC%A9HPA.jpg" class="" title="容器水平伸缩HPA.jpg"><ol><li>Request的合理设置，建议Request&lt;&#x3D;limit</li><li>弹性指标的合理选择，指标一般有 CPU、Memory、QPS，要根据业务场景去选择</li><li>业务状态的弹性支持</li></ol><p>容器定时水平伸缩(CronHPA) <code>https://github.com/AliyunContainerService/kubernetes-cronhpa-controller</code><br>后台统计出整天或者某个节假日的请求数量分布图时，可以定时伸缩</p><img src="/blog/p/41057579/%E5%AE%B9%E5%99%A8%E5%AE%9A%E6%97%B6%E6%B0%B4%E5%B9%B3%E4%BC%B8%E7%BC%A9CronHPA.jpg" class="" title="容器定时水平伸缩CronHPA.jpg"><h3 id="资源型伸缩"><a href="#资源型伸缩" class="headerlink" title="资源型伸缩"></a>资源型伸缩</h3><p>无服务器弹性伸缩 Virtual-node</p><img src="/blog/p/41057579/%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%9E%8B%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9.jpg" class="" title="无服务型弹性伸缩.jpg"><ul><li><p>1.0版本虚拟化出一个node也就是服务器，进行快速伸缩，普通的Ecs服务器首次上项目的时候用<br>问题：缩的时候检测不到虚拟的，所以可能会有问题</p></li><li><p>2.0版本<br>无服务器弹性伸缩场景介绍：</p></li></ul><ol><li>在线业务，存在资源利用率的波峰波谷、徒增流量毛刺的场景：网站、API、机器学习推理、大数据流式处理等</li><li>离线计算，Spark、机器学习训练、多媒体转码</li><li>定时任务，运行频度不高但是资源需求在容量规划之外，可以通过弹性伸缩降低容量管理的复杂度：离线定时ETL、数据分析与报表</li><li>特殊场景，对稳定性有极高的要求：异地多活弹性、混合云弹性</li></ol><h2 id="k8s"><a href="#k8s" class="headerlink" title="k8s"></a>k8s</h2><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 pod 环境 (beta/prod/dev)</span></span><br><span class="line">kubectl label nginx1 <span class="attribute">env</span>=dev --overwrite(是否覆盖)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉 label 中的值，增加-即可</span></span><br><span class="line">kubectl label pods tie-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选查询 lables</span></span><br><span class="line">kubectl <span class="built_in">get</span> pods --show-labels -l <span class="attribute">test1</span>=1,test2=2</span><br><span class="line">kubectl <span class="built_in">get</span> pods --show-labels -l env <span class="keyword">in</span> (test1,test2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给 pod 增加非标志性信息</span></span><br><span class="line">kubectl annotate pods pod名称 <span class="attribute">key</span>=<span class="string">&#x27;value&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="服务编排-参数详解"><a href="#服务编排-参数详解" class="headerlink" title="服务编排 参数详解"></a>服务编排 参数详解</h2><p>selector 查询资源<br>pod<br>层级<br>环境</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">资源标签 <span class="built_in">labels</span></span><br><span class="line">pod</span><br><span class="line">    environment: production</span><br><span class="line">    release: stable</span><br><span class="line">    app.k8s.io.version: <span class="number">5.1</span><span class="number">.1</span></span><br><span class="line">node</span><br><span class="line">    www.xxx.<span class="built_in">beta</span>.<span class="built_in">domain</span>/<span class="built_in">region</span>: cn-hangzhou</span><br><span class="line">annotations </span><br><span class="line">    存储资源的非标志性信息</span><br><span class="line">        <span class="built_in">domain</span>/<span class="built_in">domain</span>.cert_id: <span class="string">&quot;asdas,123=&quot;</span></span><br><span class="line">    拓展 资源的 spec/<span class="built_in">status</span></span><br><span class="line">ownerReference</span><br><span class="line">    所有者 pod</span><br></pre></td></tr></table></figure><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="控制循环例子-扩容-ReplicaSet"><a href="#控制循环例子-扩容-ReplicaSet" class="headerlink" title="控制循环例子-扩容(ReplicaSet)"></a>控制循环例子-扩容(ReplicaSet)</h3><p>ReplicaSet -&gt; selector 选择 pod，然后进行操作<br>replicas: 数量<br>扩容逻辑：</p><ol><li>首先处理 更新事件</li><li>对比新旧文件之后，追加处理一个增加 pod 的事件，并且更新旧文件</li></ol><h3 id="使用k8s"><a href="#使用k8s" class="headerlink" title="使用k8s"></a>使用k8s</h3><ol><li>创建集群部署应用</li></ol>]]></content>
    
    
    <summary type="html">K8s学习并实践云原生技术</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="分布式" scheme="https://ayou129.github.io/blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>挖矿</title>
    <link href="https://ayou129.github.io/blog/p/c9a57581/"/>
    <id>https://ayou129.github.io/blog/p/c9a57581/</id>
    <published>2021-03-14T16:37:26.000Z</published>
    <updated>2021-05-15T10:20:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>家里有台无用的高配台式电脑，刚看到新闻比特币已经涨到6w&#x2F;个，好奇驱动，让我把这台windows利用起来，纯粹兴趣</p><span id="more"></span><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>虚拟币<br>    比特币 BTH<br>    以太坊 ETH</p><p>电子钱包</p><p>挖矿软件<br>    HIVE OS<br>    轻松矿工，抽水严重<br>    选用开源的挖矿软件 lolMiner</p><p>挖矿算力来源：GPU(显卡)<br>    首选RTX3060Ti 或3070<br>    次选3080&#x2F;3090，<br>矿池选择大的</p><p>挖矿计算器<br>    <a href="https://www.whattomine.com/" target="_blank" rel="noopener">https://www.whattomine.com</a></p><p>BTC <code>https://btc.com/</code><br>F2pool <code>https://www.f2pool.com/user/worker </code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#URL</span>:https:<span class="comment">//www.bminer.me/zh/</span></span><br><span class="line">wget https:<span class="comment">//www.bminercontent.com/releases/bminer-v16.4.5-53c7f21-amd64.tar.xz</span></span><br><span class="line">tar -zxvf bminer-v16.<span class="number">4.5</span>-<span class="number">53</span>c7f21-amd64<span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line">cd bminer-v16.<span class="number">4.5</span>-<span class="number">53</span>c7f21</span><br><span class="line">vim mine_grin29<span class="selector-class">.sh</span></span><br><span class="line">./bminer -uri ethstratum:<span class="comment">//lee129.001:x@btc.f2pool.com:1314 -api 127.0.0.1:1880 </span></span><br><span class="line">bash mine_grin29.sh</span><br></pre></td></tr></table></figure><h2 id="比特币-点对点电子现金系统"><a href="#比特币-点对点电子现金系统" class="headerlink" title="比特币-点对点电子现金系统"></a>比特币-点对点电子现金系统</h2><p>白皮书 <code>https://wenku.baidu.com/view/c2070d7d657d27284b73f242336c1eb91a3733b0.html?rec_flag=default</code></p><p>传统交易系统：支付者-&gt;金融机构-&gt;接收者|基于信用｜第三方机构随时能够介入并处理|增加交易成本，限制交易规模(小额交易等)<br>新型交易系统：支付者-&gt;接收者|基于密码学｜点对点，属于不可逆支付|会有双重支付的问题</p><p>问题：双重交易<br>解决方案：网络通过随机散列对所有的交易都加上时间戳，作为一个在不断延伸的链条当中的一个块(交易记录)<br>区块中的交易信息如果被证工作量证明，则该区块下的所有交易无法被更改，除非发生系统攻击(完成相同的工作量证明)，下文会介绍相关内容</p><p>基本概念：</p><p>火币是交易所，但是只是平台方，买方卖方均是个人</p><p>区块链底层技术 <a href="https://www.chainnode.com/doc/5068" target="_blank" rel="noopener">https://www.chainnode.com/doc/5068</a><br>    出块时长<br>        采用HPoS共识机制，具有交易成本低、交易延时低、交易并发高等特点； 支持最大的验证人节点数量是 21个。<br>    共识机制<br>    智能合约<br>    密码技术<br>    多链融合<br>        可通过资产跨链桥，将ETH、BTC、稳定币等资产映射到Heco，实现方式为在源链上锁定一定数量的资产后在Heco生成对应数量的Token。 Heco鼓励社区开发者提供更多去中心化的跨链解决方案。</p><p>电子货币：数字签名<br>    当前所有者对<br>        前一次交易<br>        下一位拥有者的公钥<br>        上两个参数加起来 签署一个随机散列的数字签名，添加到电子货币的末尾<br>    发送给下一位拥有者<br>    下一位拥有者<br>        比对签名</p><p>货币交易的方案：<br>    所有交易必须被公开宣布<br>    整个系统中所有的参与者，都有唯一公认的历史交易序列(之前有权威性的交易历史，可供查询)<br>    收款人需要确保在交易期间绝大多数的节点都认为该交易是首次出现的</p><p>时间戳服务器</p><pre><code>              加上时间戳           加上时间戳          加上时间戳</code></pre><p>正常交易的链条：交易1————-&gt;交易2————-&gt;交易3————-&gt;交易n(越往后，工作量证明)<br>恶意攻击，则必须重新从头计算到尾，但是如果正常链条一直在无限传播，并且CPU计算能力相同，恶意攻击的计算出来链条无法超过正常的链条，那就绝对安全<br><code>只要诚实的节点所控制的计算能力的总和，大于有合作关系的(cooperating)攻击者的计算能力的总和，该系统就是安全的。</code></p><p>规定：<br>    每一枚电子货币，都将自己的数字签名放在电子货币的末尾<br>    数字签名：每一位所有者上一次的交易 和 下一位拥有者的公钥 签署一个随机散列的数字签名</p><p>每个人都有公钥</p><p>A的公钥<br>上一个交易<br>B的公钥</p><p>比特币系统由单向列表组成的区块组成<br>    第一个区块叫创世纪块(genesis block)<br>    区块与区块之间由哈希链表关联(哈希指针hash pointers)<br>    每一个区块大小上限1MB，2000-3000笔交易<br>    每一个区块包含区块头和区块体<br>        区块头：<br>            自己区块的hash值<br>            上一个区块的hash值<br>            区块产生的时间戳<br>            难度(防止飞快发展的计算机算力提高减少区块生成的时间，这是个动态配置参数，来保证无论何种情况下比特币系统区块的生成时间始终保持在10分钟一个)<br>            …<br>            默克尔根(所有交易的最终hash值，目的就是为了证明)<br>        区块体：<br>            最下层是交易<br>            上层及以上都是hash值，层层的hash值，最上面是最终hash值</p><p>在比特币区块链网络中有很多节点，包括计算机、手机、矿机、服务器等等。在所有节点中分为：全节点和轻节点。<br>全节点（full node）：保存了区块的所有内容，区块头和区块体。<br>轻节点（light node）：只保存了区块头，比如手机中的比特币钱包。</p><p>由于轻节点中没有存交易具体信息，那有这样一个场景该怎么办呢：<br>zarten1用户转账给zarten2轻节点用户，zarten2如何知道此交易写入区块链了？或者说zarten1如何向zarten2证明交易已经写入区块链了？<br>为了解决上面问题，轻节点向全节点请求这个交易（上图中黄色标记的交易），全节点只需提供这个交易相关的哈希值（上图中红色标记的哈希值）即可。轻节点在本地根据这个交易的merkle proof计算出最后的根哈希值，然后对比本地区块头中的根哈希值是否一样，若一样，则证明此交易写入了区块链中。</p><p>若要证明某个交易不在区块链中，怎么办呢？<br>虽然比特币区块链中没有这个需求，但我们可以思考下如何实现这样需求。<br>第一种方案：全节点将整个区块所有交易信息发给轻节点，这样可以证明某个交易不在区块中，但这是非常不高效的方法且比较笨的方法。<br>第二种方案：思路还是根据merkle proof计算根哈希值，轻节点向全节点对这个交易发出请求，全节点为了证明此交易不在区块链中。</p><p>全节点只需以下这样做即可：<br>对区块中所有交易的哈希值进行排序，然后计算要证明的交易的哈希值，根据二分查找法来确定这个交易哈希值的位置，再将此位置相邻的2个交易merkle proof发送给轻节点。<br>轻节点只需以下这样做即可：<br>轻节点收到merkle proof后，根据merkle proof计算得到最后的根哈希值（root hash），若计算得到的根哈希值跟本地的区块头中的根哈希值比较一样，则证明此交易一定不在区块链中，因为如果在的话，最后计算出来的根哈希值比较必然是不一样的。</p><p>比特币：去中心化(说白了就是没有银行，支付方和接收方，也就是点对点的交易)，多人共同维护的点对点数字现金系统，比特币总量固定2100w个，特点是抗通货膨胀<br>法币：能够看到实物的货币<br>稳定币：具有稳定价值的加密货币，用来当作数字货币世界连接法币世界的媒介，USDT就是其中最出名的 <code>https://baike.baidu.com/item/%E6%B3%B0%E8%BE%BE%E5%B8%81</code><br>公链：就是公有链，而公有链是指全世界任何人都可读取、发送交易且交易能获得有效确认的、也可以参与其中共识过程的区块链。<br>区块链：由多个区块以单链结构组成的链条<br>区块：区块链中的区块<br>正常的交易链条：运行在各大厂商系统中的核心链条，也是最长的链条，基于随机数列的工作量证明<br>攻击者攻击方式：重新计算所有链条中各个区块的工作量，并且超过正常交易链条，需要强大算力<br>pool：cpu计算能力最大的链条<br>nodes：提供计算的节点，一般指所有矿工<br>可以随时离开或加入网络<br>并且将最长的工作量证明链条作为在该节点离线期间发生的交易的证明<br>系统是否安全的评判：诚实的节点所控制的计算机算力的总和 &gt; 攻击者所控制的计算机算力的总和，系统就是安全的<br>注意事项：<br>有关比特币相关的交易，在交易所例如火币平台上提交交易申请成功后，交易所会将该交易发至比特币交易系统，比特币交易不是实时的，每发生一笔比特币交易，在比特币系统当中会将这一笔交易存入分布式系统内存池，连同池内的其他交易等待算力证明，证明完成后交易会被打包进一个区块中，成为区块链当中的一个链节点，同时也更新了该链的长度，成为最新的数据链，最后公开该交易</p><p>职业矿工的入坑逻辑</p><ol><li>大批量购卡</li><li>组建矿机</li><li>假定挖矿过程中，币在交易所中只增不减，然后持续n个月的不停断工作<br> 退出<br> 处理币<br> 处理显卡<br> 超频<br> 设备调频的目的是为了收益最大化，也就是通过调整设备的能效比来优化矿机的收益<br>     以现有的设备整体情况，结合行情得出的设备整体净收益<br>         币池 产出比<br>         币价<br>         电价<br>         设备算力<br> 超频方式：下载官方固件安装，不然风险， 病毒 劫持矿机算力 抽水 设备损坏</li></ol><p>风险<br>    显卡坏</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>介绍比特币——点对点交易系统</li><li>介绍挖矿完整步骤(不深入)</li></ol><div class="tip">虚拟币交易所无论是否受到监管，风险依旧，投机者建议提前查阅相关资料自行判断</div>]]></content>
    
    
    <summary type="html">挖矿</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="区块链" scheme="https://ayou129.github.io/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>解耦之道</title>
    <link href="https://ayou129.github.io/blog/p/ec99c691/"/>
    <id>https://ayou129.github.io/blog/p/ec99c691/</id>
    <published>2021-03-01T05:12:44.000Z</published>
    <updated>2021-03-02T05:12:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="什么是耦合"><a href="#什么是耦合" class="headerlink" title="什么是耦合"></a>什么是耦合</h2><p>指在程序中，模块与模块之间信息与参数依赖的程度</p><h2 id="耦合度的计算方法"><a href="#耦合度的计算方法" class="headerlink" title="耦合度的计算方法"></a>耦合度的计算方法</h2><p>待补充…</p><h2 id="为什么要解耦"><a href="#为什么要解耦" class="headerlink" title="为什么要解耦"></a>为什么要解耦</h2><p>解耦合是为了更好地应对需求变更</p><h2 id="如何解耦"><a href="#如何解耦" class="headerlink" title="如何解耦"></a>如何解耦</h2><h3 id="单一原则"><a href="#单一原则" class="headerlink" title="单一原则"></a>单一原则</h3><ul><li>一个类只负责一项职责</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="依赖倒置原则-面向接口编程"><a href="#依赖倒置原则-面向接口编程" class="headerlink" title="依赖倒置原则(面向接口编程)"></a>依赖倒置原则(面向接口编程)</h3><ul><li>高层模块不应该依赖于低层模块，二者都应该依赖其抽象</li><li>抽象不依赖细节，细节依赖抽象</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$english</span> = <span class="keyword">new</span> English();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$english</span>-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params">CourseInterface <span class="variable">$course</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$course</span>-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 课程抽象接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CourseInterface</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span> <span class="keyword">implements</span> <span class="title">CourseInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$teacher</span> = <span class="keyword">new</span> Teacher();</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$teacher</span>-&gt;teach(<span class="keyword">new</span> English());</span><br></pre></td></tr></table></figure><h3 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h3><ul><li>实现不应该依赖它不需要的接口，一个类对另一个类的依赖应该建立在最小的接口上</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> <span class="keyword">implements</span> <span class="title">Teach</span>,<span class="title">Study</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Teach</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Study</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h3><h3 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h3><h3 id="最少原则（迪米特法则）"><a href="#最少原则（迪米特法则）" class="headerlink" title="最少原则（迪米特法则）"></a>最少原则（迪米特法则）</h3><h3 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h3><ul><li>指对象内部有不同的行为，应用在不同的场景中，并且有不同的实现算法</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$course</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">CourseInterface <span class="variable">$course</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$course</span> = <span class="variable">$course</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;course-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 课程抽象接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CourseInterface</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span> <span class="keyword">implements</span> <span class="title">CourseInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$teacher</span> = <span class="keyword">new</span> Teacher(<span class="keyword">new</span> English());</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$teacher</span>-&gt;teach();</span><br></pre></td></tr></table></figure><h3 id="IOC与DI"><a href="#IOC与DI" class="headerlink" title="IOC与DI"></a>IOC与DI</h3><ul><li>IOC：控制反转，把对象的调用权交给容器，通过容器实现对象的装配和管理</li><li>DI：依赖注入，对象之间的依赖关系有容器在运行期决定，由容器动态的将依赖关系注入到对象中</li><li>DI是对IOC更完善的描述</li></ul><p>IOC容器控制对象，将依赖关系(外部对象)注入进对象<br>反转：获取对象的依赖关系(外部对象)的方式，之前是通过手动引入(耦合度高)，现在是通过容器注入</p>]]></content>
    
    
    <summary type="html">解耦之道</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>算法与数据结构</title>
    <link href="https://ayou129.github.io/blog/p/4b0178e0/"/>
    <id>https://ayou129.github.io/blog/p/4b0178e0/</id>
    <published>2020-10-04T14:55:19.000Z</published>
    <updated>2020-12-22T09:58:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><blockquote><p>O(1) &lt; O(log n) &lt; O(n) &lt; O(n log n) &lt; O(n²) &lt; O(n³) &lt; O(n!) &lt; O(nn)</p></blockquote><p>时间复杂度<br>去掉了许多东西，只剩下了一个最高阶项。<br>当要处理的样本量足够大时，低阶项就不那么重要了。这就是时间复杂度的意义，它是衡量算法流程的复杂程度的一种指标，该指标只与数据量有关，与过程之外的优化无关。</p><p>对数器<br>二分法<br>异或</p>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="算法" scheme="https://ayou129.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>ElementUI工具</title>
    <link href="https://ayou129.github.io/blog/p/801262be/"/>
    <id>https://ayou129.github.io/blog/p/801262be/</id>
    <published>2020-09-10T11:04:59.000Z</published>
    <updated>2020-09-22T11:50:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line">&lt;template lang=<span class="string">&quot;html&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">class</span>=<span class="string">&quot;main-panel&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDialog(&#x27;post&#x27;)&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">title</span>=<span class="string">&quot;编辑&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;xxxxxDiaIsShow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;diaForm&quot;</span> <span class="attr">:append-to-body</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">ref</span>=<span class="string">&quot;xxxxxRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:model</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:rules</span>=<span class="string">&quot;xxxxxRules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label-width</span>=<span class="string">&quot;140px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;车牌号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plate_number&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;15&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.plate_number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">placeholder</span>=<span class="string">&quot;请输入车牌号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">click</span>=<span class="string">&quot;editXXXXX()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span>确认<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDiaIsShow = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-table</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:data</span>=<span class="string">&quot;xxxxxTableData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">border</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prop</span>=<span class="string">&quot;create_time&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prop</span>=<span class="string">&quot;update_time&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;更新时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">fixed</span>=<span class="string">&quot;right&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;100&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">align</span>=<span class="string">&quot;center&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDialog(&#x27;put&#x27;,scope.row)&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteXXXXX(scope.row)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:20px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-pagination</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:current-page</span>=<span class="string">&quot;xxxxxTableDataPaginateCurrentPage&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:page-sizes</span>=<span class="string">&quot;xxxxxTableDataPaginateTotalPageSizes&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:page-size</span>=<span class="string">&quot;xxxxxTableDataPaginateTotalPageSize&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">layout</span>=<span class="string">&quot;total, sizes, prev, pager, next, jumper&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:total</span>=<span class="string">&quot;xxxxxTableDataPaginateTotal&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">size-change</span>=<span class="string">&quot;xxxxxTableDataHandleSizeChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">current-change</span>=<span class="string">&quot;xxxxxTableDataHandleCurrentChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- &lt;span&gt;当前&#123;&#123; xxxxxTableDataPaginateCurrentPage &#125;&#125;页，&lt;/span&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">                        &lt;span&gt;共&#123;&#123; xxxxxTableDataPaginateLastPage &#125;&#125;页&lt;/span&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxSearchForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableData</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateCurrentPage</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotal</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateLastPage</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotalPageSize</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotalPageSizes</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTab</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxEditType</span>: <span class="string">&#x27;post&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxRules</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">mobile_number</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">password</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxTableDataHandleSizeChange</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 改变每页显示的条数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span> = val</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>(<span class="number">1</span>, <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxTableDataHandleCurrentChange</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateCurrentPage</span> = val</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>(val, <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXList</span>(<span class="params">page = <span class="number">1</span>, limit = <span class="number">10</span></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>.<span class="property">page</span> = page</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>.<span class="property">limit</span> = limit</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/getXXXXXList&#x27;</span>,<span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotal</span> = res.<span class="property">data</span>.<span class="property">total</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateCurrentPage</span> = res.<span class="property">data</span>.<span class="property">current_page</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateLastPage</span> = res.<span class="property">data</span>.<span class="property">last_page</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">deleteXXXXX</span>(<span class="params">row</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(row)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;确认删除吗？&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/deleteXXXXX&#x27;</span>, &#123; <span class="attr">id</span>: row.<span class="property">id</span> &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// this.loading = false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: <span class="string">&#x27;已取消删除&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">editXXXXX</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">switch</span> (<span class="variable language_">this</span>.<span class="property">xxxxxEditType</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;post&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;xxxxxRef&#x27;</span>].<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;xxxxx/postXXXXX&#x27;</span>, <span class="variable language_">this</span>.<span class="property">xxxxxForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxForm</span> = &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;put&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;xxxxxRef&#x27;</span>].<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;xxxxx/putXXXXX&#x27;</span>, <span class="variable language_">this</span>.<span class="property">xxxxxForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxForm</span> = &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxDialog</span>(<span class="params">type, row</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">switch</span> (type) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;post&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">xxxxxEditType</span> = <span class="string">&#x27;post&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;put&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">xxxxxEditType</span> = <span class="string">&#x27;put&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 这里一定要使用nextTick的方式赋值，不然会卡住input</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//   this.$set(this.xxxxxForm, &#x27;id&#x27;, row.id)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">default</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.main-panel</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a>Dialog</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog v-loading=<span class="string">&quot;loading&quot;</span> title=<span class="string">&quot;xxxxxEditType===&#x27;put&#x27;?&#x27;编辑&#x27;:&#x27;添加&#x27;&quot;</span> :visible.<span class="property">sync</span>=<span class="string">&quot;xxxxxDiaIsShow&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;diaForm&quot;</span> :append-to-body=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">ref</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:model</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:rules</span>=<span class="string">&quot;xxxxxRules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">label-width</span>=<span class="string">&quot;140px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;车牌号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plate_number&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.plate_number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;请输入车牌号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;司机&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.driver_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;请选择司机&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getDriverRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;item in driverOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;item.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;item.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;归属人/受益人&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.beneficiary_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;归属人/受益人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getBeneficiaryRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;beneficiary in beneficiaryOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;beneficiary.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;beneficiary.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;beneficiary.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;editXXXXX()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span>确认<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDiaIsShow = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line">&lt;/el-dialog&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxEditType</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxRules</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">editXXXXX</span>(<span class="params"></span>)&#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h2><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-checkbox-<span class="keyword">group</span> v-model=<span class="string">&quot;coupon_type&quot;</span> @change=<span class="string">&quot;selectCouponType&quot;</span>&gt;</span><br><span class="line">  &lt;el-checkbox</span><br><span class="line">    v-for=<span class="string">&quot;item in coupon_typeAttr&quot;</span></span><br><span class="line">    :<span class="keyword">key</span>=<span class="string">&quot;item.key&quot;</span></span><br><span class="line">    :<span class="keyword">label</span>=<span class="string">&quot;item.value&quot;</span></span><br><span class="line">  &gt;&#123;&#123;coupon_type&#125;&#125;</span><br><span class="line">  &lt;/el-checkbox&gt;</span><br><span class="line">&lt;/el-checkbox-<span class="keyword">group</span>&gt;</span><br><span class="line"></span><br><span class="line">coupon_typeAttr: [</span><br><span class="line">&#123; <span class="keyword">key</span>: 1, value: <span class="string">&#x27;满减&#x27;</span> &#125;,</span><br><span class="line">&#123; <span class="keyword">key</span>: 2, value: <span class="string">&#x27;折扣&#x27;</span> &#125;,</span><br><span class="line">&#123; <span class="keyword">key</span>: 3, value: <span class="string">&#x27;随机减金额&#x27;</span> &#125;</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">selectCouponType(val) &#123;</span><br><span class="line">  this.coupon_type = val</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;兑换优惠券消耗的积分&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;coupon_exchange_integral&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="language-xml"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;15&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="language-xml"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-for</span>=<span class="string">&quot;item in coupon_typeAttr&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;couponForm.coupon_type&quot;</span> <span class="attr">:label</span>=<span class="string">&quot;item.key&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      </span><span class="language-xquery">&#123;&#123;<span class="type">item</span>.<span class="keyword">value</span>&#125;</span><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">coupon_typeAttr: [</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">1</span>, value: <span class="string">&#x27;满减&#x27;</span> &#125;,</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">2</span>, value: <span class="string">&#x27;折扣&#x27;</span> &#125;,</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">3</span>, value: <span class="string">&#x27;随机减金额&#x27;</span> &#125;</span><br><span class="line">],</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="selected"><a href="#selected" class="headerlink" title="selected"></a>selected</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;归属人/受益人&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;beneficiary_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.beneficiary_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;归属人/受益人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getXXXXXRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;xxxxx in xxxxxOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;xxxxx.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;xxxxx.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;xxxxx.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxOptions</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableData</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXRemote</span>(<span class="params">query</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (query !== <span class="string">&#x27;&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxOptions</span> = <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> item.<span class="property">label</span>.<span class="title function_">toLowerCase</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            .<span class="title function_">indexOf</span>(query.<span class="title function_">toLowerCase</span>()) &gt; -<span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//return item.xxx.indexOf(query) &gt; -1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxOptions</span> = <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXList</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/getShipCompanyList&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">shipCompanyTableData</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">shipCompanyOptions</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">carRules</span>: &#123;</span><br><span class="line">  <span class="attr">plate_number</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请输入&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">driver_id</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请选择&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">beneficiary_id</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请选择&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="输入后检测内容"><a href="#输入后检测内容" class="headerlink" title="输入后检测内容"></a>输入后检测内容</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-<span class="keyword">form</span>-item <span class="keyword">label</span>=<span class="string">&quot;运单号&quot;</span> <span class="keyword">prop</span>=<span class="string">&quot;sea_waybill_number&quot;</span>&gt;</span><br><span class="line">  &lt;el-<span class="keyword">input</span></span><br><span class="line">    v-model=<span class="string">&quot;xxxxxForm.sea_waybill_number&quot;</span></span><br><span class="line">    <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span></span><br><span class="line">    placeholder=<span class="string">&quot;请输入运单号&quot;</span></span><br><span class="line">    @<span class="keyword">input</span>=<span class="string">&quot;autoSelectShipCompany()&quot;</span></span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/el-<span class="keyword">form</span>-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">  autoSelectShipCompany(a) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="横向表单-1行2列"><a href="#横向表单-1行2列" class="headerlink" title="横向表单 1行2列"></a>横向表单 1行2列</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">el</span>-row <span class="built_in">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;12&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;12&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">el</span>-row&gt;</span><br></pre></td></tr></table></figure><h2 id="横向表单-1行3列"><a href="#横向表单-1行3列" class="headerlink" title="横向表单 1行3列"></a>横向表单 1行3列</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">el</span>-row <span class="built_in">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">el</span>-row&gt;</span><br></pre></td></tr></table></figure><h2 id="日期和时间点"><a href="#日期和时间点" class="headerlink" title="日期和时间点"></a>日期和时间点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;预计收/装时间&quot; prop=&quot;estimated_timestamp&quot;&gt;</span><br><span class="line">  &lt;el-col :span=&quot;24&quot;&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;importForm.estimated_timestamp&quot;</span><br><span class="line">      type=&quot;datetime&quot;</span><br><span class="line">      placeholder=&quot;预计收/装时间&quot;</span><br><span class="line">      align=&quot;right&quot;</span><br><span class="line">      :picker-options=&quot;estimatedTimestampPickerOptions&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;el-input</span><br><span class="line">      v-model=&quot;importForm.estimated_timestamp&quot;</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;请填写预计收/装时间&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/el-col&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import moment from &#x27;moment&#x27;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        estimatedTimestampPickerOptions: &#123;</span><br><span class="line">          shortcuts: [&#123;</span><br><span class="line">            text: &#x27;今天&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, new Date());</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            text: &#x27;昨天&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              const date = new Date();</span><br><span class="line">              date.setTime(date.getTime() - 3600 * 1000 * 24);</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, date);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            text: &#x27;一周前&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              const date = new Date();</span><br><span class="line">              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, date);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">             text: &#x27;明天&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">             text: &#x27;后天&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24 * 2)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">             text: &#x27;一周后&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24 * 7)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">              text: &#x27;最近一周&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().week(moment().week()).startOf(&#x27;week&#x27;).valueOf() // 这样是年月日的格式</span><br><span class="line">                const end = moment().week(moment().week()).endOf(&#x27;week&#x27;).valueOf() // 这样是时间戳的格式</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;最近一个月&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().month(moment().month()).startOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                const end = moment().month(moment().month()).endOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;最近三个月&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().month(moment().month() - 2).startOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                const end = moment().month(moment().month()).endOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;今年&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().year(moment().year()).startOf(&#x27;year&#x27;).valueOf()</span><br><span class="line">                const end = moment().year(moment().year()).endOf(&#x27;year&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        value1: &#x27;&#x27;,</span><br><span class="line">        value2: &#x27;&#x27;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="confirm"><a href="#confirm" class="headerlink" title="confirm"></a>confirm</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$confirm(<span class="string">&#x27;确认删除吗？&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">  <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="table-勾选-数据回显-https-element-eleme-cn-2-13-zh-CN-component-table"><a href="#table-勾选-数据回显-https-element-eleme-cn-2-13-zh-CN-component-table" class="headerlink" title="table 勾选 数据回显 https://element.eleme.cn/2.13/#/zh-CN/component/table"></a>table 勾选 数据回显 <a href="https://element.eleme.cn/2.13/#/zh-CN/component/table" target="_blank" rel="noopener">https://element.eleme.cn/2.13/#/zh-CN/component/table</a></h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$refs.productTableData.toggleRowSelection(<span class="keyword">this</span>.productTableData[i], <span class="literal">true</span>) <span class="comment">// 回显</span></span><br></pre></td></tr></table></figure><h3 id="el-select-回显"><a href="#el-select-回显" class="headerlink" title="el-select 回显"></a>el-select 回显</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-select</span><br><span class="line">  v-model=<span class="string">&quot;form.type&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请选择类型&quot;</span></span><br><span class="line">  style=<span class="string">&quot;width: 370px&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  &lt;el-option</span><br><span class="line">    v-<span class="keyword">for</span>=<span class="string">&quot;(value, id) in options.types&quot;</span></span><br><span class="line">    <span class="symbol">:key=<span class="string">&quot;&quot;</span></span></span><br><span class="line">    <span class="symbol">:label=<span class="string">&quot;value&quot;</span></span></span><br><span class="line">    <span class="symbol">:value=<span class="string">&quot;id * 1&quot;</span></span> <span class="comment"># 重点</span></span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure><h3 id="el-select-回显-1"><a href="#el-select-回显-1" class="headerlink" title="el-select 回显"></a>el-select 回显</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-<span class="keyword">select</span></span><br><span class="line">  v-model=<span class="string">&quot;form.type&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请选择类型&quot;</span></span><br><span class="line">  style=<span class="string">&quot;width: 370px&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  &lt;el-<span class="keyword">option</span></span><br><span class="line">    v-<span class="keyword">for</span>=<span class="string">&quot;(value, id) in options.types&quot;</span></span><br><span class="line">    :<span class="keyword">key</span>=<span class="string">&quot;id&quot;</span></span><br><span class="line">    :label=<span class="string">&quot;value&quot;</span></span><br><span class="line">    :<span class="keyword">value</span>=<span class="string">&quot;id * 1&quot;</span></span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/el-<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="el-radio-group-回显"><a href="#el-radio-group-回显" class="headerlink" title="el-radio-group 回显"></a>el-radio-group 回显</h3><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;form.type&quot;</span> <span class="attr">disabled</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-radio</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-for</span>=<span class="string">&quot;(v, k) in seaWayBillSearchOptions.type_array&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:label</span>=<span class="string">&quot;k * 1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:key</span>=<span class="string">&quot;v&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">v</span> &#125;&#125;</span><span class="language-xml">&lt;/el-radio</span></span><br><span class="line"><span class="language-xml">  &gt;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="js-语法"><a href="#js-语法" class="headerlink" title="js 语法"></a>js 语法</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 传参</span></span><br><span class="line">:<span class="type">on-success</span>=<span class="string">&quot;(res, file) =&gt; handleSkuLogoSuccess(res, file, index)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 数组去重</span></span><br><span class="line">let <span class="keyword">new</span><span class="type">Arr</span> = <span class="keyword">Array</span>.from(<span class="keyword">new</span> <span class="type">Set</span>(arr))</span><br><span class="line"></span><br><span class="line"><span class="meta"># 判断是否是数组</span></span><br><span class="line"><span class="keyword">Array</span>.isArray(arr)</span><br><span class="line"></span><br><span class="line"><span class="meta"># 判断数组中是否存在</span></span><br><span class="line"><span class="keyword">Array</span>.indexOf(<span class="string">&#x27;3&#x27;</span>) !== <span class="number">-1</span> <span class="comment">//说明存在 </span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 删除数组元素</span></span><br><span class="line"><span class="keyword">Array</span>.remove(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="php-语法"><a href="#php-语法" class="headerlink" title="php 语法"></a>php 语法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多维数组排序</span></span><br><span class="line"><span class="variable">$sortArr</span> = [];</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$orderListData</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$orderListItem</span>) &#123;</span><br><span class="line">    <span class="variable">$sortArr</span>[] = <span class="variable">$orderListItem</span>[<span class="string">&#x27;price_total&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">array_multisort(<span class="variable">$sortArr</span>, SORT_ASC, <span class="variable">$orderListData</span>);</span><br></pre></td></tr></table></figure><h2 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Model,修改器</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">parent</span>::boot();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">static</span>::deleting(</span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$model</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$roles</span> = <span class="variable">$model</span>-&gt;roles();</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$roles</span>-&gt;count() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;该权限已被角色绑定，请删除角色中的对应权限再进行操作&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//dd($model-&gt;id,$roles-&gt;count(),$roles-&gt;get()-&gt;toArray());</span></span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model,获取器</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$appends</span> = [<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNameAttribute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Ticket::addExtDesc(<span class="keyword">$this</span>-&gt;attributes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Laravel-admin $form 如果动态修改字段的值，需要提前该字段为hidden</span></span><br><span class="line"><span class="variable">$form</span>-&gt;hidden(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line"><span class="variable">$form</span>-&gt;saving(<span class="function"><span class="keyword">function</span> (<span class="params">Form <span class="variable">$form</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$skulistinfo</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$skulistinfo</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$key</span> == <span class="variable">$form</span>-&gt;sku_listinfo_id) &#123;</span><br><span class="line">            <span class="variable">$form</span>-&gt;name = <span class="variable">$item</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$form</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Encore</span>\<span class="title">Admin</span>\<span class="title">Grid</span>;</span><br><span class="line">Grid::init(<span class="function"><span class="keyword">function</span> (<span class="params">Grid <span class="variable">$grid</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableActions();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disablePagination();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableCreateButton();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableFilter(); </span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableRowSelector();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableColumnSelector();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableTools();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableExport();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;actions(<span class="function"><span class="keyword">function</span> (<span class="params">Grid\Displayers\Actions <span class="variable">$actions</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableView();</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableEdit();</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableDelete();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="此刻芭蕾"><a href="#此刻芭蕾" class="headerlink" title="此刻芭蕾"></a>此刻芭蕾</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br></pre></td><td class="code"><pre><span class="line">        $test = &lt;&lt;&lt;a</span><br><span class="line">已售的座位id</span><br><span class="line"><span class="number">176</span></span><br><span class="line"><span class="number">175</span></span><br><span class="line">...</span><br><span class="line">a<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        $text_arr = explode(PHP_EOL, $test)<span class="comment">;</span></span><br><span class="line">        $text_arr = array_unique($text_arr, SORT_NUMERIC)<span class="comment">;</span></span><br><span class="line">        dd($text_arr)<span class="comment">;</span></span><br><span class="line"><span class="title">        $seat_models = BalletmeTicketSeat::</span>whereIn(&#x27;id&#x27;, $text_arr)</span><br><span class="line">            -&gt;get()<span class="comment">;</span></span><br><span class="line">        $yishou_arr_id = []<span class="comment">;</span></span><br><span class="line">        foreach ($seat_models as $seat_model) &#123;</span><br><span class="line">            $yishou_arr_id [] = $seat_model-&gt;id<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        # 获取最终的出错ids，执行前先执行下方的逻辑</span><br><span class="line">        $error_ids = []<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        $no_ids_txt = file_get_contents(&#x27;$no_ids.txt&#x27;)<span class="comment">;</span></span><br><span class="line">        $no_ids = explode(PHP_EOL, $no_ids_txt)<span class="comment">;</span></span><br><span class="line">        foreach ($no_ids as $no_id) &#123;</span><br><span class="line">            if (in_array($no_id, $yishou_arr_id)) &#123;</span><br><span class="line">                $error_ids[] = $no_id<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(implode(&#x27; &#x27;, $error_ids))<span class="comment">;</span></span><br><span class="line">        dd(<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        # 下面是获取不能坐的座位ids</span><br><span class="line">        $no_ = [</span><br><span class="line">            <span class="number">5</span> =&gt; [</span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">6</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">7</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">8</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">9</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">10</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">11</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">12</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">13</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">14</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">15</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">16</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">17</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">18</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">19</span> =&gt; [</span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line">                <span class="number">18</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">20</span> =&gt; [</span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line">                <span class="number">16</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">21</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">22</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">23</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">24</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">25</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">26</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">27</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">28</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">29</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">30</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">31</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">32</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">33</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">        ]</span><br><span class="line">        $no_ids = []<span class="comment">;</span></span><br><span class="line">        foreach ($no_ as $row =&gt; $cols) &#123;</span><br><span class="line">            foreach ($cols as $col) &#123;</span><br><span class="line"><span class="title">                $seat_model = BalletmeTicketSeat::</span>where(&#x27;row&#x27;, $row)</span><br><span class="line">                    -&gt;where(&#x27;col&#x27;, $col)</span><br><span class="line">                    -&gt;select([</span><br><span class="line">                        &#x27;id&#x27;,</span><br><span class="line">                        &#x27;row&#x27;,</span><br><span class="line">                        &#x27;col&#x27;,</span><br><span class="line">                        &#x27;floor&#x27;,</span><br><span class="line">                    ])</span><br><span class="line">                    -&gt;first()<span class="comment">;</span></span><br><span class="line">                if (! $seat_model) &#123;</span><br><span class="line"><span class="title">                    throw new ServiceException(&#x27;row:&#x27; . $row . &#x27; col:</span>&#x27; . $col)<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">                $no_ids[] = $seat_model-&gt;id<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // file_put_contents(&#x27;$no_ids.txt&#x27;, implode(PHP_EOL, $no_ids))<span class="comment">;</span></span><br><span class="line">        // dd($no_ids)<span class="comment">;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">    <span class="variable">$test</span> = <span class="string">&lt;&lt;&lt;a</span></span><br><span class="line"><span class="string">已售的座位id</span></span><br><span class="line"><span class="string">176</span></span><br><span class="line"><span class="string">175</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">a</span>;</span><br><span class="line">    <span class="variable">$text_arr</span> = explode(PHP_EOL, <span class="variable">$test</span>);</span><br><span class="line">    <span class="variable">$text_arr</span> = array_unique(<span class="variable">$text_arr</span>);</span><br><span class="line">    <span class="variable">$seat_models</span> = BalletmeTicketSeat::whereIn(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$text_arr</span>)</span><br><span class="line">        -&gt;get();</span><br><span class="line">    <span class="variable">$yishou_arr_id</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$seat_models</span> <span class="keyword">as</span> <span class="variable">$seat_model</span>) &#123;</span><br><span class="line">        <span class="variable">$yishou_arr_id</span> [] = <span class="variable">$seat_model</span>-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// dd(count($text_arr), count($yishou_arr_id));</span></span><br><span class="line">    <span class="variable">$seat_models_all</span> = BalletmeTicketSeat::select()-&gt;get();</span><br><span class="line">    <span class="comment">// dd(count($seat_models_all) - count($text_arr));</span></span><br><span class="line">    <span class="variable">$un_sale_ids</span> =[];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$seat_models_all</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (! in_array(<span class="variable">$item</span>-&gt;id, <span class="variable">$yishou_arr_id</span>)) &#123;</span><br><span class="line">            <span class="variable">$un_sale_ids</span> [] = <span class="variable">$item</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$un_sale_models</span> = BalletmeTicketSeat::whereIn(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$un_sale_ids</span>)</span><br><span class="line">        -&gt;get();</span><br><span class="line">    <span class="variable">$seat_area_a</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_b</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_c</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_no</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$un_sale_models</span> <span class="keyword">as</span> <span class="variable">$un_sale_model</span>) &#123;</span><br><span class="line">        <span class="comment">// dd($un_sale_model-&gt;toArray());</span></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$un_sale_model</span>-&gt;area_id) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$seat_area_a</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$seat_area_b</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                <span class="variable">$seat_area_c</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="variable">$seat_area_no</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_a));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_b));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_c));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_no));</span></span><br><span class="line">    dd(PHP_EOL, count(<span class="variable">$seat_area_a</span>),count(<span class="variable">$seat_area_b</span>), count(<span class="variable">$seat_area_c</span>), count(<span class="variable">$seat_area_no</span>));</span><br><span class="line">    dd(count(<span class="variable">$un_sale_ids</span>), count(<span class="variable">$un_sale_models</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ElementUI工具</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>electronjs</title>
    <link href="https://ayou129.github.io/blog/p/801262bc/"/>
    <id>https://ayou129.github.io/blog/p/801262bc/</id>
    <published>2020-09-10T11:04:59.000Z</published>
    <updated>2021-12-10T11:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h2 id="下载-fiddle"><a href="#下载-fiddle" class="headerlink" title="下载 fiddle"></a>下载 fiddle</h2><blockquote><p><a href="https://www.electronjs.org/fiddle" target="_blank" rel="noopener">https://www.electronjs.org/fiddle</a></p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.npmrc</span><br><span class="line"></span><br><span class="line">增加</span><br><span class="line">ELECTRON_MIRROR=<span class="string">&quot;https://cdn.npm.taobao.org/dist/electron/&quot;</span></span><br><span class="line"></span><br><span class="line">~ sudo ELECTRON_MIRROR=<span class="string">&quot;https://cdn.npm.taobao.org/dist/electron/&quot;</span> npm install -g electron --unsafe-perm=<span class="keyword">true</span> --allow-root</span><br><span class="line"></span><br><span class="line">cmd运行程序</span><br><span class="line">~ sudo <span class="regexp">/Applications/</span>Electron\ Fiddle.app<span class="regexp">/Contents/M</span>acOS/electron-fiddle</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ElementUI工具</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Adobe-Premiere</title>
    <link href="https://ayou129.github.io/blog/p/5a8bff59/"/>
    <id>https://ayou129.github.io/blog/p/5a8bff59/</id>
    <published>2020-08-04T15:48:18.000Z</published>
    <updated>2021-08-09T09:20:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>暂无描述</p><span id="more"></span><h3 id="防止跳帧"><a href="#防止跳帧" class="headerlink" title="防止跳帧"></a>防止跳帧</h3><blockquote><p>一段视频中间删掉n个帧后会发生跳帧</p></blockquote><p>操作：视频过度 -&gt; 溶解 -&gt; MorphCut -&gt; 拖动<br>如果有瑕疵，可以在时间线面板 右键 设置过度持续时间大一些</p><p>红色状态：正在处理<br>绿色：处理成功</p><h3 id="快速对齐音视频"><a href="#快速对齐音视频" class="headerlink" title="快速对齐音视频"></a>快速对齐音视频</h3><p>在项目中选中音频&amp;&amp;视频 右键 -&gt; 合并剪辑</p><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><p>两种标记(M键)</p><ol><li><p>适用于采访类节目(单个项目总时间固定)<br>针对音视频的标记</p></li><li><p>适用于新闻类节目(总时间、单个项目时间固定)<br>针对时间线的标记</p></li></ol><p>标记可以导出，方便沟通吸纳意见<br>操作：文件 -&gt; 导出 -&gt; 标记</p><h3 id="批量只做字幕"><a href="#批量只做字幕" class="headerlink" title="批量只做字幕"></a>批量只做字幕</h3><p>编写字幕txt</p><ol><li>第一行，字幕标题</li><li>后面每一行都是一次字幕</li></ol><p>使用 PS：</p><ol><li>新建</li><li>文档类型：胶片和视频 </li><li>背景：透明</li><li>增加文字 样式自定义(大小、对齐方式、颜色、描边等)</li><li>图像 -&gt; 变量 -&gt; 定义 -&gt; 文本替换：写上字幕标题</li><li>点击下一个</li><li>导入字幕txt文件，编码utf8</li><li>文件 -&gt; 导出 -&gt; 数据组作为文件 -&gt; 选择文件夹 -&gt; 确定</li></ol><p>使用 Premiere：</p><ol><li>导入时，右键选中所有字幕右键，设置持续时间(默认是5秒)</li><li>拖动时间线</li></ol><h3 id="制作-静态-分屏效果"><a href="#制作-静态-分屏效果" class="headerlink" title="制作(静态)分屏效果"></a>制作(静态)分屏效果</h3><p>方式1：裁剪</p><ol><li>缩小所有素材并且摆放</li><li>视频效果 -&gt; 变换 -&gt; 裁剪 视频的边缘，制作黑色边框(分屏效果)</li></ol><p>方式2：遮罩</p><p>分屏效果使用场景</p><ol><li>素材量比较大 但是质量参差不齐</li><li>视频有核心主题(线索) 贯穿始终</li><li>可以做强调效果</li><li>表达同一时间不同空间发生的事情(平行蒙太奇)</li><li>阿卡贝拉 纯人声</li></ol><p>扩展：局部去色</p><h3 id="制作-动态-分屏效果"><a href="#制作-动态-分屏效果" class="headerlink" title="制作(动态)分屏效果"></a>制作(动态)分屏效果</h3><p>选中A视频</p><ol><li>裁剪</li><li>位置</li><li>选方向并打关键帧</li><li>shift + 方向右键 每按一次平移5帧</li></ol><p>前缓出、后缓入</p><h3 id="保留视频单一颜色"><a href="#保留视频单一颜色" class="headerlink" title="保留视频单一颜色"></a>保留视频单一颜色</h3><h3 id="快速删除视频间隙"><a href="#快速删除视频间隙" class="headerlink" title="快速删除视频间隙"></a>快速删除视频间隙</h3><ol><li>序列菜单</li><li>封闭间隙</li></ol><h3 id="制作电影职位表字幕"><a href="#制作电影职位表字幕" class="headerlink" title="制作电影职位表字幕"></a>制作电影职位表字幕</h3><p>方式1：内置功能：滚动字幕<br>方式2：PS制作图片，位移动画功能<br>方式3：</p><ol><li>在节目面板中增加文字工具，把txt文本复制进去</li><li>把文字区域拉满，显示全部的字幕</li><li>水平、垂直居中对齐</li><li>增加滚动效果：基本图形面板 -&gt; 编辑 -&gt; 滚动</li><li>通过文字图层的长度决定</li></ol><h3 id="音频降噪-amp-amp-修复"><a href="#音频降噪-amp-amp-修复" class="headerlink" title="音频降噪 &amp;&amp; 修复"></a>音频降噪 &amp;&amp; 修复</h3><ol><li>选中premiere中的音频</li><li>右键 -&gt; 在 audition 中编辑</li><li>找出有噪音的地方</li><li>效果 -&gt; 降噪&#x2F;恢复 -&gt; 降噪(处理)</li><li>捕捉 噪声样本</li><li>降噪 调低百分比(50% - 60%)</li><li>可以重复降噪 ctrl + R</li></ol><p>消除所有声音：</p><ol><li>选中某段声音</li><li>效果 -&gt; 静音</li></ol><p>声音更大更稳定：</p><ol><li>效果组</li><li>振幅与压限</li><li>语音音量级别</li><li>目标音量级别调至 -15</li><li>电平值 50</li></ol><p>去除部分口水音</p><ol><li>工具栏 -&gt; 污点修复画笔工具</li><li>涂抹即可</li></ol><p>16:9<br>9张长方形的图<br>(320,180) (960,180) (1600,180)<br>(320,540) (960,540) (1600,540)<br>(320,900) (960,900) (1600,900)</p><h2 id="Audition"><a href="#Audition" class="headerlink" title="Audition"></a>Audition</h2><h3 id="屏蔽-b一声"><a href="#屏蔽-b一声" class="headerlink" title="屏蔽 b一声"></a>屏蔽 b一声</h3><p>找到所有覆盖的地方<br>效果<br>生成<br>音调<br>基频880hz<br>形状 三角形&#x2F;锯齿<br>振幅 -50</p><p>注意事项：</p><ol><li>将剪辑置于底层</li><li>淡入淡出</li></ol>]]></content>
    
    
    <summary type="html">暂无</summary>
    
    
    
    
  </entry>
  
</feed>
