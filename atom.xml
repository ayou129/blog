<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿尤</title>
  
  <subtitle>blog</subtitle>
  <link href="https://ayou129.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://ayou129.github.io/blog/"/>
  <updated>2022-12-07T11:44:01.000Z</updated>
  <id>https://ayou129.github.io/blog/</id>
  
  <author>
    <name>阿尤</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lua</title>
    <link href="https://ayou129.github.io/blog/p/6fbb57c1/"/>
    <id>https://ayou129.github.io/blog/p/6fbb57c1/</id>
    <published>2022-12-09T11:44:01.000Z</published>
    <updated>2022-12-07T11:44:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习一下lua语言，使用到的场景有许多，游戏开发、redis中并发问题。</p><span id="more"></span><h2 id="有关游戏的"><a href="#有关游戏的" class="headerlink" title="有关游戏的"></a>有关游戏的</h2><p>在编写<code>第三人称游戏</code>的开发核心代码时，我们可以考虑以下几个方面：</p><ul><li>使用<code>变量</code>来存储<code>玩家的位置和姿势</code>，并根据键盘或控制器的输入来更新玩家的位置。</li><li>使用<code>函数</code>来封装<code>游戏世界中的各种对象</code>，例如：敌人、道具、建筑物等。</li><li>使用<code>循环</code>来处理<code>游戏世界中各个对象的逻辑</code>，例如：敌人的移动、道具的消失、建筑物的损坏等。</li><li>使用<code>条件语句</code>来处理游戏<code>世界中各种事件的发生</code>，例如：玩家的死亡、敌人的攻击、道具的收集等。</li></ul><p>以下是一段基本的第三人称游戏开发核心代码的例子：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 定义玩家的位置和姿势变量</span></span><br><span class="line"><span class="keyword">local</span> playerPosition = &#123;x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>&#125;</span><br><span class="line"><span class="keyword">local</span> playerRotation = &#123;x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义游戏世界中各种对象的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createEnemy</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> enemy = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    health = <span class="number">100</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> enemy</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createItem</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> item = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    duration = <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> item</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createBuilding</span><span class="params">(position, rotation)</span></span></span><br><span class="line"><span class="keyword">local</span> building = &#123;</span><br><span class="line">    position = position,</span><br><span class="line">    rotation = rotation,</span><br><span class="line">    health = <span class="number">1000</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> building</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 初始化游戏世界中的各种对象</span></span><br><span class="line"><span class="keyword">local</span> enemies = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> items = &#123;&#125;</span><br><span class="line"><span class="keyword">local</span> buildings = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 处理游戏世界中各个对象</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习一下lua语言，使用到的场景有许多，游戏开发、redis中并发问题。&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Lua" scheme="https://ayou129.github.io/blog/tags/Lua/"/>
    
    <category term="游戏开发" scheme="https://ayou129.github.io/blog/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>安卓反编译</title>
    <link href="https://ayou129.github.io/blog/p/5001f0a0/"/>
    <id>https://ayou129.github.io/blog/p/5001f0a0/</id>
    <published>2022-11-25T08:03:20.000Z</published>
    <updated>2022-11-08T12:19:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候想通过研究大厂的APP内部Mysql字段是如何设计的，但是大厂开发人员将信息传递的方式放入了TCP更深层的地方，尝试使用反编译的方式获取其数据信息，方便研究。</p><span id="more"></span><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>安卓 <code>Android app</code> 的包后缀是apk</p><p>工具：<code>apktool</code>：资源文件获取，可以提取出图片文件和布局文件进行使用查看<br>工具：<code>dex2jar</code>将apk反编译成Java源码（classes.dex转化成jar文件）<br>工具：<code>jd-gui</code>查看APK中classes.dex转化成出的jar文件，即源码文件</p><h2 id="资源文件获取-Apktool"><a href="#资源文件获取-Apktool" class="headerlink" title="资源文件获取 Apktool"></a>资源文件获取 Apktool</h2><p><code>apktool</code> 可以进行反编译，52pojie中有很多工具，全部都是集成了apktool工具进行操作的。<br>所以这里只介绍 <code>apktool</code> 的工具使用说明</p><p>官网 <code>https://ibotpeaches.github.io/Apktool/build/</code><br>github <code>https://github.com/iBotPeaches/Apktool</code></p><p><code>apktool</code> 源代码编译后的文件就是 <code>released</code>版本</p><h3 id="Mac切换不同版本的apktool"><a href="#Mac切换不同版本的apktool" class="headerlink" title="Mac切换不同版本的apktool"></a>Mac切换不同版本的apktool</h3><p>1.下载多个版本到根目录的apktool list文件夹中<br>2.<code>sudo cp apktool\ list/apktool_2.7.0.jar /usr/local/bin/apktool.jar</code><br>3.<code>chmod +x /usr/local/bin/apktool.jar</code></p><h3 id="Mac如何build"><a href="#Mac如何build" class="headerlink" title="Mac如何build"></a>Mac如何build</h3><p><code>https://ibotpeaches.github.io/Apktool/build/</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ./gradlew build dist</span><br><span class="line"><span class="comment"># 以及</span></span><br><span class="line">sudo ./gradlew build <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Mac如何反编译"><a href="#Mac如何反编译" class="headerlink" title="Mac如何反编译"></a>Mac如何反编译</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除之前编译的文件夹</span></span><br><span class="line">rm <span class="operator">-</span>rf app<span class="operator">-</span><span class="built_in">prod</span><span class="operator">-</span>release_encrypted_guanwang_16_align</span><br><span class="line"><span class="comment"># 反编译</span></span><br><span class="line">sudo apktool d app<span class="operator">-</span><span class="built_in">prod</span><span class="operator">-</span>release_encrypted_guanwang_16_align.apk</span><br></pre></td></tr></table></figure><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p><code>uki apk</code> 安全方面可能利用了apktool的bug，解码不使用<code>v2.0.0-RC2</code><br>会报</p><img src="/blog/p/5001f0a0/Could%20not%20decode%20arsc%20file.png" class="" title="Could not decode arsc file.png"><p>但是使用了rc2版本之后依然会遇到下面的问题</p><ul><li>要使用java7 如何安装<a href="/blog/p/c8447915/" title="Java核心知识要点">Java核心知识要点</a></li><li>maven不再支持http的方式，尝试解决了一下，<br>在每个<code>repositories</code> 下面都修改了代码<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">repositories</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 这里需要注销这行 mavenCentral()</span></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        url <span class="string">&quot;https://repo1.maven.org/maven2&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">name</span> <span class="operator">=</span> <span class="string">&quot;forge&quot;</span></span><br><span class="line">        <span class="attr">url</span> <span class="operator">=</span> <span class="string">&quot;http://files.minecraftforge.net/maven&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="title class_">maven</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">name</span> <span class="operator">=</span> <span class="string">&quot;sonatype&quot;</span></span><br><span class="line">        <span class="attr">url</span> <span class="operator">=</span> <span class="string">&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>但是依然遇到了一些问题，就此放弃<img src="/blog/p/5001f0a0/problem2.png" class="" title="problem2.png"></li></ul><p>经测试</p><ul><li>酷狗apk，反编译通过，但是安全方面使用了混淆，所以源代码较难理解</li><li>微信apk，反编译通过，使用了混淆</li><li>Keep apk，反编译通过，</li><li>Soul apk，反编译通过，</li><li>积木 apk，未尝试</li><li>uki apk，反编译不通过</li></ul><h2 id="dex2jar-将apk反编译成Java源码（classes-dex转化成jar文件）"><a href="#dex2jar-将apk反编译成Java源码（classes-dex转化成jar文件）" class="headerlink" title="dex2jar 将apk反编译成Java源码（classes.dex转化成jar文件）"></a>dex2jar 将apk反编译成Java源码（classes.dex转化成jar文件）</h2><ol><li>解压apk</li><li>获取所有classes.dex(每一个dex都有相关代码)</li><li>执行<code>./d2j-dex2jar.sh ../keep_keep_homepage___default_7.39.0_73326892的副本/classes.dex</code></li></ol><h2 id="jd-gui-查看jar里面的文件"><a href="#jd-gui-查看jar里面的文件" class="headerlink" title="jd-gui 查看jar里面的文件"></a><code>jd-gui</code> 查看jar里面的文件</h2><h2 id="其他相关"><a href="#其他相关" class="headerlink" title="其他相关"></a>其他相关</h2><p>dex2jar <code>https://github.com/pxb1988/dex2jar</code></p>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="Android" scheme="https://ayou129.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>加密算法</title>
    <link href="https://ayou129.github.io/blog/p/79dcde6c/"/>
    <id>https://ayou129.github.io/blog/p/79dcde6c/</id>
    <published>2022-11-24T04:01:59.000Z</published>
    <updated>2022-09-02T08:05:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>介绍经常用到的加密算法，不同场景对加密算法的选择。</p><span id="more"></span><h2 id="对称加密和非对称加密"><a href="#对称加密和非对称加密" class="headerlink" title="对称加密和非对称加密"></a>对称加密和非对称加密</h2><p><code>https://zhuanlan.zhihu.com/p/347114235</code></p><p>加密算法分 <code>对称加密</code> 和 <code>非对称加密</code>，其中<br><code>对称加密算法</code> 的加密与解密 密钥相同<br><code>非对称加密算法</code> 的加密密钥与解密 密钥不同，<br>此外，还有一类 不需要密钥 的 散列算法。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">常见的 对称加密 算法主要有 DES、<span class="number">3</span>DES、AES 等</span><br><span class="line">常见的 非对称算法 主要有 RSA、DSA 等</span><br><span class="line">散列算法 主要有 <span class="keyword">SHA-1、MD5 </span>等</span><br></pre></td></tr></table></figure><h3 id="对称加密-私钥-早期加密算法"><a href="#对称加密-私钥-早期加密算法" class="headerlink" title="对称加密(私钥)(早期加密算法)"></a>对称加密(私钥)(早期加密算法)</h3><p>发送放和接收方 使用相同的私钥<br>例子：</p><ul><li>寄快递 收快递 快递上了保险盒，两人都有相同的钥匙。<img src="/blog/p/79dcde6c/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png" class="" title="对称加密.png"></li></ul><h3 id="非对称加密-公开密钥加密算法"><a href="#非对称加密-公开密钥加密算法" class="headerlink" title="非对称加密(公开密钥加密算法)"></a>非对称加密(公开密钥加密算法)</h3><p><code>加密</code> 和 <code>解密</code> 使用不同的密钥(一公一私)</p><img src="/blog/p/79dcde6c/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86.png" class="" title="非对称加密.png"><h3 id="常见的签名加密算法"><a href="#常见的签名加密算法" class="headerlink" title="常见的签名加密算法"></a>常见的签名加密算法</h3><h4 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h4><p>MD5 用的是 哈希函数，它的典型应用是对一段信息产生 信息摘要，以 防止被篡改。<br>严格来说，MD5 不是一种 加密算法 而是 摘要算法。<br>无论是多长的输入，MD5 都会输出长度为 128bits 的一个串 (通常用 16 进制 表示为 32 个字符)。</p><h4 id="SHA1"><a href="#SHA1" class="headerlink" title="SHA1"></a>SHA1</h4><p>SHA1 是和 MD5 一样流行的 消息摘要算法，然而 SHA1 比 MD5 的 安全性更强。<br>对于长度小于 2 ^ 64 位的消息，SHA1 会产生一个 160 位的 消息摘要。<br>基于 MD5、SHA1 的信息摘要特性以及 不可逆 (一般而言)，可以被应用在检查 文件完整性 以及 数字签名 等场景。</p><h4 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h4><p>HMAC 是密钥相关的 哈希运算消息认证码（Hash-based Message Authentication Code），HMAC 运算利用 哈希算法 (MD5、SHA1 等)，以 一个密钥 和 一个消息 为输入，生成一个 消息摘要 作为 输出。<br>HMAC 发送方 和 接收方 都有的 key 进行计算，而没有这把 key 的第三方，则是 无法计算 出正确的 散列值的，这样就可以 防止数据被篡改。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试结论：HMAC 算法实例在 多线程环境 下是 不安全的。但是需要在 多线程访问 时，进行同步的辅助类，使用 ThreadLocal 为 每个线程缓存 一个实例可以避免进行锁操作。</span><br></pre></td></tr></table></figure><h4 id="AES-x2F-DES-x2F-3DES算法"><a href="#AES-x2F-DES-x2F-3DES算法" class="headerlink" title="AES&#x2F;DES&#x2F;3DES算法"></a>AES&#x2F;DES&#x2F;3DES算法</h4><p>AES、DES、3DES 都是 对称 的 块加密算法，加解密 的过程是 可逆的。<br>常用的有 AES128、AES192、AES256 (默认安装的 JDK 尚不支持 AES256，需要安装对应的 jce 补丁进行升级 jce1.7，jce1.8)。</p><h4 id="RSA算法"><a href="#RSA算法" class="headerlink" title="RSA算法"></a>RSA算法</h4><p>RSA 加密算法是目前最有影响力的 公钥加密算法，并且被普遍认为是目前 最优秀的公钥方案 之一。<br>RSA 是第一个能同时用于 加密 和 数字签名 的算法，它能够 抵抗 到目前为止已知的 所有密码攻击，已被 ISO 推荐为公钥数据加密标准。</p>]]></content>
    
    
    <summary type="html">数字签名、信息加密 是前后端开发都经常需要使用到的技术，应用场景包括了用户登入、交易、信息通讯、oauth 等等，不同的应用场景也会需要使用到不同的签名加密算法，或者需要搭配不一样的 签名加密算法 来达到业务目标。这里简单的给大家介绍几种常见的签名加密算法和一些典型场景下的应用。</summary>
    
    
    
    
    <category term="加密算法" scheme="https://ayou129.github.io/blog/tags/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分布式锁</title>
    <link href="https://ayou129.github.io/blog/p/f3599f9f/"/>
    <id>https://ayou129.github.io/blog/p/f3599f9f/</id>
    <published>2021-12-05T14:23:29.000Z</published>
    <updated>2022-10-02T01:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>分布式锁，即分布式系统中的锁，目的是为了解决 分布式系统中控制共享资源访问 的问题。<br><br>以下是我的个人理解…</p><span id="more"></span><h2 id="分布式锁应该具备哪些条件："><a href="#分布式锁应该具备哪些条件：" class="headerlink" title="分布式锁应该具备哪些条件："></a>分布式锁应该具备哪些条件：</h2><ul><li>分布式系统环境下，一个方法在同一时间只能被一个机器的一个线程执行</li><li>高可用的获取锁与释放锁</li><li>高性能的获取锁与释放锁</li><li>具备可重入特性（可理解为重新进入，由多于一个任务并发使用，而不必担心数据错误）</li><li>具备锁失效机制，即自动解锁，防止死锁</li><li>具备非阻塞锁特性，即没有获取到锁将直接返回获取锁失败</li></ul><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><h3 id="基于数据库"><a href="#基于数据库" class="headerlink" title="基于数据库"></a>基于数据库</h3><p>核心是 <code>数据库表的唯一索引</code>，唯一索引具有排他性。</p><p>缺点：</p><ul><li>性能有瓶颈。</li></ul><h3 id="基于缓存-redis-x2F-memcached-x2F-tair"><a href="#基于缓存-redis-x2F-memcached-x2F-tair" class="headerlink" title="基于缓存(redis&#x2F;memcached&#x2F;tair)"></a>基于缓存(redis&#x2F;memcached&#x2F;tair)</h3><p>核心是 <code>setnx</code> ，理论上讲使用缓存的方案效率最高。</p><h3 id="基于zookeeper"><a href="#基于zookeeper" class="headerlink" title="基于zookeeper"></a>基于zookeeper</h3><p>核心是创建瞬时节点，节点不能重复创建 保证排他性。一般用于配置中心</p><p>缺点：</p><ul><li>磁盘IO效率低下</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;分布式锁，即分布式系统中的锁，目的是为了解决 分布式系统中控制共享资源访问 的问题。&lt;br&gt;&lt;br&gt;以下是我的个人理解…&lt;/p&gt;</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="分布式" scheme="https://ayou129.github.io/blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="Zookeeper" scheme="https://ayou129.github.io/blog/tags/Zookeeper/"/>
    
    <category term="Mysql" scheme="https://ayou129.github.io/blog/tags/Mysql/"/>
    
    <category term="Redis" scheme="https://ayou129.github.io/blog/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>小提琴</title>
    <link href="https://ayou129.github.io/blog/p/1ckaiojcz/"/>
    <id>https://ayou129.github.io/blog/p/1ckaiojcz/</id>
    <published>2021-05-06T13:38:41.000Z</published>
    <updated>2021-05-06T13:38:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>琴身<br>琴头<br>琴弓<br>面板<br>侧板<br>噻托  </p><p>调旋</p><h2 id="持琴"><a href="#持琴" class="headerlink" title="持琴"></a>持琴</h2><p>下巴靠紧，其他放松，左手不要托盘</p><p>右手臂：<br>大拇指中指相对应，弯曲不要僵硬<br>手臂略低，不能太高也不能太低<br>琴弓和琴要直<br>整体正方形</p>]]></content>
    
    
    <summary type="html">1</summary>
    
    
    
    <category term="1" scheme="https://ayou129.github.io/blog/categories/1/"/>
    
    
  </entry>
  
  <entry>
    <title>CharlesProxy抓包指南</title>
    <link href="https://ayou129.github.io/blog/p/3aa747c4/"/>
    <id>https://ayou129.github.io/blog/p/3aa747c4/</id>
    <published>2021-03-28T14:26:19.000Z</published>
    <updated>2022-07-23T09:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>蒸无语辣，大厂的app抓不到包，解决方案跳转到 <a href="/blog/p/5001f0a0/" title="安卓反编译">安卓反编译</a></p><span id="more"></span><h2 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h2><ol><li>Charles是一个运行在自己计算机中的Web代理（http代理&#x2F;http监视器）</li><li>将web浏览器(或者其他任何的Internet应用程序,手机或物联网设备)配置通过Charles访问Internet</li><li>然后就可以通过Charles看到所有发送和接收的数据</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>官网 <a href="https://charlesproxy.com/" target="_blank" rel="noopener">https://charlesproxy.com</a></p></blockquote><p>…省略步骤</p><h2 id="常见的抓包需求"><a href="#常见的抓包需求" class="headerlink" title="常见的抓包需求"></a>常见的抓包需求</h2><ol><li>数据缺陷分析（分析数据结构，一般分析手机或物联网设备）</li><li>模拟不同网络速度场景（龟龟）</li><li>模拟各种疑难杂症网络场景（各种http错误状态码）</li><li>更改请求数据 或 response数据（BreakPoint）</li><li>将目的源地址替换成其他，或本地（Map）</li><li>压测</li></ol><h2 id="HTTPS代理-安装SSL"><a href="#HTTPS代理-安装SSL" class="headerlink" title="HTTPS代理 安装SSL"></a>HTTPS代理 安装SSL</h2><blockquote><p><a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/" target="_blank" rel="noopener">https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/</a></p></blockquote><p>如果不安装ssl则无法以纯文本的方式查看内容，通俗点讲就是看不到实际内容，而只能看到加密后的乱码<br>步骤详情：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 手机端安装SSL  https:<span class="comment">//www.charlesproxy.com/documentation/using-charles/ssl-certificates/</span></span><br><span class="line">## 这里是 `iphone` 手机的安装步骤，不同机型进入网站按照提示安装</span><br><span class="line"><span class="number">1.</span> iphone打开Safari(重点)浏览器访问 https:<span class="comment">//chls.pro/ssl 并下载SSL证书</span></span><br><span class="line"><span class="number">2.</span> 进入iphone设置-&gt;已下载描述文件-&gt;安装-&gt;输入密码</span><br><span class="line"><span class="number">3.</span> 进入iphone设置-&gt;通用-&gt;关于本机-&gt;证书信任设置-&gt;信任Charles Proxy CA...</span><br><span class="line"></span><br><span class="line">## 这里是 `android` 手机的安装步骤，不同机型进入网站按照提示安装</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CharlesProxy客户端安装SSL证书</span><br><span class="line"><span class="number">1.</span> Help-&gt;SSL Proxying-&gt;Install Charles Root Certificate，安装到系统</span><br><span class="line"><span class="number">2.</span> 默认会弹出钥匙串访问的窗口，要点击CharlesProxy的证书，并且添加信任，没有的话自行打开 Mac-&gt;启动台-&gt;钥匙串访问</span><br><span class="line"><span class="number">3.</span> Proxy-&gt;SSL Proxy Settings-&gt;Enable SSL Proxying 并且添加域名</span><br><span class="line">note:域名处觉得麻烦可以直接填写*</span><br><span class="line"></span><br><span class="line"># Charles默认禁止所有IP连接，连接时，会要求授权，若不想授权，可 Proxy -&gt; Access Control Settgings -&gt; Add <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> 以允许所有IP连接</span><br></pre></td></tr></table></figure><img src="/blog/p/3aa747c4/%E9%92%A5%E5%8C%99%E4%B8%B2%E8%AE%BF%E9%97%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%AF%81%E4%B9%A6%E5%B9%B6%E4%BF%A1%E4%BB%BB.png" class="" title="钥匙串访问中添加证书并信任.png"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A41.png" class="" title="CharlesProxySSl证书安装步骤1"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A42.png" class="" title="CharlesProxySSl证书安装步骤2"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A43.png" class="" title="CharlesProxySSl证书安装步骤3"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A44.png" class="" title="CharlesProxySSl证书安装步骤4"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A45.png" class="" title="CharlesProxySSl证书安装步骤5"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A46.png" class="" title="CharlesProxySSl证书安装步骤6"><img src="/blog/p/3aa747c4/CharlesProxySSl%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A47.png" class="" title="CharlesProxySSl证书安装步骤7"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="网速模拟"><a href="#网速模拟" class="headerlink" title="网速模拟"></a>网速模拟</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Proxy</span>-&gt;Throtte Setting</span><br><span class="line">Bandwidth 带宽</span><br><span class="line">Utilistation 利用百分比</span><br><span class="line">Round-trip 往返延迟</span><br><span class="line">MTU 字节</span><br></pre></td></tr></table></figure><h3 id="Map-remote"><a href="#Map-remote" class="headerlink" title="Map remote"></a>Map remote</h3><p>将指定的网络请求重定向到指定网址<br>一般用于正式环境&#x2F;测试环境的切换<br>使用步骤：抓包之后，选中需要替换的请求，Map remote，修改更改后的指定网址，重新请求即可</p><h3 id="Map-local"><a href="#Map-local" class="headerlink" title="Map local"></a>Map local</h3><blockquote><p>常用操作，一般用在调试服务端代码</p></blockquote><p>将指定的网络请求的结果重定向到本地文件，<br>每个API都可以 <code>Save response</code><br>保存之后 选中一个网络请求 开启Map local选择本地文件路径保存。重新请求即可</p><h3 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h3><p>在 请求 与 返回结果中间通过断点停顿编辑所有相关信息<br>操作步骤：抓包之后，选中需要打断点的请求，重新请求即可</p>]]></content>
    
    
    <summary type="html">针对开发人员测试抓包的使用指南</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>产品设计总结</title>
    <link href="https://ayou129.github.io/blog/p/2252453f/"/>
    <id>https://ayou129.github.io/blog/p/2252453f/</id>
    <published>2021-03-28T11:33:01.000Z</published>
    <updated>2021-04-20T11:33:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户账户-账号-体系"><a href="#用户账户-账号-体系" class="headerlink" title="用户账户(账号)体系"></a>用户账户(账号)体系</h2><h3 id="账号体系的类别"><a href="#账号体系的类别" class="headerlink" title="账号体系的类别"></a>账号体系的类别</h3><p>自定义账号<br>    账号+密码<br>邮箱账号<br>    邮箱+密码<br>手机账号<br>    手机+密码(验证码)<br>第三方平台<br>    用户在第三方平台上将部分的信息授权至我方账号体系当中<br>    微信、QQ、微博<br>        包含的信息：昵称&#x2F;头像&#x2F;地址&#x2F;省市区</p><h3 id="设计账号体系"><a href="#设计账号体系" class="headerlink" title="设计账号体系"></a>设计账号体系</h3><p>相关字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># user</span><br><span class="line">id create_at</span><br><span class="line"></span><br><span class="line"># auth</span><br><span class="line">phone email username</span><br><span class="line"></span><br><span class="line"># user_base_info</span><br><span class="line">nickname //第一次创建账号时，使用自定义或者第三方授权过来的昵称</span><br><span class="line"></span><br><span class="line"># 第三方平台</span><br><span class="line">type 微信 微博 QQ</span><br><span class="line">unionid</span><br><span class="line">openid </span><br></pre></td></tr></table></figure><h3 id="账号体系的核心流程"><a href="#账号体系的核心流程" class="headerlink" title="账号体系的核心流程"></a>账号体系的核心流程</h3><h4 id="注册-和-登陆流程"><a href="#注册-和-登陆流程" class="headerlink" title="注册 和 登陆流程"></a>注册 和 登陆流程</h4><p>一切都是以手机号为准，无论哪个平台注册都需要手机号验证。<br>第三方注册登陆流程<br>    通过第三方授权成功，返回信息至我方登陆API，如果没有账户存在，则要求绑定手机号</p><h4 id="找回密码流程"><a href="#找回密码流程" class="headerlink" title="找回密码流程"></a>找回密码流程</h4><p>首先通过手机号查找，但是由于手机号会发生更换，并且当手机卡停机一段时间后手机运营商会重新投递到市场中，导致其他人能够使用到这个手机号，最后篡改信息<br>所以核心需要用户绑定更为深层次的信息，</p><h4 id="风控流程"><a href="#风控流程" class="headerlink" title="风控流程"></a>风控流程</h4><h2 id="提升用户体验的设计"><a href="#提升用户体验的设计" class="headerlink" title="提升用户体验的设计"></a>提升用户体验的设计</h2><h3 id="手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验"><a href="#手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验" class="headerlink" title="手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验"></a>手机号输入框，自动采用3-4-4的方式留出空格，方便用户随时进行校验</h3><h3 id="精准的错误提示"><a href="#精准的错误提示" class="headerlink" title="精准的错误提示"></a>精准的错误提示</h3><p>例如：</p><ol><li>参数错误</li><li>用户名已存在</li></ol><p>选择更精准的错误提示，提高用户体验</p><h3 id="输入数字的时候，自动打开数字键盘"><a href="#输入数字的时候，自动打开数字键盘" class="headerlink" title="输入数字的时候，自动打开数字键盘"></a>输入数字的时候，自动打开数字键盘</h3><h3 id="有前置条件的按钮可置灰，输入信息后恢复可点击状态"><a href="#有前置条件的按钮可置灰，输入信息后恢复可点击状态" class="headerlink" title="有前置条件的按钮可置灰，输入信息后恢复可点击状态"></a>有前置条件的按钮可置灰，输入信息后恢复可点击状态</h3><p>例如用户正在输入账号密码进行登陆，当输入结果符合要求的时候，按钮恢复可点击的状态<br>可以减少不必要的点击</p><h3 id="密码提供显示-x2F-隐藏按钮"><a href="#密码提供显示-x2F-隐藏按钮" class="headerlink" title="密码提供显示&#x2F;隐藏按钮"></a>密码提供显示&#x2F;隐藏按钮</h3>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mac使用指南</title>
    <link href="https://ayou129.github.io/blog/p/614a2564/"/>
    <id>https://ayou129.github.io/blog/p/614a2564/</id>
    <published>2021-03-24T13:56:53.000Z</published>
    <updated>2022-09-29T01:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>介绍使用Mac以来相关的使用技巧和黑科技🫢。</p><span id="more"></span><h2 id="安装brew"><a href="#安装brew" class="headerlink" title="安装brew"></a>安装brew</h2><blockquote><p><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p></blockquote><p>brew 相关指令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索一个包</span></span><br><span class="line"><span class="keyword">brew </span>search * </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个包</span></span><br><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>* </span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载一个包</span></span><br><span class="line"><span class="keyword">brew </span>uninstall * </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看包的相关信息（可以从中查看安装路径等）</span></span><br><span class="line"><span class="keyword">brew </span>info *</span><br></pre></td></tr></table></figure><h2 id="安装web相关环境"><a href="#安装web相关环境" class="headerlink" title="安装web相关环境"></a>安装web相关环境</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx</span></span><br><span class="line">brew install nginx</span><br><span class="line">brew info nginx <span class="regexp">//</span>查看相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>nginx/<span class="number">1.19</span>.<span class="number">8</span></span><br><span class="line">cp homebrew.mxcl.nginx.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mysql</span></span><br><span class="line">brew install mysql</span><br><span class="line">brew info mysql <span class="regexp">//</span>查看mysql相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/my</span>sql/<span class="number">8.0</span>.<span class="number">23</span>_1</span><br><span class="line">cp homebrew.mxcl.mysql.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">brew install php@<span class="number">7.4</span></span><br><span class="line">brew info php@<span class="number">7.4</span> <span class="regexp">//</span>查看mysql相关信息，拿到安装路径</span><br><span class="line"><span class="regexp">//</span> ps:<span class="variable">$cd</span> <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>php@<span class="number">7.4</span>/<span class="number">7.4</span>.<span class="number">16</span></span><br><span class="line">cp homebrew.mxcl.php@<span class="number">7.4</span>.plist ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.php@<span class="number">7.4</span>.plist</span><br><span class="line"><span class="comment">## 开机自启</span></span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/homebrew.mxcl.php@<span class="number">7.4</span>.plist</span><br><span class="line"></span><br><span class="line">pecl install swoole <span class="comment"># 这里需要注意 swoole扩展开启部分功能需要这么写</span></span><br><span class="line">&gt; ln -s <span class="regexp">/opt/</span>homebrew<span class="regexp">/Cellar/</span>pcre2<span class="regexp">/10.36/i</span>nclude<span class="regexp">/pcre2.h /</span>opt<span class="regexp">/homebrew/</span>Cellar<span class="regexp">/php@7.4/</span><span class="number">7.4</span>.<span class="number">18</span><span class="regexp">/include/</span>php<span class="regexp">/ext/</span>pcre/pcre2.h</span><br><span class="line">&gt; pecl install swoole</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes --with-openssl-dir=<span class="regexp">/opt/</span>homebrew<span class="regexp">/opt/</span>openssl@<span class="number">1.1</span>/</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes</span><br><span class="line">&gt; yes</span><br><span class="line"></span><br><span class="line">pecl install xdebug</span><br><span class="line">pecl install redis</span><br></pre></td></tr></table></figure><h2 id="使用alias添加一个快捷键"><a href="#使用alias添加一个快捷键" class="headerlink" title="使用alias添加一个快捷键"></a>使用alias添加一个快捷键</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 经常会使用到的比如cd一个经常进入的path</span></span><br><span class="line"><span class="built_in">alias</span> cdphpbin=<span class="string">&quot;cd /opt/homebrew/etc/php/7.4/&quot;</span></span><br><span class="line"><span class="built_in">alias</span> cdnginxbin=<span class="string">&quot;cd /opt/homebrew/etc/nginx/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上述的快捷键在重启电脑后会失效，所以要编辑 ~/.zshr</span></span><br><span class="line">vim ~/.zshr</span><br><span class="line">添加相应的指令</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="给shell安装一个主题"><a href="#给shell安装一个主题" class="headerlink" title="给shell安装一个主题"></a>给shell安装一个主题</h2><blockquote><p>ohmyz <a href="https://ohmyz.sh/#install" target="_blank" rel="noopener">https://ohmyz.sh/#install</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">安装后根据提示设置 ~/.zshrc</span></span><br></pre></td></tr></table></figure><img src="/blog/p/614a2564/ohmyz.png" class="" title="ohmyz主题"><h2 id="给shell安装自动补全"><a href="#给shell安装自动补全" class="headerlink" title="给shell安装自动补全"></a>给shell安装自动补全</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh zsh-completions</span><br></pre></td></tr></table></figure><img src="/blog/p/614a2564/shell%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8.png" class="" title="shell自动补全"><h2 id="安装cask"><a href="#安装cask" class="headerlink" title="安装cask"></a>安装cask</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh cask</span><br></pre></td></tr></table></figure><h2 id="安装v2ray"><a href="#安装v2ray" class="headerlink" title="安装v2ray"></a>安装v2ray</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>v2ray</span><br><span class="line"><span class="comment"># 设置config.json即可</span></span><br></pre></td></tr></table></figure><h2 id="安装启动命令"><a href="#安装启动命令" class="headerlink" title="安装启动命令"></a>安装启动命令</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh cask</span><br></pre></td></tr></table></figure><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>已损坏，无法打开，您应该将它移到废纸篓<br><code>sudo xattr -d com.apple.quarantine /Applications/xxx.app</code></p>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="Mac" scheme="https://ayou129.github.io/blog/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>生意经</title>
    <link href="https://ayou129.github.io/blog/p/4f959226/"/>
    <id>https://ayou129.github.io/blog/p/4f959226/</id>
    <published>2021-03-24T00:56:38.000Z</published>
    <updated>2021-03-24T00:59:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何发家"><a href="#如何发家" class="headerlink" title="如何发家"></a>如何发家</h2><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ol><li>创造资源</li><li>对接资源(衍生出平台的概念)</li></ol><p>单纯卖货不行了，必须要“卖货+服务”</p><h3 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 手下人多了，坏消息也就会逐渐增加</span></span><br><span class="line"><span class="bullet">1.</span> 要会分辨，有一些坏消息是底下人误导你</span><br><span class="line"><span class="bullet">2.</span> 要会拍板，比如有个地方坏账了，现在止损是10W，如果不及时处理，可能打官司后影响更差、损失更多</span><br><span class="line"><span class="bullet">3.</span> 要会预判，</span><br><span class="line"><span class="bullet">4.</span> 要会统筹，人财多，各环节都要争夺资源，如何安排以实现盈利目标</span><br><span class="line"><span class="bullet">5.</span> 分配，赚到钱拿多少分配给底下？</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>K8s学习并实践云原生技术</title>
    <link href="https://ayou129.github.io/blog/p/41057579/"/>
    <id>https://ayou129.github.io/blog/p/41057579/</id>
    <published>2021-03-14T16:37:26.000Z</published>
    <updated>2022-11-02T16:26:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>是时机开始学习分布式相关的技能了，这篇是关于K8s相关的内容，慢慢补充…</p><span id="more"></span><h1 id="学习并实践云原生技术"><a href="#学习并实践云原生技术" class="headerlink" title="学习并实践云原生技术"></a>学习并实践云原生技术</h1><p>基础知识：CNCF X Alibaba云与安生技术公开课 -&gt; 第三讲：Kubernetes 核心概念</p><h2 id="1-如何创建k8s集群与应用"><a href="#1-如何创建k8s集群与应用" class="headerlink" title="1. 如何创建k8s集群与应用"></a>1. 如何创建k8s集群与应用</h2><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>方式1：</p><ol><li>minikube 不适用生产环境</li></ol><ul><li>社区版 <code>https://minikube.sigs.k8s.io/</code></li><li>中国版 <code>https://developer.aliyun.com/article/221687</code></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">启动集群：minikube start</span><br><span class="line">插件系统：minikube addons list</span><br><span class="line">Dashboard界面：minikube dashboard</span><br><span class="line">插件集群状态：minikube status</span><br><span class="line"></span><br><span class="line"><span class="comment"># K8S</span></span><br><span class="line">alias <span class="attribute">k</span>=kubectl</span><br><span class="line">kubectl cluster-<span class="built_in">info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启服务</span></span><br><span class="line">k apply -f ./k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除服务</span></span><br><span class="line">k delete -f ./k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有 pod</span></span><br><span class="line">k <span class="built_in">get</span> pods</span><br><span class="line"></span><br><span class="line">minikube ssh</span><br><span class="line">cd build</span><br><span class="line">docker load xxxx</span><br></pre></td></tr></table></figure><ol start="2"><li>阿里云ACK快速创建<br>标准集群</li></ol><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><ol><li><p>应用访问(内外)问题<br>解决方案：设置一个Server</p></li><li><p>应用之间的依赖关系：nginx-&gt;php<br>解决方案：设置参数后，pod不断重启，如果最后还是检测到失败则整体失败</p></li><li><p>应用嗅探其他应用是否存活<br>解决方案：yaml-&gt;server-&gt;containers-&gt;配置 readinessProbe 以及 livenessProbe</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">readinessProbe:</span></span><br><span class="line"><span class="symbol">  tcpSocket:</span></span><br><span class="line"><span class="symbol">    port:</span><span class="number">8888</span></span><br><span class="line"><span class="symbol">  initialDelaySeconds:</span><span class="number">5</span></span><br><span class="line"><span class="symbol">  periodSeconds:</span><span class="number">10</span></span><br><span class="line"><span class="symbol">livenessProbe:</span></span><br><span class="line"><span class="symbol">  tcpSocket:</span></span><br><span class="line"><span class="symbol">    port:</span><span class="number">8888</span></span><br><span class="line"><span class="symbol">  initialDelaySeconds:</span>`<span class="number">5</span></span><br><span class="line"><span class="symbol">  periodSeconds:</span><span class="number">20</span></span><br></pre></td></tr></table></figure></li></ol><p>应用数据存储问题<br>    数据(持久化存储) -<br>    日志</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>一个k8s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/k8s</span><br><span class="line">    /mysql.yaml</span><br><span class="line">        kind:Service <span class="comment">#</span></span><br><span class="line">        kind:PersistentVolumeClaim <span class="comment">#数据持久化</span></span><br><span class="line">        kind:Deployment <span class="comment">#项目配置启动</span></span><br><span class="line">            环境变量</span><br><span class="line">            镜像</span><br><span class="line">            应用嗅探</span><br><span class="line">    /redis.yaml</span><br><span class="line">    /web.yaml</span><br></pre></td></tr></table></figure><h2 id="2-部署到生产环境注意事项"><a href="#2-部署到生产环境注意事项" class="headerlink" title="2. 部署到生产环境注意事项"></a>2. 部署到生产环境注意事项</h2><ol><li>生产环境的mysql、redis等数据库不建议放在k8s中，应提前构建实例，并且通过external类型的svc指向对应实例</li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;cat mysql.yaml</span><br><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span>Service</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  lables:</span></span><br><span class="line"><span class="symbol">    app:</span>mysql</span><br><span class="line"><span class="symbol">  name:</span>mysql</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  type:</span> ExternalName</span><br><span class="line"><span class="symbol">  externalName:</span> 实例的host</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="language-bash"><span class="built_in">cat</span> web.yaml</span></span><br><span class="line">这里修改的是mysql的具体详情</span><br></pre></td></tr></table></figure><ol start="2"><li><p>应用的部署应该与之前保持一致<br><code>k apply -f https://raw.githubusercontent.com/wonderflow/gin-vue-admin/master/k8s/web-server.yaml</code></p></li><li><p>业务高峰期 pod压力大 nod压力就回答 会判定QoS，导致pod会被重启，也就是某个核心业务被重启</p><blockquote><p>我们的目的是提高资源利用率，流量大后会导致该问题</p></blockquote></li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">resources:</span></span><br><span class="line"><span class="symbol">  requests:</span></span><br><span class="line"><span class="symbol">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">    memory:</span> <span class="number">1</span>Gi</span><br><span class="line"><span class="symbol">  limits:</span></span><br><span class="line"><span class="symbol">    cpu:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">    memory:</span> <span class="number">1</span>Gi</span><br></pre></td></tr></table></figure><p>建议requests &#x3D; limits</p><ol start="4"><li>上下线要变得更优雅一些<br>上线</li></ol><ul><li><p>linveness探针 例如：开始时间 靠后一些 容错率提高</p></li><li><p>readiness探针 例如：<br>检查到pod失效，会自动找到pod对应在service的endpoint列表中拆除，让pod下线，尽量严格一些</p></li></ul><p>下线</p><ul><li><p>服务端负载均衡</p></li><li><p>客户端负载均衡</p></li></ul><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81.jpg" class="" title="应用-优雅上下线核心代码.jpg"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.png" class="" title="应用-优雅上下线.png"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.jpg" class="" title="应用-优雅上下线.jpg"><img src="/blog/p/41057579/%E5%BA%94%E7%94%A8-%E9%9D%9E%E4%BC%98%E9%9B%85%E4%B8%8A%E4%B8%8B%E7%BA%BF.jpg" class="" title="应用-非优雅上下线.jpg"><ol start="5"><li>集群级别的生产<br>微服务体系<br>日志体系<br>监控体系<br>安全体系<br>弹性体系</li></ol><h2 id="3-k8s监控与日志"><a href="#3-k8s监控与日志" class="headerlink" title="3. k8s监控与日志"></a>3. k8s监控与日志</h2><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><h4 id="如何选型"><a href="#如何选型" class="headerlink" title="如何选型"></a>如何选型</h4><ul><li><p>传统架构</p><ul><li>资源监控</li><li>应用监控</li></ul></li><li><p>容器架构</p><ul><li>资源监控</li><li>管控系统监控</li><li>微服务拓扑监控</li><li>中间件系统监控</li><li>应用监控</li></ul></li></ul><h4 id="采集的方式动态化了，应该如何使用"><a href="#采集的方式动态化了，应该如何使用" class="headerlink" title="采集的方式动态化了，应该如何使用"></a>采集的方式动态化了，应该如何使用</h4><ul><li><p>传统架构：</p><ul><li>配置静态采集对象</li><li>正向拓扑关系配置</li></ul></li><li><p>容器架构</p><ul><li>容器发现动态采集</li><li>反向拓扑关系耦合</li></ul></li></ul><h4 id="可观测能力整合了应该如何运维"><a href="#可观测能力整合了应该如何运维" class="headerlink" title="可观测能力整合了应该如何运维"></a>可观测能力整合了应该如何运维</h4><ul><li><p>传统架构</p><ul><li>报警 运维 报警消除</li></ul></li><li><p>容器架构</p><ul><li>报警 自愈 报警消除 复盘</li><li>报警 自愈失败 运维 报警消除</li></ul></li></ul><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul><li><p>日志监控方式 <code>https://developer.aliyun.com/lesson_2174_21488#_21488</code></p><ul><li>资源监控：CPU、内存、网络 以数值 百分比为单位进行统计</li><li>性能监控：应用内部监控，通常是通过勾子在虚拟机层、字节码执行回调，获取更深层次的监控指标</li><li>安全监控：越权管理、安全漏洞扫描</li><li>事件监控：K8s中的口岸空方式，补充未监控到的内容</li></ul></li><li><p>监控接口标准化</p><ul><li>Resource Metrics K8s内置消费链路，无法自定义监控</li><li>Custom Metrics Prometheus 提供资源监控和自定义监控</li><li>External Metrics 云厂商(Aliyun)提供监控指标</li></ul></li><li><p>日志分类</p><ul><li>主机内核日志：网络栈、驱动、文件系统异常</li><li>Runtime：比如Docker运行日志</li><li>核心组件日志：APIServer用来审计，Scheduler日志可以诊断调度，etcd可以查看存储状态，Ingress日志可以分析接入层流量</li><li>部署应用的日志：分析查看业务层的状态，诊断异常</li></ul></li><li><p>日志采集方式</p><ul><li>挂载宿主机采集：将日志目录挂载出来，采集器自动采集</li><li>标准输入输出采集(推荐)：主动提交采集</li><li>Sidecar采集：将采集器注入到pod，一般用于安全或者隔离级别很高的应用</li></ul></li><li><p>核心：</p><ul><li><p>减少出现的问题</p><ol><li>集群组件尽量精简，减少全局组件</li><li>应用配置合理的request、limit 超卖比，高并发请求下可能会导致业务pod被重启</li><li>在线业务配置Readiness、Liveness，因为会导致k8s操作时，pod不可用</li></ol></li><li><p>建立有梯度的管理体系，事件监控最适合容器</p><ol><li>最上层：APM监控</li><li>中层：日志、事件孔安静</li><li>最下层：资源监控</li></ol></li><li><p>标准化的问题如何解决</p><ol><li>资源、容量的问题配置HPA或者资源弹性</li><li>常见的问题固化为自愈脚本、文档、手册</li></ol></li></ul></li></ul><h2 id="4-k8s弹性伸缩"><a href="#4-k8s弹性伸缩" class="headerlink" title="4. k8s弹性伸缩"></a>4. k8s弹性伸缩</h2><h3 id="调度层伸缩"><a href="#调度层伸缩" class="headerlink" title="调度层伸缩"></a>调度层伸缩</h3><img src="/blog/p/41057579/%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%E7%9A%84%E6%9C%AC%E8%B4%A8-%E5%AE%B9%E9%87%8F%E4%B8%8E%E6%88%90%E6%9C%AC.jpg" class="" title="弹性伸缩的本质-容量与成本.jpg"><img src="/blog/p/41057579/%E8%B0%83%E5%BA%A6%E4%B8%8E%E8%B5%84%E6%BA%90%E8%A7%A3%E8%80%A6%E7%9A%84%E4%B8%A4%E5%B1%82%E6%9E%B6%E6%9E%84.jpg" class="" title="调度与资源解耦的两层架构.jpg"><p>容器水平伸缩(HPA)是k8s常用的弹性伸缩方式，使用注意事项<br>HPA根据统计数据指标进行扩容</p><img src="/blog/p/41057579/%E5%AE%B9%E5%99%A8%E6%B0%B4%E5%B9%B3%E4%BC%B8%E7%BC%A9HPA.jpg" class="" title="容器水平伸缩HPA.jpg"><ol><li>Request的合理设置，建议Request&lt;&#x3D;limit</li><li>弹性指标的合理选择，指标一般有 CPU、Memory、QPS，要根据业务场景去选择</li><li>业务状态的弹性支持</li></ol><p>容器定时水平伸缩(CronHPA) <code>https://github.com/AliyunContainerService/kubernetes-cronhpa-controller</code><br>后台统计出整天或者某个节假日的请求数量分布图时，可以定时伸缩</p><img src="/blog/p/41057579/%E5%AE%B9%E5%99%A8%E5%AE%9A%E6%97%B6%E6%B0%B4%E5%B9%B3%E4%BC%B8%E7%BC%A9CronHPA.jpg" class="" title="容器定时水平伸缩CronHPA.jpg"><h3 id="资源型伸缩"><a href="#资源型伸缩" class="headerlink" title="资源型伸缩"></a>资源型伸缩</h3><p>无服务器弹性伸缩 Virtual-node</p><img src="/blog/p/41057579/%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%9E%8B%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9.jpg" class="" title="无服务型弹性伸缩.jpg"><ul><li><p>1.0版本虚拟化出一个node也就是服务器，进行快速伸缩，普通的Ecs服务器首次上项目的时候用<br>问题：缩的时候检测不到虚拟的，所以可能会有问题</p></li><li><p>2.0版本<br>无服务器弹性伸缩场景介绍：</p></li></ul><ol><li>在线业务，存在资源利用率的波峰波谷、徒增流量毛刺的场景：网站、API、机器学习推理、大数据流式处理等</li><li>离线计算，Spark、机器学习训练、多媒体转码</li><li>定时任务，运行频度不高但是资源需求在容量规划之外，可以通过弹性伸缩降低容量管理的复杂度：离线定时ETL、数据分析与报表</li><li>特殊场景，对稳定性有极高的要求：异地多活弹性、混合云弹性</li></ol><h2 id="k8s"><a href="#k8s" class="headerlink" title="k8s"></a>k8s</h2><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 pod 环境 (beta/prod/dev)</span></span><br><span class="line">kubectl label nginx1 <span class="attribute">env</span>=dev --overwrite(是否覆盖)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉 label 中的值，增加-即可</span></span><br><span class="line">kubectl label pods tie-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选查询 lables</span></span><br><span class="line">kubectl <span class="built_in">get</span> pods --show-labels -l <span class="attribute">test1</span>=1,test2=2</span><br><span class="line">kubectl <span class="built_in">get</span> pods --show-labels -l env <span class="keyword">in</span> (test1,test2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给 pod 增加非标志性信息</span></span><br><span class="line">kubectl annotate pods pod名称 <span class="attribute">key</span>=<span class="string">&#x27;value&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="服务编排-参数详解"><a href="#服务编排-参数详解" class="headerlink" title="服务编排 参数详解"></a>服务编排 参数详解</h2><p>selector 查询资源<br>pod<br>层级<br>环境</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">资源标签 <span class="built_in">labels</span></span><br><span class="line">pod</span><br><span class="line">    environment: production</span><br><span class="line">    release: stable</span><br><span class="line">    app.k8s.io.version: <span class="number">5.1</span><span class="number">.1</span></span><br><span class="line">node</span><br><span class="line">    www.xxx.<span class="built_in">beta</span>.<span class="built_in">domain</span>/<span class="built_in">region</span>: cn-hangzhou</span><br><span class="line">annotations </span><br><span class="line">    存储资源的非标志性信息</span><br><span class="line">        <span class="built_in">domain</span>/<span class="built_in">domain</span>.cert_id: <span class="string">&quot;asdas,123=&quot;</span></span><br><span class="line">    拓展 资源的 spec/<span class="built_in">status</span></span><br><span class="line">ownerReference</span><br><span class="line">    所有者 pod</span><br></pre></td></tr></table></figure><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="控制循环例子-扩容-ReplicaSet"><a href="#控制循环例子-扩容-ReplicaSet" class="headerlink" title="控制循环例子-扩容(ReplicaSet)"></a>控制循环例子-扩容(ReplicaSet)</h3><p>ReplicaSet -&gt; selector 选择 pod，然后进行操作<br>replicas: 数量<br>扩容逻辑：</p><ol><li>首先处理 更新事件</li><li>对比新旧文件之后，追加处理一个增加 pod 的事件，并且更新旧文件</li></ol><h3 id="使用k8s"><a href="#使用k8s" class="headerlink" title="使用k8s"></a>使用k8s</h3><ol><li>创建集群部署应用</li></ol>]]></content>
    
    
    <summary type="html">K8s学习并实践云原生技术</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="分布式" scheme="https://ayou129.github.io/blog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>挖矿</title>
    <link href="https://ayou129.github.io/blog/p/c9a57581/"/>
    <id>https://ayou129.github.io/blog/p/c9a57581/</id>
    <published>2021-03-14T16:37:26.000Z</published>
    <updated>2021-05-15T10:20:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>家里有台无用的高配台式电脑，刚看到新闻比特币已经涨到6w&#x2F;个，好奇驱动，让我把这台windows利用起来，纯粹兴趣</p><span id="more"></span><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><p>虚拟币<br>    比特币 BTH<br>    以太坊 ETH</p><p>电子钱包</p><p>挖矿软件<br>    HIVE OS<br>    轻松矿工，抽水严重<br>    选用开源的挖矿软件 lolMiner</p><p>挖矿算力来源：GPU(显卡)<br>    首选RTX3060Ti 或3070<br>    次选3080&#x2F;3090，<br>矿池选择大的</p><p>挖矿计算器<br>    <a href="https://www.whattomine.com/" target="_blank" rel="noopener">https://www.whattomine.com</a></p><p>BTC <code>https://btc.com/</code><br>F2pool <code>https://www.f2pool.com/user/worker </code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#URL</span>:https:<span class="comment">//www.bminer.me/zh/</span></span><br><span class="line">wget https:<span class="comment">//www.bminercontent.com/releases/bminer-v16.4.5-53c7f21-amd64.tar.xz</span></span><br><span class="line">tar -zxvf bminer-v16.<span class="number">4.5</span>-<span class="number">53</span>c7f21-amd64<span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line">cd bminer-v16.<span class="number">4.5</span>-<span class="number">53</span>c7f21</span><br><span class="line">vim mine_grin29<span class="selector-class">.sh</span></span><br><span class="line">./bminer -uri ethstratum:<span class="comment">//lee129.001:x@btc.f2pool.com:1314 -api 127.0.0.1:1880 </span></span><br><span class="line">bash mine_grin29.sh</span><br></pre></td></tr></table></figure><h2 id="比特币-点对点电子现金系统"><a href="#比特币-点对点电子现金系统" class="headerlink" title="比特币-点对点电子现金系统"></a>比特币-点对点电子现金系统</h2><p>白皮书 <code>https://wenku.baidu.com/view/c2070d7d657d27284b73f242336c1eb91a3733b0.html?rec_flag=default</code></p><p>传统交易系统：支付者-&gt;金融机构-&gt;接收者|基于信用｜第三方机构随时能够介入并处理|增加交易成本，限制交易规模(小额交易等)<br>新型交易系统：支付者-&gt;接收者|基于密码学｜点对点，属于不可逆支付|会有双重支付的问题</p><p>问题：双重交易<br>解决方案：网络通过随机散列对所有的交易都加上时间戳，作为一个在不断延伸的链条当中的一个块(交易记录)<br>区块中的交易信息如果被证工作量证明，则该区块下的所有交易无法被更改，除非发生系统攻击(完成相同的工作量证明)，下文会介绍相关内容</p><p>基本概念：</p><p>火币是交易所，但是只是平台方，买方卖方均是个人</p><p>区块链底层技术 <a href="https://www.chainnode.com/doc/5068" target="_blank" rel="noopener">https://www.chainnode.com/doc/5068</a><br>    出块时长<br>        采用HPoS共识机制，具有交易成本低、交易延时低、交易并发高等特点； 支持最大的验证人节点数量是 21个。<br>    共识机制<br>    智能合约<br>    密码技术<br>    多链融合<br>        可通过资产跨链桥，将ETH、BTC、稳定币等资产映射到Heco，实现方式为在源链上锁定一定数量的资产后在Heco生成对应数量的Token。 Heco鼓励社区开发者提供更多去中心化的跨链解决方案。</p><p>电子货币：数字签名<br>    当前所有者对<br>        前一次交易<br>        下一位拥有者的公钥<br>        上两个参数加起来 签署一个随机散列的数字签名，添加到电子货币的末尾<br>    发送给下一位拥有者<br>    下一位拥有者<br>        比对签名</p><p>货币交易的方案：<br>    所有交易必须被公开宣布<br>    整个系统中所有的参与者，都有唯一公认的历史交易序列(之前有权威性的交易历史，可供查询)<br>    收款人需要确保在交易期间绝大多数的节点都认为该交易是首次出现的</p><p>时间戳服务器</p><pre><code>              加上时间戳           加上时间戳          加上时间戳</code></pre><p>正常交易的链条：交易1————-&gt;交易2————-&gt;交易3————-&gt;交易n(越往后，工作量证明)<br>恶意攻击，则必须重新从头计算到尾，但是如果正常链条一直在无限传播，并且CPU计算能力相同，恶意攻击的计算出来链条无法超过正常的链条，那就绝对安全<br><code>只要诚实的节点所控制的计算能力的总和，大于有合作关系的(cooperating)攻击者的计算能力的总和，该系统就是安全的。</code></p><p>规定：<br>    每一枚电子货币，都将自己的数字签名放在电子货币的末尾<br>    数字签名：每一位所有者上一次的交易 和 下一位拥有者的公钥 签署一个随机散列的数字签名</p><p>每个人都有公钥</p><p>A的公钥<br>上一个交易<br>B的公钥</p><p>比特币系统由单向列表组成的区块组成<br>    第一个区块叫创世纪块(genesis block)<br>    区块与区块之间由哈希链表关联(哈希指针hash pointers)<br>    每一个区块大小上限1MB，2000-3000笔交易<br>    每一个区块包含区块头和区块体<br>        区块头：<br>            自己区块的hash值<br>            上一个区块的hash值<br>            区块产生的时间戳<br>            难度(防止飞快发展的计算机算力提高减少区块生成的时间，这是个动态配置参数，来保证无论何种情况下比特币系统区块的生成时间始终保持在10分钟一个)<br>            …<br>            默克尔根(所有交易的最终hash值，目的就是为了证明)<br>        区块体：<br>            最下层是交易<br>            上层及以上都是hash值，层层的hash值，最上面是最终hash值</p><p>在比特币区块链网络中有很多节点，包括计算机、手机、矿机、服务器等等。在所有节点中分为：全节点和轻节点。<br>全节点（full node）：保存了区块的所有内容，区块头和区块体。<br>轻节点（light node）：只保存了区块头，比如手机中的比特币钱包。</p><p>由于轻节点中没有存交易具体信息，那有这样一个场景该怎么办呢：<br>zarten1用户转账给zarten2轻节点用户，zarten2如何知道此交易写入区块链了？或者说zarten1如何向zarten2证明交易已经写入区块链了？<br>为了解决上面问题，轻节点向全节点请求这个交易（上图中黄色标记的交易），全节点只需提供这个交易相关的哈希值（上图中红色标记的哈希值）即可。轻节点在本地根据这个交易的merkle proof计算出最后的根哈希值，然后对比本地区块头中的根哈希值是否一样，若一样，则证明此交易写入了区块链中。</p><p>若要证明某个交易不在区块链中，怎么办呢？<br>虽然比特币区块链中没有这个需求，但我们可以思考下如何实现这样需求。<br>第一种方案：全节点将整个区块所有交易信息发给轻节点，这样可以证明某个交易不在区块中，但这是非常不高效的方法且比较笨的方法。<br>第二种方案：思路还是根据merkle proof计算根哈希值，轻节点向全节点对这个交易发出请求，全节点为了证明此交易不在区块链中。</p><p>全节点只需以下这样做即可：<br>对区块中所有交易的哈希值进行排序，然后计算要证明的交易的哈希值，根据二分查找法来确定这个交易哈希值的位置，再将此位置相邻的2个交易merkle proof发送给轻节点。<br>轻节点只需以下这样做即可：<br>轻节点收到merkle proof后，根据merkle proof计算得到最后的根哈希值（root hash），若计算得到的根哈希值跟本地的区块头中的根哈希值比较一样，则证明此交易一定不在区块链中，因为如果在的话，最后计算出来的根哈希值比较必然是不一样的。</p><p>比特币：去中心化(说白了就是没有银行，支付方和接收方，也就是点对点的交易)，多人共同维护的点对点数字现金系统，比特币总量固定2100w个，特点是抗通货膨胀<br>法币：能够看到实物的货币<br>稳定币：具有稳定价值的加密货币，用来当作数字货币世界连接法币世界的媒介，USDT就是其中最出名的 <code>https://baike.baidu.com/item/%E6%B3%B0%E8%BE%BE%E5%B8%81</code><br>公链：就是公有链，而公有链是指全世界任何人都可读取、发送交易且交易能获得有效确认的、也可以参与其中共识过程的区块链。<br>区块链：由多个区块以单链结构组成的链条<br>区块：区块链中的区块<br>正常的交易链条：运行在各大厂商系统中的核心链条，也是最长的链条，基于随机数列的工作量证明<br>攻击者攻击方式：重新计算所有链条中各个区块的工作量，并且超过正常交易链条，需要强大算力<br>pool：cpu计算能力最大的链条<br>nodes：提供计算的节点，一般指所有矿工<br>可以随时离开或加入网络<br>并且将最长的工作量证明链条作为在该节点离线期间发生的交易的证明<br>系统是否安全的评判：诚实的节点所控制的计算机算力的总和 &gt; 攻击者所控制的计算机算力的总和，系统就是安全的<br>注意事项：<br>有关比特币相关的交易，在交易所例如火币平台上提交交易申请成功后，交易所会将该交易发至比特币交易系统，比特币交易不是实时的，每发生一笔比特币交易，在比特币系统当中会将这一笔交易存入分布式系统内存池，连同池内的其他交易等待算力证明，证明完成后交易会被打包进一个区块中，成为区块链当中的一个链节点，同时也更新了该链的长度，成为最新的数据链，最后公开该交易</p><p>职业矿工的入坑逻辑</p><ol><li>大批量购卡</li><li>组建矿机</li><li>假定挖矿过程中，币在交易所中只增不减，然后持续n个月的不停断工作<br> 退出<br> 处理币<br> 处理显卡<br> 超频<br> 设备调频的目的是为了收益最大化，也就是通过调整设备的能效比来优化矿机的收益<br>     以现有的设备整体情况，结合行情得出的设备整体净收益<br>         币池 产出比<br>         币价<br>         电价<br>         设备算力<br> 超频方式：下载官方固件安装，不然风险， 病毒 劫持矿机算力 抽水 设备损坏</li></ol><p>风险<br>    显卡坏</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>介绍比特币——点对点交易系统</li><li>介绍挖矿完整步骤(不深入)</li></ol><div class="tip">虚拟币交易所无论是否受到监管，风险依旧，投机者建议提前查阅相关资料自行判断</div>]]></content>
    
    
    <summary type="html">挖矿</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="区块链" scheme="https://ayou129.github.io/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>解耦之道</title>
    <link href="https://ayou129.github.io/blog/p/ec99c691/"/>
    <id>https://ayou129.github.io/blog/p/ec99c691/</id>
    <published>2021-03-01T05:12:44.000Z</published>
    <updated>2021-03-02T05:12:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是耦合"><a href="#什么是耦合" class="headerlink" title="什么是耦合"></a>什么是耦合</h2><p>指在程序中，模块与模块之间信息与参数依赖的程度</p><h2 id="耦合度的计算方法"><a href="#耦合度的计算方法" class="headerlink" title="耦合度的计算方法"></a>耦合度的计算方法</h2><p>待补充…</p><h2 id="为什么要解耦"><a href="#为什么要解耦" class="headerlink" title="为什么要解耦"></a>为什么要解耦</h2><p>解耦合是为了更好地应对需求变更</p><h2 id="如何解耦"><a href="#如何解耦" class="headerlink" title="如何解耦"></a>如何解耦</h2><h3 id="单一原则"><a href="#单一原则" class="headerlink" title="单一原则"></a>单一原则</h3><ul><li>一个类只负责一项职责</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="依赖倒置原则-面向接口编程"><a href="#依赖倒置原则-面向接口编程" class="headerlink" title="依赖倒置原则(面向接口编程)"></a>依赖倒置原则(面向接口编程)</h3><ul><li>高层模块不应该依赖于低层模块，二者都应该依赖其抽象</li><li>抽象不依赖细节，细节依赖抽象</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$english</span> = <span class="keyword">new</span> English();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$english</span>-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params">CourseInterface <span class="variable">$course</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$course</span>-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 课程抽象接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CourseInterface</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span> <span class="keyword">implements</span> <span class="title">CourseInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$teacher</span> = <span class="keyword">new</span> Teacher();</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$teacher</span>-&gt;teach(<span class="keyword">new</span> English());</span><br></pre></td></tr></table></figure><h3 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h3><ul><li>实现不应该依赖它不需要的接口，一个类对另一个类的依赖应该建立在最小的接口上</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> <span class="keyword">implements</span> <span class="title">Teach</span>,<span class="title">Study</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改变为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Teach</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 教书(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 讲课(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Study</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 听课(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> 写作业(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h3><h3 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h3><h3 id="最少原则（迪米特法则）"><a href="#最少原则（迪米特法则）" class="headerlink" title="最少原则（迪米特法则）"></a>最少原则（迪米特法则）</h3><h3 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h3><ul><li>指对象内部有不同的行为，应用在不同的场景中，并且有不同的实现算法</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$course</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">CourseInterface <span class="variable">$course</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$course</span> = <span class="variable">$course</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;course-&gt;teach();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 课程抽象接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CourseInterface</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">English</span> <span class="keyword">implements</span> <span class="title">CourseInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">teach</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;教英语&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$teacher</span> = <span class="keyword">new</span> Teacher(<span class="keyword">new</span> English());</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$teacher</span>-&gt;teach();</span><br></pre></td></tr></table></figure><h3 id="IOC与DI"><a href="#IOC与DI" class="headerlink" title="IOC与DI"></a>IOC与DI</h3><ul><li>IOC：控制反转，把对象的调用权交给容器，通过容器实现对象的装配和管理</li><li>DI：依赖注入，对象之间的依赖关系有容器在运行期决定，由容器动态的将依赖关系注入到对象中</li><li>DI是对IOC更完善的描述</li></ul><p>IOC容器控制对象，将依赖关系(外部对象)注入进对象<br>反转：获取对象的依赖关系(外部对象)的方式，之前是通过手动引入(耦合度高)，现在是通过容器注入</p>]]></content>
    
    
    <summary type="html">解耦之道</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构与算法</title>
    <link href="https://ayou129.github.io/blog/p/4b0178e0/"/>
    <id>https://ayou129.github.io/blog/p/4b0178e0/</id>
    <published>2020-10-04T14:55:19.000Z</published>
    <updated>2020-12-22T09:58:51.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>O(1) &lt; O(log n) &lt; O(n) &lt; O(n log n) &lt; O(n²) &lt; O(n³) &lt; O(n!) &lt; O(nn)</p></blockquote>]]></content>
    
    
    <summary type="html">暂无描述</summary>
    
    
    
    
    <category term="算法" scheme="https://ayou129.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>electronjs</title>
    <link href="https://ayou129.github.io/blog/p/801262bc/"/>
    <id>https://ayou129.github.io/blog/p/801262bc/</id>
    <published>2020-09-10T11:04:59.000Z</published>
    <updated>2021-12-10T11:04:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载-fiddle"><a href="#下载-fiddle" class="headerlink" title="下载 fiddle"></a>下载 fiddle</h2><blockquote><p><a href="https://www.electronjs.org/fiddle" target="_blank" rel="noopener">https://www.electronjs.org/fiddle</a></p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.npmrc</span><br><span class="line"></span><br><span class="line">增加</span><br><span class="line">ELECTRON_MIRROR=<span class="string">&quot;https://cdn.npm.taobao.org/dist/electron/&quot;</span></span><br><span class="line"></span><br><span class="line">~ sudo ELECTRON_MIRROR=<span class="string">&quot;https://cdn.npm.taobao.org/dist/electron/&quot;</span> npm install -g electron --unsafe-perm=<span class="keyword">true</span> --allow-root</span><br><span class="line"></span><br><span class="line">cmd运行程序</span><br><span class="line">~ sudo <span class="regexp">/Applications/</span>Electron\ Fiddle.app<span class="regexp">/Contents/M</span>acOS/electron-fiddle</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ElementUI工具</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ElementUI工具</title>
    <link href="https://ayou129.github.io/blog/p/801262be/"/>
    <id>https://ayou129.github.io/blog/p/801262be/</id>
    <published>2020-09-10T11:04:59.000Z</published>
    <updated>2020-09-22T11:50:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line">&lt;template lang=<span class="string">&quot;html&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">class</span>=<span class="string">&quot;main-panel&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDialog(&#x27;post&#x27;)&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">title</span>=<span class="string">&quot;编辑&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;xxxxxDiaIsShow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;diaForm&quot;</span> <span class="attr">:append-to-body</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">ref</span>=<span class="string">&quot;xxxxxRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:model</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:rules</span>=<span class="string">&quot;xxxxxRules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label-width</span>=<span class="string">&quot;140px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;车牌号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plate_number&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;15&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.plate_number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">placeholder</span>=<span class="string">&quot;请输入车牌号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">click</span>=<span class="string">&quot;editXXXXX()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span>确认<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDiaIsShow = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-table</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:data</span>=<span class="string">&quot;xxxxxTableData&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">border</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prop</span>=<span class="string">&quot;create_time&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prop</span>=<span class="string">&quot;update_time&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;更新时间&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">fixed</span>=<span class="string">&quot;right&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;100&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">align</span>=<span class="string">&quot;center&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDialog(&#x27;put&#x27;,scope.row)&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteXXXXX(scope.row)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:20px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-pagination</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:current-page</span>=<span class="string">&quot;xxxxxTableDataPaginateCurrentPage&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:page-sizes</span>=<span class="string">&quot;xxxxxTableDataPaginateTotalPageSizes&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:page-size</span>=<span class="string">&quot;xxxxxTableDataPaginateTotalPageSize&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">layout</span>=<span class="string">&quot;total, sizes, prev, pager, next, jumper&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:total</span>=<span class="string">&quot;xxxxxTableDataPaginateTotal&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">size-change</span>=<span class="string">&quot;xxxxxTableDataHandleSizeChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">current-change</span>=<span class="string">&quot;xxxxxTableDataHandleCurrentChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- &lt;span&gt;当前&#123;&#123; xxxxxTableDataPaginateCurrentPage &#125;&#125;页，&lt;/span&gt;</span></span></span><br><span class="line"><span class="comment"><span class="language-xml">                        &lt;span&gt;共&#123;&#123; xxxxxTableDataPaginateLastPage &#125;&#125;页&lt;/span&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxSearchForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableData</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateCurrentPage</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotal</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateLastPage</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotalPageSize</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableDataPaginateTotalPageSizes</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTab</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxEditType</span>: <span class="string">&#x27;post&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxRules</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">mobile_number</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">password</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">required</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxTableDataHandleSizeChange</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 改变每页显示的条数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span> = val</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>(<span class="number">1</span>, <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxTableDataHandleCurrentChange</span>(<span class="params">val</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateCurrentPage</span> = val</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>(val, <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotalPageSize</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXList</span>(<span class="params">page = <span class="number">1</span>, limit = <span class="number">10</span></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>.<span class="property">page</span> = page</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>.<span class="property">limit</span> = limit</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/getXXXXXList&#x27;</span>,<span class="variable language_">this</span>.<span class="property">xxxxxSearchForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateTotal</span> = res.<span class="property">data</span>.<span class="property">total</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateCurrentPage</span> = res.<span class="property">data</span>.<span class="property">current_page</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxTableDataPaginateLastPage</span> = res.<span class="property">data</span>.<span class="property">last_page</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">deleteXXXXX</span>(<span class="params">row</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(row)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;确认删除吗？&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/deleteXXXXX&#x27;</span>, &#123; <span class="attr">id</span>: row.<span class="property">id</span> &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// this.loading = false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: <span class="string">&#x27;已取消删除&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">editXXXXX</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">switch</span> (<span class="variable language_">this</span>.<span class="property">xxxxxEditType</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;post&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;xxxxxRef&#x27;</span>].<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;xxxxx/postXXXXX&#x27;</span>, <span class="variable language_">this</span>.<span class="property">xxxxxForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxForm</span> = &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;put&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;xxxxxRef&#x27;</span>].<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;xxxxx/putXXXXX&#x27;</span>, <span class="variable language_">this</span>.<span class="property">xxxxxForm</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxForm</span> = &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="attr">message</span>: res.<span class="property">msg</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">return</span> <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">xxxxxDialog</span>(<span class="params">type, row</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">xxxxxDiaIsShow</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">switch</span> (type) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;post&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">xxxxxEditType</span> = <span class="string">&#x27;post&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">case</span> <span class="string">&#x27;put&#x27;</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">xxxxxEditType</span> = <span class="string">&#x27;put&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 这里一定要使用nextTick的方式赋值，不然会卡住input</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//   this.$set(this.xxxxxForm, &#x27;id&#x27;, row.id)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">break</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">default</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.main-panel</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a>Dialog</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog v-loading=<span class="string">&quot;loading&quot;</span> title=<span class="string">&quot;xxxxxEditType===&#x27;put&#x27;?&#x27;编辑&#x27;:&#x27;添加&#x27;&quot;</span> :visible.<span class="property">sync</span>=<span class="string">&quot;xxxxxDiaIsShow&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;diaForm&quot;</span> :append-to-body=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">ref</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:model</span>=<span class="string">&quot;xxxxxForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:rules</span>=<span class="string">&quot;xxxxxRules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">label-width</span>=<span class="string">&quot;140px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;车牌号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plate_number&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.plate_number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;请输入车牌号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;司机&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.driver_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;请选择司机&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getDriverRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;item in driverOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;item.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;item.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;归属人/受益人&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.beneficiary_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;归属人/受益人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getBeneficiaryRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;beneficiary in beneficiaryOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;beneficiary.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;beneficiary.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;beneficiary.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;editXXXXX()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span>确认<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;xxxxxDiaIsShow = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line">&lt;/el-dialog&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxEditType</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxRules</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxForm</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">editXXXXX</span>(<span class="params"></span>)&#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h2><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-checkbox-<span class="keyword">group</span> v-model=<span class="string">&quot;coupon_type&quot;</span> @change=<span class="string">&quot;selectCouponType&quot;</span>&gt;</span><br><span class="line">  &lt;el-checkbox</span><br><span class="line">    v-for=<span class="string">&quot;item in coupon_typeAttr&quot;</span></span><br><span class="line">    :<span class="keyword">key</span>=<span class="string">&quot;item.key&quot;</span></span><br><span class="line">    :<span class="keyword">label</span>=<span class="string">&quot;item.value&quot;</span></span><br><span class="line">  &gt;&#123;&#123;coupon_type&#125;&#125;</span><br><span class="line">  &lt;/el-checkbox&gt;</span><br><span class="line">&lt;/el-checkbox-<span class="keyword">group</span>&gt;</span><br><span class="line"></span><br><span class="line">coupon_typeAttr: [</span><br><span class="line">&#123; <span class="keyword">key</span>: 1, value: <span class="string">&#x27;满减&#x27;</span> &#125;,</span><br><span class="line">&#123; <span class="keyword">key</span>: 2, value: <span class="string">&#x27;折扣&#x27;</span> &#125;,</span><br><span class="line">&#123; <span class="keyword">key</span>: 3, value: <span class="string">&#x27;随机减金额&#x27;</span> &#125;</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">selectCouponType(val) &#123;</span><br><span class="line">  this.coupon_type = val</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;兑换优惠券消耗的积分&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;coupon_exchange_integral&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="language-xml"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;15&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="language-xml"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-for</span>=<span class="string">&quot;item in coupon_typeAttr&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;couponForm.coupon_type&quot;</span> <span class="attr">:label</span>=<span class="string">&quot;item.key&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      </span><span class="language-xquery">&#123;&#123;<span class="type">item</span>.<span class="keyword">value</span>&#125;</span><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">coupon_typeAttr: [</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">1</span>, value: <span class="string">&#x27;满减&#x27;</span> &#125;,</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">2</span>, value: <span class="string">&#x27;折扣&#x27;</span> &#125;,</span><br><span class="line">&#123;<span class="built_in"> key</span>: <span class="number">3</span>, value: <span class="string">&#x27;随机减金额&#x27;</span> &#125;</span><br><span class="line">],</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="selected"><a href="#selected" class="headerlink" title="selected"></a>selected</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;归属人/受益人&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;beneficiary_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">v-model</span>=<span class="string">&quot;xxxxxForm.beneficiary_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">filterable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">remote</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">reserve-keyword</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;归属人/受益人&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:remote-method</span>=<span class="string">&quot;getXXXXXRemote&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:loading</span>=<span class="string">&quot;loading&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-for</span>=<span class="string">&quot;xxxxx in xxxxxOptions&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:key</span>=<span class="string">&quot;xxxxx.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:label</span>=<span class="string">&quot;xxxxx.nickname&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:value</span>=<span class="string">&quot;xxxxx.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">loading</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxOptions</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxTableData</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">xxxxxDiaIsShow</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getXXXXXList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXRemote</span>(<span class="params">query</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (query !== <span class="string">&#x27;&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxOptions</span> = <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> item.<span class="property">label</span>.<span class="title function_">toLowerCase</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            .<span class="title function_">indexOf</span>(query.<span class="title function_">toLowerCase</span>()) &gt; -<span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//return item.xxx.indexOf(query) &gt; -1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">xxxxxOptions</span> = <span class="variable language_">this</span>.<span class="property">xxxxxTableData</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getXXXXXList</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;main/getShipCompanyList&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">shipCompanyTableData</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">shipCompanyOptions</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">carRules</span>: &#123;</span><br><span class="line">  <span class="attr">plate_number</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请输入&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">driver_id</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请选择&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">beneficiary_id</span>: [&#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请选择&#x27;</span>,</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="输入后检测内容"><a href="#输入后检测内容" class="headerlink" title="输入后检测内容"></a>输入后检测内容</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-<span class="keyword">form</span>-item <span class="keyword">label</span>=<span class="string">&quot;运单号&quot;</span> <span class="keyword">prop</span>=<span class="string">&quot;sea_waybill_number&quot;</span>&gt;</span><br><span class="line">  &lt;el-<span class="keyword">input</span></span><br><span class="line">    v-model=<span class="string">&quot;xxxxxForm.sea_waybill_number&quot;</span></span><br><span class="line">    <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span></span><br><span class="line">    placeholder=<span class="string">&quot;请输入运单号&quot;</span></span><br><span class="line">    @<span class="keyword">input</span>=<span class="string">&quot;autoSelectShipCompany()&quot;</span></span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/el-<span class="keyword">form</span>-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">  autoSelectShipCompany(a) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(a)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="横向表单-1行2列"><a href="#横向表单-1行2列" class="headerlink" title="横向表单 1行2列"></a>横向表单 1行2列</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">el</span>-row <span class="built_in">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;12&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;12&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">el</span>-row&gt;</span><br></pre></td></tr></table></figure><h2 id="横向表单-1行3列"><a href="#横向表单-1行3列" class="headerlink" title="横向表单 1行3列"></a>横向表单 1行3列</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">el</span>-row <span class="built_in">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">&quot;8&quot;</span>&gt;</span><br><span class="line">    <span class="symbol">&lt;el-form-item&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">el</span>-form-item&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">el</span>-row&gt;</span><br></pre></td></tr></table></figure><h2 id="日期和时间点"><a href="#日期和时间点" class="headerlink" title="日期和时间点"></a>日期和时间点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;预计收/装时间&quot; prop=&quot;estimated_timestamp&quot;&gt;</span><br><span class="line">  &lt;el-col :span=&quot;24&quot;&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;importForm.estimated_timestamp&quot;</span><br><span class="line">      type=&quot;datetime&quot;</span><br><span class="line">      placeholder=&quot;预计收/装时间&quot;</span><br><span class="line">      align=&quot;right&quot;</span><br><span class="line">      :picker-options=&quot;estimatedTimestampPickerOptions&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;el-input</span><br><span class="line">      v-model=&quot;importForm.estimated_timestamp&quot;</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;请填写预计收/装时间&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/el-col&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import moment from &#x27;moment&#x27;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        estimatedTimestampPickerOptions: &#123;</span><br><span class="line">          shortcuts: [&#123;</span><br><span class="line">            text: &#x27;今天&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, new Date());</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            text: &#x27;昨天&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              const date = new Date();</span><br><span class="line">              date.setTime(date.getTime() - 3600 * 1000 * 24);</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, date);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            text: &#x27;一周前&#x27;,</span><br><span class="line">            onClick(picker) &#123;</span><br><span class="line">              const date = new Date();</span><br><span class="line">              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);</span><br><span class="line">              picker.$emit(&#x27;pick&#x27;, date);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">             text: &#x27;明天&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">             text: &#x27;后天&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24 * 2)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">             text: &#x27;一周后&#x27;,</span><br><span class="line">             onClick(picker) &#123;</span><br><span class="line">               const date = new Date()</span><br><span class="line">               date.setTime(date.getTime() + 3600 * 1000 * 24 * 7)</span><br><span class="line">               picker.$emit(&#x27;pick&#x27;, date)</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;, &#123;</span><br><span class="line">              text: &#x27;最近一周&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().week(moment().week()).startOf(&#x27;week&#x27;).valueOf() // 这样是年月日的格式</span><br><span class="line">                const end = moment().week(moment().week()).endOf(&#x27;week&#x27;).valueOf() // 这样是时间戳的格式</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;最近一个月&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().month(moment().month()).startOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                const end = moment().month(moment().month()).endOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;最近三个月&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().month(moment().month() - 2).startOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                const end = moment().month(moment().month()).endOf(&#x27;month&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              text: &#x27;今年&#x27;,</span><br><span class="line">              onClick(picker) &#123;</span><br><span class="line">                const start = moment().year(moment().year()).startOf(&#x27;year&#x27;).valueOf()</span><br><span class="line">                const end = moment().year(moment().year()).endOf(&#x27;year&#x27;).valueOf()</span><br><span class="line">                picker.$emit(&#x27;pick&#x27;, [start, end])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        value1: &#x27;&#x27;,</span><br><span class="line">        value2: &#x27;&#x27;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="confirm"><a href="#confirm" class="headerlink" title="confirm"></a>confirm</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$confirm(<span class="string">&#x27;确认删除吗？&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">  <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="table-勾选-数据回显-https-element-eleme-cn-2-13-zh-CN-component-table"><a href="#table-勾选-数据回显-https-element-eleme-cn-2-13-zh-CN-component-table" class="headerlink" title="table 勾选 数据回显 https://element.eleme.cn/2.13/#/zh-CN/component/table"></a>table 勾选 数据回显 <a href="https://element.eleme.cn/2.13/#/zh-CN/component/table" target="_blank" rel="noopener">https://element.eleme.cn/2.13/#/zh-CN/component/table</a></h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$refs.productTableData.toggleRowSelection(<span class="keyword">this</span>.productTableData[i], <span class="literal">true</span>) <span class="comment">// 回显</span></span><br></pre></td></tr></table></figure><h2 id="js-语法"><a href="#js-语法" class="headerlink" title="js 语法"></a>js 语法</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 传参</span></span><br><span class="line">:<span class="type">on-success</span>=<span class="string">&quot;(res, file) =&gt; handleSkuLogoSuccess(res, file, index)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 数组去重</span></span><br><span class="line">let <span class="keyword">new</span><span class="type">Arr</span> = <span class="keyword">Array</span>.from(<span class="keyword">new</span> <span class="type">Set</span>(arr))</span><br><span class="line"></span><br><span class="line"><span class="meta"># 判断是否是数组</span></span><br><span class="line"><span class="keyword">Array</span>.isArray(arr)</span><br><span class="line"></span><br><span class="line"><span class="meta"># 判断数组中是否存在</span></span><br><span class="line"><span class="keyword">Array</span>.indexOf(<span class="string">&#x27;3&#x27;</span>) !== <span class="number">-1</span> <span class="comment">//说明存在 </span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 删除数组元素</span></span><br><span class="line"><span class="keyword">Array</span>.remove(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="php-语法"><a href="#php-语法" class="headerlink" title="php 语法"></a>php 语法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多维数组排序</span></span><br><span class="line"><span class="variable">$sortArr</span> = [];</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$orderListData</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$orderListItem</span>) &#123;</span><br><span class="line">    <span class="variable">$sortArr</span>[] = <span class="variable">$orderListItem</span>[<span class="string">&#x27;price_total&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">array_multisort(<span class="variable">$sortArr</span>, SORT_ASC, <span class="variable">$orderListData</span>);</span><br></pre></td></tr></table></figure><h2 id="Laravel"><a href="#Laravel" class="headerlink" title="Laravel"></a>Laravel</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Model,修改器</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">parent</span>::boot();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">static</span>::deleting(</span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$model</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$roles</span> = <span class="variable">$model</span>-&gt;roles();</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$roles</span>-&gt;count() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;该权限已被角色绑定，请删除角色中的对应权限再进行操作&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//dd($model-&gt;id,$roles-&gt;count(),$roles-&gt;get()-&gt;toArray());</span></span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model,获取器</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$appends</span> = [<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNameAttribute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Ticket::addExtDesc(<span class="keyword">$this</span>-&gt;attributes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Laravel-admin $form 如果动态修改字段的值，需要提前该字段为hidden</span></span><br><span class="line"><span class="variable">$form</span>-&gt;hidden(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line"><span class="variable">$form</span>-&gt;saving(<span class="function"><span class="keyword">function</span> (<span class="params">Form <span class="variable">$form</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$skulistinfo</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$skulistinfo</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$key</span> == <span class="variable">$form</span>-&gt;sku_listinfo_id) &#123;</span><br><span class="line">            <span class="variable">$form</span>-&gt;name = <span class="variable">$item</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$form</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Encore</span>\<span class="title">Admin</span>\<span class="title">Grid</span>;</span><br><span class="line">Grid::init(<span class="function"><span class="keyword">function</span> (<span class="params">Grid <span class="variable">$grid</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableActions();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disablePagination();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableCreateButton();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableFilter(); </span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableRowSelector();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableColumnSelector();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableTools();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;disableExport();</span><br><span class="line">    <span class="variable">$grid</span>-&gt;actions(<span class="function"><span class="keyword">function</span> (<span class="params">Grid\Displayers\Actions <span class="variable">$actions</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableView();</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableEdit();</span><br><span class="line">        <span class="variable">$actions</span>-&gt;disableDelete();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="此刻芭蕾"><a href="#此刻芭蕾" class="headerlink" title="此刻芭蕾"></a>此刻芭蕾</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br></pre></td><td class="code"><pre><span class="line">        $test = &lt;&lt;&lt;a</span><br><span class="line">已售的座位id</span><br><span class="line"><span class="number">176</span></span><br><span class="line"><span class="number">175</span></span><br><span class="line">...</span><br><span class="line">a<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        $text_arr = explode(PHP_EOL, $test)<span class="comment">;</span></span><br><span class="line">        $text_arr = array_unique($text_arr, SORT_NUMERIC)<span class="comment">;</span></span><br><span class="line">        dd($text_arr)<span class="comment">;</span></span><br><span class="line"><span class="title">        $seat_models = BalletmeTicketSeat::</span>whereIn(&#x27;id&#x27;, $text_arr)</span><br><span class="line">            -&gt;get()<span class="comment">;</span></span><br><span class="line">        $yishou_arr_id = []<span class="comment">;</span></span><br><span class="line">        foreach ($seat_models as $seat_model) &#123;</span><br><span class="line">            $yishou_arr_id [] = $seat_model-&gt;id<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        # 获取最终的出错ids，执行前先执行下方的逻辑</span><br><span class="line">        $error_ids = []<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        $no_ids_txt = file_get_contents(&#x27;$no_ids.txt&#x27;)<span class="comment">;</span></span><br><span class="line">        $no_ids = explode(PHP_EOL, $no_ids_txt)<span class="comment">;</span></span><br><span class="line">        foreach ($no_ids as $no_id) &#123;</span><br><span class="line">            if (in_array($no_id, $yishou_arr_id)) &#123;</span><br><span class="line">                $error_ids[] = $no_id<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(implode(&#x27; &#x27;, $error_ids))<span class="comment">;</span></span><br><span class="line">        dd(<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        # 下面是获取不能坐的座位ids</span><br><span class="line">        $no_ = [</span><br><span class="line">            <span class="number">5</span> =&gt; [</span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">6</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">7</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">8</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">9</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">10</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">11</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">12</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">13</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">14</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">15</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">16</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">17</span> =&gt; [</span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">18</span> =&gt; [</span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">19</span> =&gt; [</span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line">                <span class="number">18</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">20</span> =&gt; [</span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line">                <span class="number">16</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">21</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">22</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">23</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">24</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">25</span> =&gt; [</span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line">                <span class="number">40</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">26</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">27</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">28</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">29</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">30</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line">                <span class="number">34</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">31</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">32</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="number">33</span> =&gt; [</span><br><span class="line"><span class="built_in">                25,</span></span><br><span class="line"><span class="built_in">                27,</span></span><br><span class="line"><span class="built_in">                29,</span></span><br><span class="line"><span class="built_in">                31,</span></span><br><span class="line"><span class="built_in">                33,</span></span><br><span class="line"><span class="built_in">                35,</span></span><br><span class="line"><span class="built_in">                37,</span></span><br><span class="line"><span class="built_in">                39,</span></span><br><span class="line"><span class="built_in">                41,</span></span><br><span class="line"><span class="built_in">                43,</span></span><br><span class="line"><span class="built_in">                1,</span></span><br><span class="line"><span class="built_in">                2,</span></span><br><span class="line"><span class="built_in">                3,</span></span><br><span class="line"><span class="built_in">                4,</span></span><br><span class="line"><span class="built_in">                5,</span></span><br><span class="line"><span class="built_in">                6,</span></span><br><span class="line"><span class="built_in">                7,</span></span><br><span class="line"><span class="built_in">                8,</span></span><br><span class="line"><span class="built_in">                9,</span></span><br><span class="line"><span class="built_in">                10,</span></span><br><span class="line"><span class="built_in">                11,</span></span><br><span class="line"><span class="built_in">                12,</span></span><br><span class="line"><span class="built_in">                13,</span></span><br><span class="line"><span class="built_in">                14,</span></span><br><span class="line"><span class="built_in">                15,</span></span><br><span class="line"><span class="built_in">                16,</span></span><br><span class="line"><span class="built_in">                17,</span></span><br><span class="line"><span class="built_in">                18,</span></span><br><span class="line"><span class="built_in">                19,</span></span><br><span class="line"><span class="built_in">                20,</span></span><br><span class="line"><span class="built_in">                21,</span></span><br><span class="line"><span class="built_in">                22,</span></span><br><span class="line"><span class="built_in">                23,</span></span><br><span class="line"><span class="built_in">                24,</span></span><br><span class="line"><span class="built_in">                26,</span></span><br><span class="line"><span class="built_in">                28,</span></span><br><span class="line"><span class="built_in">                30,</span></span><br><span class="line"><span class="built_in">                32,</span></span><br><span class="line"><span class="built_in">                34,</span></span><br><span class="line"><span class="built_in">                36,</span></span><br><span class="line"><span class="built_in">                38,</span></span><br><span class="line"><span class="built_in">                40,</span></span><br><span class="line"><span class="built_in">                42,</span></span><br><span class="line"><span class="built_in">                44,</span></span><br><span class="line">            ],</span><br><span class="line">        ]</span><br><span class="line">        $no_ids = []<span class="comment">;</span></span><br><span class="line">        foreach ($no_ as $row =&gt; $cols) &#123;</span><br><span class="line">            foreach ($cols as $col) &#123;</span><br><span class="line"><span class="title">                $seat_model = BalletmeTicketSeat::</span>where(&#x27;row&#x27;, $row)</span><br><span class="line">                    -&gt;where(&#x27;col&#x27;, $col)</span><br><span class="line">                    -&gt;select([</span><br><span class="line">                        &#x27;id&#x27;,</span><br><span class="line">                        &#x27;row&#x27;,</span><br><span class="line">                        &#x27;col&#x27;,</span><br><span class="line">                        &#x27;floor&#x27;,</span><br><span class="line">                    ])</span><br><span class="line">                    -&gt;first()<span class="comment">;</span></span><br><span class="line">                if (! $seat_model) &#123;</span><br><span class="line"><span class="title">                    throw new ServiceException(&#x27;row:&#x27; . $row . &#x27; col:</span>&#x27; . $col)<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">                $no_ids[] = $seat_model-&gt;id<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // file_put_contents(&#x27;$no_ids.txt&#x27;, implode(PHP_EOL, $no_ids))<span class="comment">;</span></span><br><span class="line">        // dd($no_ids)<span class="comment">;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">    <span class="variable">$test</span> = <span class="string">&lt;&lt;&lt;a</span></span><br><span class="line"><span class="string">已售的座位id</span></span><br><span class="line"><span class="string">176</span></span><br><span class="line"><span class="string">175</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">a</span>;</span><br><span class="line">    <span class="variable">$text_arr</span> = explode(PHP_EOL, <span class="variable">$test</span>);</span><br><span class="line">    <span class="variable">$text_arr</span> = array_unique(<span class="variable">$text_arr</span>);</span><br><span class="line">    <span class="variable">$seat_models</span> = BalletmeTicketSeat::whereIn(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$text_arr</span>)</span><br><span class="line">        -&gt;get();</span><br><span class="line">    <span class="variable">$yishou_arr_id</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$seat_models</span> <span class="keyword">as</span> <span class="variable">$seat_model</span>) &#123;</span><br><span class="line">        <span class="variable">$yishou_arr_id</span> [] = <span class="variable">$seat_model</span>-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// dd(count($text_arr), count($yishou_arr_id));</span></span><br><span class="line">    <span class="variable">$seat_models_all</span> = BalletmeTicketSeat::select()-&gt;get();</span><br><span class="line">    <span class="comment">// dd(count($seat_models_all) - count($text_arr));</span></span><br><span class="line">    <span class="variable">$un_sale_ids</span> =[];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$seat_models_all</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (! in_array(<span class="variable">$item</span>-&gt;id, <span class="variable">$yishou_arr_id</span>)) &#123;</span><br><span class="line">            <span class="variable">$un_sale_ids</span> [] = <span class="variable">$item</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$un_sale_models</span> = BalletmeTicketSeat::whereIn(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$un_sale_ids</span>)</span><br><span class="line">        -&gt;get();</span><br><span class="line">    <span class="variable">$seat_area_a</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_b</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_c</span> = [];</span><br><span class="line">    <span class="variable">$seat_area_no</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$un_sale_models</span> <span class="keyword">as</span> <span class="variable">$un_sale_model</span>) &#123;</span><br><span class="line">        <span class="comment">// dd($un_sale_model-&gt;toArray());</span></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$un_sale_model</span>-&gt;area_id) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$seat_area_a</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$seat_area_b</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                <span class="variable">$seat_area_c</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="variable">$seat_area_no</span>[] = <span class="string">&#x27;座位ID&#x27;</span> . <span class="variable">$un_sale_model</span>-&gt;id . <span class="string">&#x27; 座位名：&#x27;</span>. <span class="variable">$un_sale_model</span>-&gt;extDesc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_a));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_b));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_c));</span></span><br><span class="line">    <span class="comment">//         printf(implode(PHP_EOL, $seat_area_no));</span></span><br><span class="line">    dd(PHP_EOL, count(<span class="variable">$seat_area_a</span>),count(<span class="variable">$seat_area_b</span>), count(<span class="variable">$seat_area_c</span>), count(<span class="variable">$seat_area_no</span>));</span><br><span class="line">    dd(count(<span class="variable">$un_sale_ids</span>), count(<span class="variable">$un_sale_models</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ElementUI工具</summary>
    
    
    
    <category term="编程语言" scheme="https://ayou129.github.io/blog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>Adobe-Premiere</title>
    <link href="https://ayou129.github.io/blog/p/5a8bff59/"/>
    <id>https://ayou129.github.io/blog/p/5a8bff59/</id>
    <published>2020-08-04T15:48:18.000Z</published>
    <updated>2021-08-09T09:20:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="防止跳帧"><a href="#防止跳帧" class="headerlink" title="防止跳帧"></a>防止跳帧</h3><blockquote><p>一段视频中间删掉n个帧后会发生跳帧</p></blockquote><p>操作：视频过度 -&gt; 溶解 -&gt; MorphCut -&gt; 拖动<br>如果有瑕疵，可以在时间线面板 右键 设置过度持续时间大一些</p><p>红色状态：正在处理<br>绿色：处理成功</p><h3 id="快速对齐音视频"><a href="#快速对齐音视频" class="headerlink" title="快速对齐音视频"></a>快速对齐音视频</h3><p>在项目中选中音频&amp;&amp;视频 右键 -&gt; 合并剪辑</p><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><p>两种标记(M键)</p><ol><li><p>适用于采访类节目(单个项目总时间固定)<br>针对音视频的标记</p></li><li><p>适用于新闻类节目(总时间、单个项目时间固定)<br>针对时间线的标记</p></li></ol><p>标记可以导出，方便沟通吸纳意见<br>操作：文件 -&gt; 导出 -&gt; 标记</p><h3 id="批量只做字幕"><a href="#批量只做字幕" class="headerlink" title="批量只做字幕"></a>批量只做字幕</h3><p>编写字幕txt</p><ol><li>第一行，字幕标题</li><li>后面每一行都是一次字幕</li></ol><p>使用 PS：</p><ol><li>新建</li><li>文档类型：胶片和视频 </li><li>背景：透明</li><li>增加文字 样式自定义(大小、对齐方式、颜色、描边等)</li><li>图像 -&gt; 变量 -&gt; 定义 -&gt; 文本替换：写上字幕标题</li><li>点击下一个</li><li>导入字幕txt文件，编码utf8</li><li>文件 -&gt; 导出 -&gt; 数据组作为文件 -&gt; 选择文件夹 -&gt; 确定</li></ol><p>使用 Premiere：</p><ol><li>导入时，右键选中所有字幕右键，设置持续时间(默认是5秒)</li><li>拖动时间线</li></ol><h3 id="制作-静态-分屏效果"><a href="#制作-静态-分屏效果" class="headerlink" title="制作(静态)分屏效果"></a>制作(静态)分屏效果</h3><p>方式1：裁剪</p><ol><li>缩小所有素材并且摆放</li><li>视频效果 -&gt; 变换 -&gt; 裁剪 视频的边缘，制作黑色边框(分屏效果)</li></ol><p>方式2：遮罩</p><p>分屏效果使用场景</p><ol><li>素材量比较大 但是质量参差不齐</li><li>视频有核心主题(线索) 贯穿始终</li><li>可以做强调效果</li><li>表达同一时间不同空间发生的事情(平行蒙太奇)</li><li>阿卡贝拉 纯人声</li></ol><p>扩展：局部去色</p><h3 id="制作-动态-分屏效果"><a href="#制作-动态-分屏效果" class="headerlink" title="制作(动态)分屏效果"></a>制作(动态)分屏效果</h3><p>选中A视频</p><ol><li>裁剪</li><li>位置</li><li>选方向并打关键帧</li><li>shift + 方向右键 每按一次平移5帧</li></ol><p>前缓出、后缓入</p><h3 id="保留视频单一颜色"><a href="#保留视频单一颜色" class="headerlink" title="保留视频单一颜色"></a>保留视频单一颜色</h3><h3 id="快速删除视频间隙"><a href="#快速删除视频间隙" class="headerlink" title="快速删除视频间隙"></a>快速删除视频间隙</h3><ol><li>序列菜单</li><li>封闭间隙</li></ol><h3 id="制作电影职位表字幕"><a href="#制作电影职位表字幕" class="headerlink" title="制作电影职位表字幕"></a>制作电影职位表字幕</h3><p>方式1：内置功能：滚动字幕<br>方式2：PS制作图片，位移动画功能<br>方式3：</p><ol><li>在节目面板中增加文字工具，把txt文本复制进去</li><li>把文字区域拉满，显示全部的字幕</li><li>水平、垂直居中对齐</li><li>增加滚动效果：基本图形面板 -&gt; 编辑 -&gt; 滚动</li><li>通过文字图层的长度决定</li></ol><h3 id="音频降噪-amp-amp-修复"><a href="#音频降噪-amp-amp-修复" class="headerlink" title="音频降噪 &amp;&amp; 修复"></a>音频降噪 &amp;&amp; 修复</h3><ol><li>选中premiere中的音频</li><li>右键 -&gt; 在 audition 中编辑</li><li>找出有噪音的地方</li><li>效果 -&gt; 降噪&#x2F;恢复 -&gt; 降噪(处理)</li><li>捕捉 噪声样本</li><li>降噪 调低百分比(50% - 60%)</li><li>可以重复降噪 ctrl + R</li></ol><p>消除所有声音：</p><ol><li>选中某段声音</li><li>效果 -&gt; 静音</li></ol><p>声音更大更稳定：</p><ol><li>效果组</li><li>振幅与压限</li><li>语音音量级别</li><li>目标音量级别调至 -15</li><li>电平值 50</li></ol><p>去除部分口水音</p><ol><li>工具栏 -&gt; 污点修复画笔工具</li><li>涂抹即可</li></ol><p>16:9<br>9张长方形的图<br>(320,180) (960,180) (1600,180)<br>(320,540) (960,540) (1600,540)<br>(320,900) (960,900) (1600,900)</p><h2 id="Audition"><a href="#Audition" class="headerlink" title="Audition"></a>Audition</h2><h3 id="屏蔽-b一声"><a href="#屏蔽-b一声" class="headerlink" title="屏蔽 b一声"></a>屏蔽 b一声</h3><p>找到所有覆盖的地方<br>效果<br>生成<br>音调<br>基频880hz<br>形状 三角形&#x2F;锯齿<br>振幅 -50</p><p>注意事项：</p><ol><li>将剪辑置于底层</li><li>淡入淡出</li></ol>]]></content>
    
    
    <summary type="html">暂无</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>二次元</title>
    <link href="https://ayou129.github.io/blog/p/9422d617/"/>
    <id>https://ayou129.github.io/blog/p/9422d617/</id>
    <published>2020-06-20T07:42:12.000Z</published>
    <updated>2021-01-20T07:42:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.japanesewithanime.com/2017/11/gakusei-meaning.html#danshikousei-meaning" target="_blank" rel="noopener">https://www.japanesewithanime.com/2017/11/gakusei-meaning.html#danshikousei-meaning</a></p></blockquote><p>JD 这个词的意思是joshi  daigakusei  女子大学生，日语中的“大学女生”。<br>JK 这个词的意思是joshi  koukousei   女子高中生<br>DK 这个词的意思是danshi koukousei   男子高中生<br>JC 这个词的意思是joshi  chuugakusei 女子中学生，日语中的“中学女孩”。<br>JS 这个词的意思是joshi  shougakusei 女子小学生，日语中的“小学女生”。<br>如果在JS，JC，JK，JD之后添加一个数字。这个数字代表学年。<br>JS1 小学1年级生</p><p>JK制服<br>    款式<br>        水手服<br>            领子分类(从北到南)<br>                札幌襟(北海道附近)：领子是开得最短的，领型有弧度但不及肩宽，没有护胸布。<br>                关东襟(东京附近)：领子开得比札幌襟长，一般是和口袋齐平的，领子是直线型，没有弧度，宽度不及肩宽，护胸布可有可无。<br>                关西襟(大阪、京都、神户附近)：领子开得比关东襟长，但长度不及名古屋襟，一般开到口袋的中间。领子是直线型且没有弧度，其宽度与肩同宽。<br>                        而且关西襟的护胸布（日语：胸当て）很大，不可拆卸。（也有可以拆卸的，但是拆掉之后穿就会露出胸部）。<br>                名古屋襟(名古屋就是关西)：领子开得超长，一般到口袋一下也就是差不多到腰那里，领子是直线型没弧度，宽度与肩同宽。护胸布不可拆卸。<br>            襟线<br>                亲子襟线、变形襟等<br>                一本线领子上只有一条襟线,二本线平行的两条襟线,以此类推.襟线没什么特殊含义,只是从颜色和襟线的数量上区分学校<br>        西装服<br>    时令<br>        夏服<br>        中间服<br>        冬服<br>    配件<br>        背心裙<br>        衬衫<br>        开衫<br>        毛衣<br>        领结<br>            领结 一般是蝴蝶结，金鱼结等，有直接卖的三角巾或者打好的领结<br>            领绳 一般就是各种颜色的绳子系在胸前。颜色款式可以自己搭配。<br>        马甲<br>        裙褶皱</p><p>正统<br>    制服裙<br>        纯色裙(纯色基础款)<br>        格子裙(有格子图案)<br>    a字裙<br>    百褶裙<br>    工字褶裙<br>    上衣<br>        颜色<br>        襟线(肩上的横杠)<br>            无本一本二本三本、蛇腹、母子</p><p>山正(山寨和正品)<br>    版型正统，不是抄袭就是正<br>    正品襟线 不反光<br>    正统JK制服水手服上衣是又宽又短的，裙子也是膝盖左右，襟线不反光，上身非常好看，显得整个人都青春活泼起来，没有风尘感</p><p>裙长在膝盖及膝盖以上 &#x3D; 普通裙(优等)<br>超过膝盖 &#x3D; 不良裙</p>]]></content>
    
    
    <summary type="html">无</summary>
    
    
    
    
    <category term="Diary" scheme="https://ayou129.github.io/blog/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>SSH</title>
    <link href="https://ayou129.github.io/blog/p/782a8ece/"/>
    <id>https://ayou129.github.io/blog/p/782a8ece/</id>
    <published>2020-05-29T16:05:38.000Z</published>
    <updated>2021-01-27T17:05:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h2><ol><li>cd ~&#x2F;.ssh</li><li>ssh-keygen -t rsa -C “guoxinlee129@gmail”</li><li>接着按3个回车</li><li>在c&#x2F;Users&#x2F;Administrator&#x2F;.ssh生成了加密文件，复制id_rsa.pub</li><li>打开github 添加New SSH key</li><li>验证是否连接成功 ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#99;&#111;&#109;">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#98;&#46;&#99;&#111;&#109;</a>(gitee site)</li></ol><h2 id="开启xftp-公钥登录"><a href="#开启xftp-公钥登录" class="headerlink" title="开启xftp 公钥登录"></a>开启xftp 公钥登录</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#生成一个.ssh文件</span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line">/etc/ssh/sshd_config</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">systemctl start sshd.service</span><br><span class="line"></span><br><span class="line">adduser liguoxin</span><br><span class="line">passwd liguoxin</span><br><span class="line">abcABC123</span><br><span class="line">#将某个用户的公钥放进去</span><br><span class="line">vim /home/liguoxin/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=22/tcp --permanent</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#生成指定邮箱的ssh文件</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line">cat /root/.ssh/id_rsa<span class="selector-class">.pub</span></span><br><span class="line"></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.name</span> <span class="string">&quot;Administrator&quot;</span></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.email</span> <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line">git remote add origin git@<span class="number">120.78</span>.<span class="number">175.202</span>:enticementchina/web<span class="selector-class">.git</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">SSH学习</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Gitlab</title>
    <link href="https://ayou129.github.io/blog/p/4adbd460/"/>
    <id>https://ayou129.github.io/blog/p/4adbd460/</id>
    <published>2020-05-23T09:43:29.000Z</published>
    <updated>2022-10-24T09:03:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>用过Gitlab之后就喜欢上了它，但是由于老大的原因🤷🏻，就陆续换成了阿里云云效产品噜，整体上流程更容易管控，但是少了点什么…</p><span id="more"></span><h2 id="安装-最新"><a href="#安装-最新" class="headerlink" title="安装 最新"></a>安装 最新</h2><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ee/yum/el7/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ee/yum/el7/</a></p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> yum install -y curl policycoreutils-python policycoreutils-python-utils openssh-server</span><br><span class="line"></span><br><span class="line"><span class="attribute">cd</span> /usr/src</span><br><span class="line"><span class="attribute">wget</span> https://mirrors.tuna.tsinghua.edu.cn/gitlab-ee/yum/el7/gitlab-ee-<span class="number">13</span>.<span class="number">0</span>.<span class="number">0</span>-ee.<span class="number">0</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">sudo</span> EXTERNAL_URL=<span class="string">&quot;http://47.107.177.200:8888&quot;</span> rpm -i gitlab-ee-<span class="number">13</span>.<span class="number">0</span>.<span class="number">0</span>-ee.<span class="number">0</span>.el7.x86_64.rpm </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><a href="https://about.gitlab.com/install/#centos-7" target="_blank" rel="noopener">https://about.gitlab.com/install/#centos-7</a></p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl enable sshd</span><br><span class="line">sudo systemctl start sshd</span><br><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --add-service=https</span><br><span class="line">sudo systemctl reload firewalld</span><br><span class="line"></span><br><span class="line">sudo yum install postfix</span><br><span class="line"></span><br><span class="line">vim  <span class="regexp">/etc/</span>postfix/main.cf</span><br><span class="line"><span class="comment">#改成：</span></span><br><span class="line">inet_interfaces = all</span><br><span class="line">inet_protocols = all</span><br><span class="line"></span><br><span class="line">service postfix start</span><br><span class="line">sudo systemctl enable postfix</span><br><span class="line"></span><br><span class="line">curl https:<span class="regexp">//</span>packages.gitlab.com<span class="regexp">/install/</span>repositories<span class="regexp">/gitlab/gi</span>tlab-ee/script.rpm.sh | sudo bash</span><br><span class="line"></span><br><span class="line">sudo EXTERNAL_URL=<span class="string">&quot;http://设置的ID+端口&quot;</span> yum install -y gitlab-ee</span><br><span class="line">sudo EXTERNAL_URL=<span class="string">&quot;http://47.107.177.200:8888&quot;</span> yum install -y gitlab-ee</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab<span class="selector-class">.rb</span></span><br><span class="line"></span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl restart</span><br><span class="line"></span><br><span class="line">#增加邮箱</span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_enable&#x27;</span>]</span> = true</span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_address&#x27;</span>]</span> = <span class="string">&quot;smtp.qq.com&quot;</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_port&#x27;</span>]</span> = <span class="number">465</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_user_name&#x27;</span>]</span> = <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_password&#x27;</span>]</span> = <span class="string">&quot;dltkahdadlikjaah&quot;</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_domain&#x27;</span>]</span> = <span class="string">&quot;smtp.qq.com&quot;</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_authentication&#x27;</span>]</span> = <span class="string">&quot;login&quot;</span></span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_enable_starttls_auto&#x27;</span>]</span> = true</span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;smtp_tls&#x27;</span>]</span> = true</span><br><span class="line">gitlab_rails<span class="selector-attr">[<span class="string">&#x27;gitlab_email_from&#x27;</span>]</span> = <span class="string">&#x27;1422476675@qq.com&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="开启xftp-公钥登录"><a href="#开启xftp-公钥登录" class="headerlink" title="开启xftp 公钥登录"></a>开启xftp 公钥登录</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#生成一个.ssh文件</span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line">/etc/ssh/sshd_config</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">systemctl start sshd.service</span><br><span class="line"></span><br><span class="line">adduser liguoxin</span><br><span class="line">passwd liguoxin</span><br><span class="line">abcABC123</span><br><span class="line">#将某个用户的公钥放进去</span><br><span class="line">vim /home/liguoxin/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=22/tcp --permanent</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#生成指定邮箱的ssh文件</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line">cat /root/.ssh/id_rsa<span class="selector-class">.pub</span></span><br><span class="line"></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.name</span> <span class="string">&quot;Administrator&quot;</span></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.email</span> <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line">git remote add origin git@<span class="number">120.78</span>.<span class="number">175.202</span>:enticementchina/web<span class="selector-class">.git</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="添加某个用户到linux服务器"><a href="#添加某个用户到linux服务器" class="headerlink" title="添加某个用户到linux服务器"></a>添加某个用户到linux服务器</h2><p>前置条件：</p><ol><li>公钥</li><li>注册gitlab账号</li></ol><h3 id="1-添加用户，让其能登陆Linux"><a href="#1-添加用户，让其能登陆Linux" class="headerlink" title="1.添加用户，让其能登陆Linux"></a>1.添加用户，让其能登陆Linux</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd username</span><br><span class="line">passwd password</span><br><span class="line">mkdir -p <span class="regexp">/home/u</span>sername/.ssh</span><br><span class="line">vim <span class="regexp">/home/u</span>sername<span class="regexp">/.ssh/</span>authorized_keys</span><br></pre></td></tr></table></figure><h3 id="2-关闭sudoers报告，关闭密码输入"><a href="#2-关闭sudoers报告，关闭密码输入" class="headerlink" title="2.关闭sudoers报告，关闭密码输入"></a>2.关闭sudoers报告，关闭密码输入</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">username <span class="keyword">ALL</span>=(<span class="keyword">ALL</span>) <span class="keyword">ALL</span></span><br></pre></td></tr></table></figure><h3 id="3-gitlab给权限"><a href="#3-gitlab给权限" class="headerlink" title="3.gitlab给权限"></a>3.gitlab给权限</h3><h2 id="Gitlab-Runner"><a href="#Gitlab-Runner" class="headerlink" title="Gitlab Runner"></a>Gitlab Runner</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前置条件</span></span><br><span class="line">安装Docker</span><br><span class="line">安装Gitlab ci runner</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装gitlab ci runner</span></span><br><span class="line">sudo curl -L <span class="params">--output</span> <span class="string">/usr/local/bin/gitlab-runner</span> https:<span class="string">//gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</span> -x socks:<span class="string">//192.168.3.3</span><span class="function">:10808</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授予其执行权限</span></span><br><span class="line">sudo chmod +x <span class="string">/usr/local/bin/gitlab-runner</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个GitLab CI用户</span></span><br><span class="line">sudo useradd <span class="params">--comment</span> &#x27;GitLab Runner&#x27; <span class="params">--create-home</span> gitlab-runner <span class="params">--shell</span> <span class="string">/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装并作为服务运行</span></span><br><span class="line">sudo gitlab-runner install <span class="params">--user=gitlab-runner</span> <span class="params">--working-directory=/home/gitlab-runner</span></span><br><span class="line"></span><br><span class="line">sudo gitlab-runner start</span><br><span class="line"></span><br><span class="line"><span class="comment"># ci-runner 帮助</span></span><br><span class="line">gitlab-ci<span class="params">--multi-runner</span> h</span><br></pre></td></tr></table></figure><h2 id="GitLab-CI-服务器的搭建"><a href="#GitLab-CI-服务器的搭建" class="headerlink" title="GitLab CI 服务器的搭建"></a>GitLab CI 服务器的搭建</h2><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装gitlab ci runner</span></span><br><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh -x socks://192.168.3.3:10808  | sudo bash</span><br><span class="line"><span class="attribute">sudo yum install gitlab-ci-multi-runner -y</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"># 查看是否运行正常</span></span><br><span class="line"><span class="attribute">gitlab-ci-multi-runner status</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"># 设置Docker权限</span></span><br><span class="line"><span class="attribute">&gt; 为了能让gitlab-runner能正确的执行docker命令，需要把gitlab-runner用户添加到docker group里, 然后重启docker和gitlab ci runner</span></span><br><span class="line"><span class="attribute">sudo usermod -aG docker gitlab-runner</span></span><br><span class="line"><span class="attribute">sudo service docker restart</span></span><br><span class="line"><span class="attribute">sudo gitlab-ci-multi-runner restart</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"># ci-runner 注册</span></span><br><span class="line"><span class="attribute">gitlab-ci-multi-runner register</span></span><br><span class="line"><span class="attribute">输入url/token/desc/tags/untagged builds/是否只为当前项目使用</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">输入tags &amp;&amp; 以及shell</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"># ci-runner 列表</span></span><br><span class="line"><span class="attribute">gitlab-ci-multi-runner list</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute"># 使用 ci-runner 前必须创建该文件</span></span><br><span class="line"><span class="attribute">.gitlab-ci.yml</span></span><br><span class="line"><span class="attribute">/**</span></span><br><span class="line"><span class="attribute"># 三个阶段</span></span><br><span class="line"><span class="attribute">stages</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pro</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">dev_pull</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">stage</span><span class="punctuation">:</span> <span class="string">build</span></span><br><span class="line">    <span class="attribute">tags</span><span class="punctuation">: </span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">    <span class="attribute">only</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">    <span class="attribute">script</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">cd /docker/web/project1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">git pull origin dev</span></span><br><span class="line"><span class="attribute">pro_pull</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">stage</span><span class="punctuation">:</span> <span class="string">build</span></span><br><span class="line">    <span class="attribute">tags</span><span class="punctuation">: </span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">    <span class="attribute">only</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">    <span class="attribute">script</span><span class="punctuation">:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">cd /docker/web/project1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">git pull origin master</span></span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Gitlab备份"><a href="#Gitlab备份" class="headerlink" title="Gitlab备份"></a>Gitlab备份</h2><blockquote><p>使用以上命令会在&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;backups目录下创建一个名称类似为1502357536_2017_08_10_9.4.3_gitlab_backup.tar的压缩包, 这个压缩包就是Gitlab整个的完整部分, 其中开头的1502357536_2017_08_10_9.4.3是备份创建的日期</p></blockquote><ul><li>&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb 配置文件须备份</li><li>&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;nginx&#x2F;conf nginx配置文件</li><li>&#x2F;etc&#x2F;postfix&#x2F;main.cfpostfix 邮件配置备份</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.创建备份文件</span></span><br><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份 gitlab.rb and gitlab-secrets.json</span></span><br><span class="line">cd <span class="regexp">/etc/gi</span>tlab</span><br><span class="line">sz gitlab.rb</span><br><span class="line">sz gitlab-secrets.json</span><br><span class="line"></span><br><span class="line"><span class="comment">#新linux安装后,修改 gitlab.rb external_url</span></span><br><span class="line"><span class="comment">##如果有存档，则直接用存档的文件替换安装好的文件</span></span><br><span class="line">rz 选中的gitlab.rb 和 gitlab-secrets.json</span><br><span class="line">chmod <span class="number">600</span> <span class="regexp">/etc/gi</span>tlab/gitlab.rb</span><br><span class="line">chmod <span class="number">600</span> <span class="regexp">/etc/gi</span>tlab/gitlab-secrets.json</span><br><span class="line"></span><br><span class="line"><span class="comment">##没有存档，则需要修改文件内容</span></span><br><span class="line">vim cd <span class="regexp">/etc/gi</span>tlab/gitlab.rb</span><br><span class="line">/external_url</span><br><span class="line"></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_email_from&#x27;</span>] = <span class="string">&#x27;1422476675@qq.com&#x27;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_enable&#x27;</span>] = true</span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_address&#x27;</span>] = <span class="string">&quot;smtp.qq.com&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_port&#x27;</span>] = <span class="number">465</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_user_name&#x27;</span>] = <span class="string">&quot;1422476675@qq.com&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_password&#x27;</span>] = <span class="string">&quot;dltkahdadlikjaah&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_domain&#x27;</span>] = <span class="string">&quot;smtp.qq.com&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_authentication&#x27;</span>] = <span class="string">&quot;login&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_enable_starttls_auto&#x27;</span>] = true</span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_tls&#x27;</span>] = true</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.从备份恢复(需要提前将备份文件拷贝到<span class="regexp">/var/</span>opt<span class="regexp">/gitlab/</span>backups下)</span><br><span class="line">&gt; 文件名：<span class="number">1590655270</span>_2020_05_28_13.<span class="number">0.0</span>-ee_gitlab_backup.tar</span><br><span class="line"><span class="comment">#停止相关数据连接服务</span></span><br><span class="line">sudo gitlab-ctl stop unicorn</span><br><span class="line">sudo gitlab-ctl stop sidekiq</span><br><span class="line"></span><br><span class="line"><span class="comment">#从备份恢复</span></span><br><span class="line">sudo gitlab-rake gitlab:backup:restore BACKUP=<span class="number">1500809139</span> <span class="comment">#从指定时间戳的备份恢复（backups目录下有多个备份文件时）</span></span><br><span class="line">sudo gitlab-rake gitlab:backup:restore <span class="comment">#从默认备份恢复（backups目录下只有一个备份文件时）</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>.启动Gitlab</span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line">sudo gitlab-ctl start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.修改默认备份目录【可选】</span><br><span class="line">vim <span class="regexp">/etc/gi</span>tlab/gitlab.rb</span><br><span class="line">gitlab_rails[<span class="string">&#x27;backup_path&#x27;</span>] = <span class="string">&#x27;/home/backup&#x27;</span></span><br></pre></td></tr></table></figure><img src="/blog/p/4adbd460/gitlab%E5%A4%87%E4%BB%BD%E9%94%99%E8%AF%AF.png" class="" title="gitlab备份错误.png"><blockquote><p>gitlab-secrets.json</p></blockquote><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;gitlab_workhorse&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;secret_token&quot;</span>: <span class="string">&quot;ETLdYBi1muZ1gCJ5BqvPkXCSW9AjXeMUueEZEaDZPWE=&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;gitlab_shell&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;secret_token&quot;</span>: <span class="string">&quot;9cadb3e105f0fc900a90da5cc9d8ab44d7e2389e4b3ec35e5e46f1d6bc61d2a432eda4179577b333295f44273748d8b4ebcb533444f0bebe73643fc8285ec2e1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;gitlab_rails&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;secret_key_base&quot;</span>: <span class="string">&quot;fb142afb8863c8b4a5e0da7cf752bc8751193f956338e005f9f350a425b04693cd8dd3ab6304b83ddd4a52579583e7132a0d8af64880acdafac3712b9fecf504&quot;</span>,</span><br><span class="line">    <span class="string">&quot;db_key_base&quot;</span>: <span class="string">&quot;42f186f6219c01e061f2870d84177d61dfafea0839b6c74c8db8b03588f53b5c3bf4f49c33dedbbf2510f2ae06f3c6d839fb18d703dbc47d523821561a13d7da&quot;</span>,</span><br><span class="line">    <span class="string">&quot;otp_key_base&quot;</span>: <span class="string">&quot;899cb449fc99606065e197a02781dc86a9b8929ca5829147d8bf7e41b72d21cbfacde7217766b03e41f080c4ace75e5da00822ad4cdc99414a8d2ca59e37de94&quot;</span>,</span><br><span class="line">    <span class="string">&quot;openid_connect_signing_key&quot;</span>: <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----<span class="char escape_">\n</span>MIIJJwIBAAKCAgEA4avMWJqz7R63QVV6i9uz2gKFbJkM13B91dRJBQy03+OxbNj8<span class="char escape_">\n</span>PFsXaoWySWeyptiPhemr1n9TZuDUwF1cf0kp1NhwggAkWc2X77LKh4gZds7kwpoF<span class="char escape_">\n</span>wNS2K7pBCwAKcYe/4VLzuyBk9qIjjmSX5QjBnP+vEYbJAjycfTHwkat7zvGD2db3<span class="char escape_">\n</span>hkQpWf9dkpNF8fQo6td/pnbsNHv/TiJXiexGYdQgJVcxtLcs0wl28ox8PYh0oIxw<span class="char escape_">\n</span>IZC60K1NZQ2WDyM4RrDTLj5IVd8OAymdG779Zkb5NaGs1BmAHkkv3QficUaTmbU4<span class="char escape_">\n</span>3GHh1eW4W4u6Zb0T+MrejtbHyWUwEoPG+FdnTcm3/Zen+6Cy/tT4BUJHpnFvxfrf<span class="char escape_">\n</span>v36jzQkjK9Bos4yer9rtnZUh/6X+syUr3RLOLPTlSEGtZ58MaHT74qqVp1j39Ivq<span class="char escape_">\n</span>oGaQrLbMuLJi3X39woKdlJXdTEqS1n6mdb3fbZAqSDQLs9hepCD8Gil0HDM8m/Lk<span class="char escape_">\n</span>Fgc3BV1APkaY5K1c8wF0inPDzNZU0FOEXUPLDrU3V9F/I4VN/6fJmy4z7MVdTpWY<span class="char escape_">\n</span>XbkkBLg0TEoENPyWAyGddXhwp0TfITSyR2dqh2KeR2tk27U0gjhstvzFfFPqiyQK<span class="char escape_">\n</span>4PTF5YL3hBHzAQKz5kiG2VaIKpl9F3d5Hsngz4DW1W2MnpC/vbxRz4R9fT0CAwEA<span class="char escape_">\n</span>AQKCAgAx5gXSFarxJFiK5rapFBRJgUM1RwYy4NnCHSVkK3IXC0ag9b2YLuAXmqZY<span class="char escape_">\n</span>WsiC4eGiT4/CZvbvCYmhW0NnlardOFpwNE3VWYNd6d+kZjCTN54XdW0OPTpmotFc<span class="char escape_">\n</span>+E5W2hhQX0IrPzdz3VgVVSLM7sm4yERSkMYDa5mCiTdTTmKa2IY59bFXi9zE3JU5<span class="char escape_">\n</span>Ir1ViZI+kxXTnfoOhNhn02odwhOx7/CHsSb5eYM8ypv1d6DFDlYTZdopYdIc8CTr<span class="char escape_">\n</span>0jw67qOz5cdcM0NVUXPMuTfW+b0YD1ttQ2luoJDWoYIm0mZ8e4mJdCu1dyMzY48H<span class="char escape_">\n</span>FvdJJayz10+sr8sPOgOOJHsrUFAz1ZhH3CYWI26DmYZvnckfXMYmqGGsAcCXqRKU<span class="char escape_">\n</span>XRpAkXvMeMHRu9TBncDAhwgeR6Xcgi/O1GRM3IQX4eUQrFi1CMKZ3f3QSAYzqD0G<span class="char escape_">\n</span>QipTTZNdUp2dY80GIM6YdpKP792g/BXc7CtTpnNVesxBQ1oHGiUVFGY/Oeyhmbzp<span class="char escape_">\n</span>D7Q9V01OPREljRxV1BsVJKU06jN4s0wEs+9/ay4SObb3pY2JTYf4SiUY+fIQLhyi<span class="char escape_">\n</span>nB92+hUNrOM5XjMLc2T1C2NUkyTQhM+DucGB6nnmKBIv6FOmG3lq1DvLtNb3E/Tl<span class="char escape_">\n</span>UiQsZq5Vx7DOQ16Tv3QCuLqntYg0KHTxFpera6e3E6YExt9qQQKCAQEA/LSa8sJx<span class="char escape_">\n</span>tH+7LuQtqgxVjrFjp99Q1XuqRetxwkih5ztqqhwfclYKeZouWEhVcCuUF0jgpvuq<span class="char escape_">\n</span>HbHflrBav8xIEHR0o+R7oir/ffZ751NZsbk9cR6lnGAwSMMtJJh+oyZ5IsCCOBPS<span class="char escape_">\n</span>1VPVmyDRTWua9VeM8ynuREGQbPnB6hr4diJEXqcFEoiDe5kS+It6XaRs717yDjJK<span class="char escape_">\n</span>FEGK9AfD1SA9tXWcVVTrAXnRJrqEjzgAYjJTwCYruy6joPst7MDDBqm6vAtIE4K9<span class="char escape_">\n</span>SRWCOK9pCyZGNcdEANt/qXFGZKCyVHLUI/ciMJCCYGaOoSxrCyw+Ox7ESVEbe33x<span class="char escape_">\n</span>X84DF4lmjxkxEQKCAQEA5Jz3eUemwyZ5MbE+tT5+RZglnS0M0XXXgr/szEXPQukF<span class="char escape_">\n</span>eg6XWgeyWeBe/6ZdORhbWfCMWKfuWvvNQRE9hIvDfrhGZIFXqosHSzuh4CBBChHW<span class="char escape_">\n</span>YsvnnjxdQEiU2yiCKicWkDxfCwh4fDtxXfQWN7cgaR7btKPrlnFSjcKKe7zrW7LI<span class="char escape_">\n</span>4ZlgmChZec9GJil1U5FxcT9EdomLQch4KyQ8NmCa0Md1cTEbyBf6Akb6MD2n2OjJ<span class="char escape_">\n</span>OjIn6zfGJ372ggFhx34Uk36DTffstcrKwPcyYCYsSw2zwUk1gZ/YbcjCz8tIOEYl<span class="char escape_">\n</span>u+BCAZ36Dy3r0FG+y1q4VVdOyn1NORYAnOJoM2oJbQKCAQAZsCpIHyf71zgp7hwO<span class="char escape_">\n</span>Oy6/UJz2xaar7OREM0jfHQ8IOGwBWtZ/guuRrPClHMVCn8twCoJ7tv12A0zdPpQb<span class="char escape_">\n</span>ByMUOSJaPrGqrIBIR7QUsc5eWJw8UYc4PDbsTpraK35EC3co5zTVin5WHS2LlWxx<span class="char escape_">\n</span>WEzqP7oeRdborVmHGmRx7cfwCk+053mGhsYG3GqnRVZtCnfgZWBpvQb2xCrh36Ay<span class="char escape_">\n</span>nBJpzcjUi8tP3Rg7vZ4YCPNRCBinYbn0TytnA+GJPZcVqE9JKkRrZ1DiiwMvy/T7<span class="char escape_">\n</span>oypj8Ruikq2JhfBH7mXyW7Hg7hBVq3r1XbeF/sPq4NZ6oAgIA+ytQwI0YPbDf74j<span class="char escape_">\n</span>McZhAoIBACGE5kARAmFwnapsi341iHwZv8IY3d1EQvH3w/d7cNUlp1jrFMPthvfo<span class="char escape_">\n</span>juU69kYtzQ8V1u4UyTzr2H9m0LdDasmEqUWJNVpbAhnEx4o+EGsyjFV2AiLQRPfs<span class="char escape_">\n</span>7G5ptRQLISLKx0Ct4ESOzqNw62UF46mmDZ6hviQTv3/rezSDUZrjTtLNEz2cBOp4<span class="char escape_">\n</span>OpfT0lELbS+mkBo1NobRptTkfjOW3HwqEo0jHyiqY0y8LWivUZHbJ83xlqrFRbd6<span class="char escape_">\n</span>xRfwre57DPdHQGdJJ5rL/ghm9irkze+/NZDsc/zqe+g03GNtMcyWdGfkjKkCCaz6<span class="char escape_">\n</span>Fa44nhng1lAk+fd0gcMR98sI4zBOps0CggEAQPzUT54i01Z//pCj1MhkvuMsLVcm<span class="char escape_">\n</span>2vX8XoGHWSLRn7WJwWXtuRhpokUdkPF2p+QJEtzDx4ESKY2I8BNv2J251QCGwvUM<span class="char escape_">\n</span>b9Ahwq//NBRgkdbsUUdQjKiDf/Qxpl4QQlHFOkLcQs00mOFqJeaC9qqtUk/Ym1fG<span class="char escape_">\n</span>junnlL8f74G2XzKFMriNDK4PdAgvNUjP8MVHAx3TzRrTpBaRrQETtspyDRPaSmhp<span class="char escape_">\n</span>Vm5dQfDCi+ho+BTq0fVc7AipxthDmZn1remqNHSdguqbHkZYJMUwQ04ID+xUO6Wd<span class="char escape_">\n</span>PzTHZPjeLv68KQ6P2I/w0Tz5GDUnaBPGdYG4gPhTaejpjKgFZkQOufHORw==<span class="char escape_">\n</span>-----END RSA PRIVATE KEY-----<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ci_jwt_signing_key&quot;</span>: <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----<span class="char escape_">\n</span>MIIJKAIBAAKCAgEAqB+KcC2gj8pnrZhyYwrHgVCtSamvpKreWmQlyIFSVy3bhqZA<span class="char escape_">\n</span>PMyZ46UOQjt//6AEYK3a4kTNd4yojC7YUvjc93C+3eCr+HVfrhGYaBqyWUqSV3dO<span class="char escape_">\n</span>wA5IL6QNkr7G6fseTJNZ3KcAohhxF77F29fdzeg7410YkfDkAO65ZI5Fuh3n2bVX<span class="char escape_">\n</span>TNiterBdUvtD14servdKh8HMtuzw26Yiy+rolu2KaDQgR0A9NmT/nOjjUfulvnhM<span class="char escape_">\n</span>G/pdYXCvKQNSI4bgzUF84mCAO7Wt9wZ9PHGYSsnCo+kiQc46kvcevPIRRmMyc0cF<span class="char escape_">\n</span>aKUtZZ6xp3+veKO95DveJtWRc6T8q7cHmR5zrgw7Hz0mjpejgLNgidSOx69x0W66<span class="char escape_">\n</span>yeguDtEXmrBW4fKEOF1LDcdNZWjeJpidjBxL8JvCkkcJvCtgows4BhiEJrztEyep<span class="char escape_">\n</span>Xx2EWa197CqE4026oj4pBMA9uyASgCO/PDZTwkaZa3Pr8KuvZG5Q768VR2+qE90V<span class="char escape_">\n</span>IOHesB2Vol+vKS7WskMwNzFOpKNw2RIzefgyxCIG0crqmxddBAxdfmzNrGpUWdnd<span class="char escape_">\n</span>x6XWrkd+iuq/2YDU6F6i0eblQeX8/s+xCyeNaBq+TQn7RxETC/5emmjmgV8Ad4uT<span class="char escape_">\n</span>OIBp8gxUtkAM+1sFmyVls+4AG3waFRuZI8k9/iiRhIC+dbUo+3MJJJ6Sh6UCAwEA<span class="char escape_">\n</span>AQKCAgBPmBcfgsp4KNgq3HiTIUBQnZRcwoQQToDUhINKyMbl1SUQO1dAMZFNsA/v<span class="char escape_">\n</span>FWJE8EoCR2zQIMixp5sIOwlZRs6+KteCDeL8zvzMWTIxXyo+kcp0tFxJGrncLCvs<span class="char escape_">\n</span>5HshvSycDkrF5x6qny2zkzLzIOC2ohLwUlvWhBg9xMdqrtyd/5iLfonlLNP8uNCF<span class="char escape_">\n</span>/8Ufn5KYPSVA3mR/2e8x3hatOfqBsdYL/Vmmwef4/5nwfGVao+vVH/jQahiZkBKt<span class="char escape_">\n</span>NRBHF40IP8/TEOLE4f+Jar4RxqnWBm0q0q3QP8WFXI9l3qiFDWOOJfqOj1zNtnLf<span class="char escape_">\n</span>HNlDISo+ioVjF0s0V9DzrsRfHoafBCOQQicjigJkxy79uAWmI3u14BzI3QQ8wN7p<span class="char escape_">\n</span>p15nOE2OL63RvFSAd15BSNwXY4jwvM3+SeGduwlms5a+tFkrr6FngZyUpxExEZ1f<span class="char escape_">\n</span>9Kud2DhitR6V50Jj4I4XC5ijwifJxZlaHu6Cg4X5AWHw/7IUTozdEVkHu8c1SIN4<span class="char escape_">\n</span>iMptbtzCfbzF65SNX8ryPAyS0einncdeEbawvKKa+NNXQMjU2L+EbCb0w0uMBSQf<span class="char escape_">\n</span>7zyeGkf+FV128dyqgu2tbpC+Xta+ynmdEYpl4BPO6KUkhQuoFXnBL7Kop7Py7jnr<span class="char escape_">\n</span>nEMzrzElGVcgkDioQ2XXWH2ZZZdiCmGmDjDPDIBe0q1EaC2TYQKCAQEA2lrSaoQg<span class="char escape_">\n</span>ZQpikDGfihmqwEgsd+YUPwQEhiQvJ6WXpNS5swCe+1IVzBdBPPmaJMytsYRupWyi<span class="char escape_">\n</span>UE1Ie2GkjSNd9GG19bBEHrAgkbK+C9YYkjLM8RIpPskqjQbpZsev8qd8DKaQBqVW<span class="char escape_">\n</span>PxJ5tSLEdU70cKnlwn612P0VVx2B6wCTaLTsNPE9B4ZivEPmLxj6QSFa1ybB++VX<span class="char escape_">\n</span>4xlOAS9y8er/H98/7PyduzpwI7vWFaciKlY2fassW2ujzUooJR8850I3tde+Hk/t<span class="char escape_">\n</span>CF3fnpaWUeiIOXMn6FJUz5UyFQtvhaRn1XBzPtyiO0xyVmBNNKmw67W4YlQvYkKc<span class="char escape_">\n</span>jlNawnzj1m50LQKCAQEAxRu6Vss1dqCNs3fg5rfDJacYlc/GmftVeVC3duc2j8CN<span class="char escape_">\n</span>tn5m00HKqsXRY9BdqQuIRiSq/woGJ9Dg61PmM4gwslLzoAXG0Ir4fUH0gOvYG8qs<span class="char escape_">\n</span>lk4fI7CfK6/RTjOYSZ4Irgu2Ci+QJtKxFooa8QJyxfYCiZgViEzQ5SPJMT1XA/AK<span class="char escape_">\n</span>7gyEhO8elAMoaR2o+UkgCaCfO6dSkqbXJIQGzxn6M2SqA1wtQYfggMefjwRsqPYu<span class="char escape_">\n</span>WTxj8pkGjDWWVQocvKiCcGYlN6Ge16iqRUM3e6Shs+n6v7qBI6dOmw8kVkTmX7Zn<span class="char escape_">\n</span>jVM3aPIEUbGbOqYyxV4H9fLferiyTdMd41kH6b80WQKCAQAxAdNaDr+KjfMjM8//<span class="char escape_">\n</span>2dTmBQzd+CixIAC37qUau+K2HvxyvX/xHjJANTPyMH81JS8SuYtv21rutPnAn2Ck<span class="char escape_">\n</span>QLzUnZ2OP/p5/MPCj6Bx3aJ0JayzqoTRT6saLePyqnzF9Gs2F6gZpcAetdHVIrF/<span class="char escape_">\n</span>NrJMGwWzSmccBWllvPysttte08Rz+XTeHH5KjN670VpRhd/yjANbutSn5sUIJRMi<span class="char escape_">\n</span>UsDh8WRSlzv7ipkinATnpTRY1jKyr9lrx1PjPnKWKlWr/cOtL3e/K+ciSpdm65tf<span class="char escape_">\n</span>VNZGNp9NWDUqxeyQpploIEchs3RaNoC+2GCNHF4XpMJNlOKGRyi/X/3tP64OGqO0<span class="char escape_">\n</span>O+QdAoIBADba+6XyEeP81NLQlw++rpnJAieXVp89+lCz7QszV9Tz8ryKOxWqJrwW<span class="char escape_">\n</span>J6sOrzI/mmJjDA/Ee2gTUrVLeTJ4QY0vVsv/L5CUTImXlHNYr6E0a4m9Hh9xpSqk<span class="char escape_">\n</span>WKzZ4RUD3UiKy9PT3ttfIZezQcI3OzfqulQOtldjgXNz3SdN+eyHnpMXer4ASlNI<span class="char escape_">\n</span>+bMfZQpTlo33XLleXLWhpxhrgfWbNi2dY09iFNo69XkBlV9ZDOCM+uMs0mgOvGrC<span class="char escape_">\n</span>8x6hnNPIVdzwIIV1/l3oe9Kg3U0UyUfn4zf+sLf6dP7kXOmBbVfPzMvhD/et+xO9<span class="char escape_">\n</span>SQUugcy52Z9SQ23E/yJ3kcbW3UPpSakCggEBAKn7F02fpfiUXlxGVGatB5B/S6E7<span class="char escape_">\n</span>3oL1aQuzxnjT8okumFfbwK10fEWGLZ3vo4HrcCtPreLD0BuLC3VDM3dAXGQUd7fB<span class="char escape_">\n</span>GYCFLzO8/5N6PtbmZ7N2Ipe/d4uZeCY3QrmeJXJGKH3I86cSX+AwbUrEt5A9+noK<span class="char escape_">\n</span>SuuYVIkpSWQ1TTeppt+nwNlhcjZ14l1/WKEYNGXAdKdjeyLEHIDhH0pey+rjbadY<span class="char escape_">\n</span>mGvzQdqLkELFN0f8yjajK7XTMjNCSP9BuLS3kcmYlK62+YXMa9VnG9cJ3k/45I0C<span class="char escape_">\n</span>JlAS3ZO/fFNBOjZcjPtor2Ba+vq/20GzUrys54GFJIDHDMs/77AOltSI5ok=<span class="char escape_">\n</span>-----END RSA PRIVATE KEY-----<span class="char escape_">\n</span>&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;gitlab_pages&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;gitlab_secret&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;gitlab_id&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;auth_secret&quot;</span>: <span class="string">&quot;7c3eedd0076efc3a714f39259e8681f1898382b66b9b23bcb9d3982ba3d8fd1bbe6920b17103f0a725f7780e0ee1ec23024ac05f35f741db4086d4c3453c8ef6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;api_secret_key&quot;</span>: <span class="string">&quot;FEiJdskUbfzFgaBu1kpWde1cMwQRyERnoty8vOGOto8=&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;grafana&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;secret_key&quot;</span>: <span class="string">&quot;73e0634e677fec56e5ed34d64ad991f4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gitlab_secret&quot;</span>: <span class="string">&quot;7437406e9e6dbe90c61bd9ea2da52de6a55ad812ba30274d41467c428d0d1f5c&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gitlab_application_id&quot;</span>: <span class="string">&quot;2b96e1ec552e90f95315516c25f383d90884b080c16f4cc2a46b29d0abdd431d&quot;</span>,</span><br><span class="line">    <span class="string">&quot;admin_password&quot;</span>: <span class="string">&quot;83ffce7cb0acb1712db3bb10c49b37fb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;metrics_basic_auth_password&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;registry&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;http_secret&quot;</span>: <span class="string">&quot;d1b0e2f03f7e92fbdd2774c87dd7d9a908348153f7652e608a9c4ba2a769008271696b81ec9aef01355841288c0b5caccf32510fabaebb3d0d48bf99544e049c&quot;</span>,</span><br><span class="line">    <span class="string">&quot;internal_certificate&quot;</span>: <span class="string">&quot;-----BEGIN CERTIFICATE-----<span class="char escape_">\n</span>MIIFBTCCAu2gAwIBAgIBADANBgkqhkiG9w0BAQsFADBGMQwwCgYDVQQGEwNVU0Ex<span class="char escape_">\n</span>DzANBgNVBAoMBkdpdExhYjESMBAGA1UECwwJQ29udGFpbmVyMREwDwYDVQQDDAhS<span class="char escape_">\n</span>ZWdpc3RyeTAeFw0yMDA1MjMwOTU0NTlaFw0zMDA1MjEwOTU0NTlaMEYxDDAKBgNV<span class="char escape_">\n</span>BAYTA1VTQTEPMA0GA1UECgwGR2l0TGFiMRIwEAYDVQQLDAlDb250YWluZXIxETAP<span class="char escape_">\n</span>BgNVBAMMCFJlZ2lzdHJ5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA<span class="char escape_">\n</span>r/1QQaPDiZpB2259AJoGPgDOQ9OykQBQupJZfvAi2c/sFqCyJgh7VTOSlaxrrfiu<span class="char escape_">\n</span>+pw3pIR36B6uNI0WtiQS86dlMTvq/i6JoslB953K0+7ZUIxcX/gCFux2XSK74pqR<span class="char escape_">\n</span>kTq2m3Lrj06WM9H+5OycoEGiLtS5G4TjPCJ5rjri8DBgJGjhR5rhoyJFYCkfR/YK<span class="char escape_">\n</span>9PsqeS0sgpPsOsH1PE/Q3gwknq71Ipwr/1R0SNqe+cC50ZBndIIGWmeWebxtrhrb<span class="char escape_">\n</span>YUEb6vPTAYM9xJuvHEBwO2VfccJ6qo7yrCCVumtWDDrfryW7rN3Pq4/gvCSev0sw<span class="char escape_">\n</span>xDofIu6U0kwxlyLkfXLx7tu/aRuwfzw21j4zIdvHFqp48jBpAfMr0XRKLgkGz1bf<span class="char escape_">\n</span>EhzS3hSYjI94J3/g69n7vJ5fflg+xnaIZb7cHNQTwQB2kjxCHMnhUmL3thmu+PMd<span class="char escape_">\n</span>wY8SkJvUL4/pnWrCnGNjzs9IB7S6REYcF68fYRFz6WOMtGsb7B9fnSDcRMpELGv8<span class="char escape_">\n</span>8oeKRBAcDc8tIIpEkYUpoBpl9dkcKuUIEDLb2ccoVJJGXnteffglq0CV+k+cC+Rm<span class="char escape_">\n</span>7vl7cw6M6n8SWBye3dMkd/jAkdx22+C4Q5zdii5xudy/z3+DX0vwbGmBZwQdUmYX<span class="char escape_">\n</span>7hl0t0rZISPgIV4F92ezM0OqZRg6l6UFK6gzGotaAbUCAwEAATANBgkqhkiG9w0B<span class="char escape_">\n</span>AQsFAAOCAgEAQcMaqRBqELWYWhTanfJSon+MjHFUIoU8EW+RnJs0xAiJLxfkX807<span class="char escape_">\n</span>EqiCvKSo32K8Oxq6f8+5R1k9OHVbaNMSFWn55KwO3fWbgPjVS6DvaWORvFv+tjKj<span class="char escape_">\n</span>HHdnrRLUazV5xBg8RYtdhk94qbxpoG83eDUFrreBZTF45dqcjLr2JTcEcEREXVCn<span class="char escape_">\n</span>XV7e4Tdjzj+DJfkDtQTj1paTtpe9is5tb4sPsc2n/M78AUZhNu/wfGRaJEpGwlSp<span class="char escape_">\n</span>Ura3xxGwtDBgaBmbFY9JPaIapFX4kXSmXH4rPSf6s8hHT6TORxhOroak0l9bNmqD<span class="char escape_">\n</span>WVRAOe06Q5fPuFdoeQOwWlYhy5BLrR4lCIGobQjQ8NzUc938ahZwDId98c006Bt+<span class="char escape_">\n</span>mJpKKE/S0v+7qqs/+xbquO+g8pM6ZJiaWdWMlVp3ZO/lV4aryxCmXcwQXJdFH8dz<span class="char escape_">\n</span>BrR8EZ5oOK5kuBiasmVJdBJK9sKCEBI+Y+X+LazCutOuA1thMS+gSH7AF9stFA09<span class="char escape_">\n</span>isXoHjLSqDJr4kQoYAVE7nmIDzedrdfkxF6g5wwW+qdbq/k2eVY9BXTEeqfrB4Ef<span class="char escape_">\n</span>bnw2bxytMZPHnDeLV5vmhpzOCMfPUES0q3rlSTmpn7WFrIoxB+tJuEOEnHaohNhA<span class="char escape_">\n</span>uSF4DrPScAmUcr10FSz9x4H4mge6tmnjdCrk2zHvT8nlqBqAqUL7pyQ=<span class="char escape_">\n</span>-----END CERTIFICATE-----<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;internal_key&quot;</span>: <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----<span class="char escape_">\n</span>MIIJKQIBAAKCAgEAr/1QQaPDiZpB2259AJoGPgDOQ9OykQBQupJZfvAi2c/sFqCy<span class="char escape_">\n</span>Jgh7VTOSlaxrrfiu+pw3pIR36B6uNI0WtiQS86dlMTvq/i6JoslB953K0+7ZUIxc<span class="char escape_">\n</span>X/gCFux2XSK74pqRkTq2m3Lrj06WM9H+5OycoEGiLtS5G4TjPCJ5rjri8DBgJGjh<span class="char escape_">\n</span>R5rhoyJFYCkfR/YK9PsqeS0sgpPsOsH1PE/Q3gwknq71Ipwr/1R0SNqe+cC50ZBn<span class="char escape_">\n</span>dIIGWmeWebxtrhrbYUEb6vPTAYM9xJuvHEBwO2VfccJ6qo7yrCCVumtWDDrfryW7<span class="char escape_">\n</span>rN3Pq4/gvCSev0swxDofIu6U0kwxlyLkfXLx7tu/aRuwfzw21j4zIdvHFqp48jBp<span class="char escape_">\n</span>AfMr0XRKLgkGz1bfEhzS3hSYjI94J3/g69n7vJ5fflg+xnaIZb7cHNQTwQB2kjxC<span class="char escape_">\n</span>HMnhUmL3thmu+PMdwY8SkJvUL4/pnWrCnGNjzs9IB7S6REYcF68fYRFz6WOMtGsb<span class="char escape_">\n</span>7B9fnSDcRMpELGv88oeKRBAcDc8tIIpEkYUpoBpl9dkcKuUIEDLb2ccoVJJGXnte<span class="char escape_">\n</span>ffglq0CV+k+cC+Rm7vl7cw6M6n8SWBye3dMkd/jAkdx22+C4Q5zdii5xudy/z3+D<span class="char escape_">\n</span>X0vwbGmBZwQdUmYX7hl0t0rZISPgIV4F92ezM0OqZRg6l6UFK6gzGotaAbUCAwEA<span class="char escape_">\n</span>AQKCAgAh0boEgyXmYYBaXKck4HRmod0BZ8Me3kKlN85++EKaPLyPtJ3HdUXOH7UB<span class="char escape_">\n</span>kjq3Gdz2R+LheJtaPdsYOiytH82MiRSHG46S/fpxD9/fZ7E8fN/B/NcbkhtEsHgm<span class="char escape_">\n</span>ebBFYZKrp+7DfJgL1/xBRQ+IinemzDYQbcyMn0LToYRkmOhXY9R16rmv+vF1Wfae<span class="char escape_">\n</span>/ggG2h9M6J9G3gl5pld1CyTHTEdFBGxdGh39YqmJzX7zKR/3urN6tBdNalcyNEnU<span class="char escape_">\n</span>ZwNku8CAtfRZeDWKSuAp0gkakr9+ioKG5+qOsB2uOizLwCiu/PlTPRsNoypvO5zi<span class="char escape_">\n</span>St8+v4JFky28lsB+kSnOc2QZP2eCP40QU42V1ficsjNz61dDX4UIByuyktgPpCEw<span class="char escape_">\n</span>Uol/tP6lY7VqfOIef3R6HzNcwMLeIvhTIlwzvuUbBQFFF+NsNAgY5IHPfZVEQ6Jl<span class="char escape_">\n</span>5wa6MIcVpRLLmVLqGz1/Lt8Tj291le/UNUH9EQO5XUiVNqKYJYPdYGb8xXz33AHp<span class="char escape_">\n</span>kCFmhcmvGvHifr49UDdeQAhFORGZUaNJrB+Ac1to2jh8JFULV4xu3ipFMbq3apuF<span class="char escape_">\n</span>HL1mxdwEq2jUHhEONH2LOXsMUdPxMxYrfV7MaklEJ1RLd7RjGEEb/589O34TloBo<span class="char escape_">\n</span>wKHZbetic5m1j5Phc9gC/ePs+6vIKCFrKddccXbS+EK/+TcWQQKCAQEA3YbtgzwA<span class="char escape_">\n</span>6KIH4/cDDq4Dl6BlU11aekjClcXvcrx1aymbDwGSY2P3/LQgYmVHlew7Oa/H52SV<span class="char escape_">\n</span>bEQhCuLMduA85ZQZ+LfHgAnT8Muf/NJBBlOmKKGJaoQRjxQfHGIgMhAC9tpXB0Ng<span class="char escape_">\n</span>KYgv3jtIa9N1ur0FtdA/oJAQ054mQIG6UkqnsIBBLgzZxCyn8tWE9t2ZGbm0Hfvp<span class="char escape_">\n</span>AEXpm/ygulSTF66hx2+qq72/ikjf6lTqiUB3omyauYU00jHrAi1G8qBksTY/efs9<span class="char escape_">\n</span>1yrTXOiwoOf7Gyhy4GsGtRw4xGTP56sNnww5ql9Hyfta+tNMRwnFWOHABhFZPwXq<span class="char escape_">\n</span>4zLGrrbwKbnTOQKCAQEAy2BJK/NY5JYDGu7f7vrFxh+ATBPz7pF0gENZ3yWDdZna<span class="char escape_">\n</span>XXvLtNoYtVe7v6nTbBzcyZS3UkDNAh5W9F1H4moxtbsOl1CF14wVVht323owPHIr<span class="char escape_">\n</span>FumtJBcCb780y7VxnLcYCzeyxP/O3qUtB5zcIO9i8sLbtQDtaRtM3HjqAw1mH7WG<span class="char escape_">\n</span>ytKcYX7hI78W6VdxrS1yjHh6K8u5uZYeLnHQl7f+2tNzJakTXp7xf672siUIALgU<span class="char escape_">\n</span>PI/E9mddGU6GFbjmqd8J6HZ4hxtFY5FKrFTmUX6hWaJVVFjtp07Vb++Z5STxZnmq<span class="char escape_">\n</span>x2Gt7BU/B/frSfzUCGEV0aDyk5hQDG/2K2oHa1x2XQKCAQEAtEFJXKLjnmfSAdYJ<span class="char escape_">\n</span>39UKyUNTj60DpUM1SofAGl1tMeCt8lz2D/fVXwP24fnFcSHC42K8R/XZfDpHpML9<span class="char escape_">\n</span>WrGF+80yAOcR54aXtXULXr56+LnyF1eyKEEExKa71e2mgvXyY4kwjZFuWv0c7jjQ<span class="char escape_">\n</span>6iQrxOJwFgw46d6wQnGKcKzevn1Oy9jgsKb2P6GSm47QXcvc+0jXXhqP8o/w0eOT<span class="char escape_">\n</span>qWqOMhQAQfcEKjEA/XXk9ZlZKouRjVHP6KuSWoMR1jifZWfL50LcDda48C9Bw3T3<span class="char escape_">\n</span>3EZHVkboiuGrmI05R908KydNsyBQf+h90sW7tyNeCuPReExhYs6VDyoygeLcNmhX<span class="char escape_">\n</span>LayuSQKCAQEAqjMUSWHH3NTmGF4creTUKrAmMITqOZclBkpXJfZBA+QT6PQ3UEzN<span class="char escape_">\n</span>LMYVa5r2Qp4M7+4zVPTCHKnDX5HJHOR+YXYACgXrXK3xFTS7o8OoJo3tHanFqlRP<span class="char escape_">\n</span>R7Gev3RDdkGML6cXRuJF//H/s0VEu5NbHYqRT/NMvA+KzV+rh45pDtRdz9Nd6AHE<span class="char escape_">\n</span>7KN4yyLREXrdSE1zAL/n2DaXX4sEZFQpRnx6+uN6QE+ID7Ee54syHVfwJ5ax4Pwz<span class="char escape_">\n</span>33/lmrw43aS4qACtcXQTJ/ZppbsPXNg6s8a03nflu4Sv/pNoGWpHU9kyYNWQNei5<span class="char escape_">\n</span>7TM/h5W85J5LIjoth/OJ2j7Apyh+uQySSQKCAQA/resJCx7BheqBk0TSG6ob/jnJ<span class="char escape_">\n</span>HWlz8sYedRwMrSzthZk0LGK+pp1DNqdbn71e3DrKOxnrmV+jX7ZJVm7PMReWTmUh<span class="char escape_">\n</span>R/FKCXNrKNraEU8fVKEIHpRP7H/M7B5mlRir2sXT6d7L1tZEcLSIzgnemG54iR96<span class="char escape_">\n</span>zBq1qd77UfHDkqkw8Aqn8N/D2ukQohKfqWIvls9u3xUFEacfnd7+Go6nbreZZ3si<span class="char escape_">\n</span>n1eLmy4X10bgTCTKFJAljpeah7kbIDJefUYt2iay+WnK0EJiHl4LAsdEtKa8rUGn<span class="char escape_">\n</span>/7w25kWgT+fx2X33BsGlUZN5IxFPmPuRfoBmuPFA4o9KNQn4m0bSUOC7X8TA<span class="char escape_">\n</span>-----END RSA PRIVATE KEY-----<span class="char escape_">\n</span>&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;letsencrypt&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;auto_enabled&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;mattermost&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;email_invite_salt&quot;</span>: <span class="string">&quot;e41e9e776a03c0a7ca1749585139ecb9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;file_public_link_salt&quot;</span>: <span class="string">&quot;5ff6a916dbc759eb690a79f2974f19e4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sql_at_rest_encrypt_key&quot;</span>: <span class="string">&quot;bef621cf1b26936cacdac3859078fe3d&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;postgresql&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;internal_certificate&quot;</span>: <span class="string">&quot;-----BEGIN CERTIFICATE-----<span class="char escape_">\n</span>MIIFBzCCAu+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBHMQwwCgYDVQQGEwNVU0Ex<span class="char escape_">\n</span>DzANBgNVBAoMBkdpdExhYjERMA8GA1UECwwIRGF0YWJhc2UxEzARBgNVBAMMClBv<span class="char escape_">\n</span>c3RncmVTUUwwHhcNMjAwNTIzMDk1NDU5WhcNMzAwNTIxMDk1NDU5WjBHMQwwCgYD<span class="char escape_">\n</span>VQQGEwNVU0ExDzANBgNVBAoMBkdpdExhYjERMA8GA1UECwwIRGF0YWJhc2UxEzAR<span class="char escape_">\n</span>BgNVBAMMClBvc3RncmVTUUwwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC<span class="char escape_">\n</span>AQDa5sfD99KS7JONPxGgWe5lemV8UXyUvJIJ2iA2NeQDIab/lvb9wnaVEQVPxAdh<span class="char escape_">\n</span>HUiTienw1dpIU1xozVX4TqyTLQEjeRiP9RHE527d9zPUPVCFy6AZ6ouOUmlEjPNx<span class="char escape_">\n</span>rJ6btHZUzPCZJaFi6wlNMz9A1Nn7/C0yIewrMiDzJ1LtOSE2nANxSicab8KAPZ3Q<span class="char escape_">\n</span>+wMkW2/15u7dDh3StC9Cgg8Rdjv2/4/mqdAd0cCzdY2tiqVC/7l1u/z73CaKAXQB<span class="char escape_">\n</span>Z+bEz8nM2FAD9wMP58Vw9VN+lgTYvIdDGKloG4Z3vl7rbQRfqxiu/pPwe+yxayPg<span class="char escape_">\n</span>9y9A9ieVeF8GWXBb8pG3UcC9zvwBE46z5DtuqaRcjoNMxGQrz1lBQkS+C3hftNm6<span class="char escape_">\n</span>36BNy7QRwDhWejBjUbUHCqA+hyPwUZUvuK5ePvt/rYwfK89HN8UN3gz1YRpIB0jt<span class="char escape_">\n</span>ZvXz7FbMx4kf7bil5PLNwM6Uxhw4YzeLituOiY0MHaCseBfegHwIFWA9YA7oQdgM<span class="char escape_">\n</span>qRzd0BgjcxxhPsLKsCgEpbm9LakDmX/nTtGl+wlzIAnVFRasokEGTJJ48ke/8to+<span class="char escape_">\n</span>BgEawGuNGVEo7v5NS0GhdTGZoIZk5r4mr5kGcK1/Ev5oepfDM/wBsU5xfghJ+kjl<span class="char escape_">\n</span>WkXPbtnLu5gRv44BbHF/lDUkhmNRR0P1zky2ib4tnBekkQIDAQABMA0GCSqGSIb3<span class="char escape_">\n</span>DQEBCwUAA4ICAQDC35E9Ettw1KSoLb+Qu8nDmqKTMdbdlCuf76sM/HoOHl4QvHOM<span class="char escape_">\n</span>PnNl1QglQ+NI3Pu1SrjvNmnWFyQMNZuw4Jh9h17gVKq27BJFARJbS4ksCPtlJ93/<span class="char escape_">\n</span>EYL2NlINn0LLD1i0cFbFCPYPCSdU5QOBbO/LLH5F53lHCnOzoePmGt86r7z5BWDQ<span class="char escape_">\n</span>tH6wUupVmOZ2TrrPdO7w+VIeJblBySM0ckEumPXnG09RvIcI8kOWGEksPf0fFt5e<span class="char escape_">\n</span>v2tFoTLZRQ9CQdJ4Tpaq2MFf3vdxYLNOkzNCTFpFgfntgNQ56lPBjC4VesVE1IeA<span class="char escape_">\n</span>KkEDcyMznav7SBleKHjzH83sezeS6EXOEOrfbB5murVNZEKJ0xKLM4LEy+uDFTPZ<span class="char escape_">\n</span>ayOD6H4WhAGHcmPaQ8IFsOYnbELTSowM+28Nv+KvqpHM6TiSN00I9Hz1qTbguhrA<span class="char escape_">\n</span>TRFfanikuHcwJP0Xigzj2OKdgE2njoeku+sgUi/eKkBepwen3xdKhulUVROb6VIf<span class="char escape_">\n</span>WwXUCXF0bfo33p6sJEoibVIbeA5RNMzAvbYUGM6qMdTMnvJqBkEpxc78EfmlWjG1<span class="char escape_">\n</span>Vn+UPzUyAuqQ8rdvxsI0XJ83ZouZLaQ2TZZRkxe7V5R6dg1PgzpsXIUGPAR/N316<span class="char escape_">\n</span>2Po+C7OxWJ3HxjtNzKLnaQuJb7qWnVMcpcXggalYPT6dhok/snaIOjciaw==<span class="char escape_">\n</span>-----END CERTIFICATE-----<span class="char escape_">\n</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;internal_key&quot;</span>: <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----<span class="char escape_">\n</span>MIIJKgIBAAKCAgEA2ubHw/fSkuyTjT8RoFnuZXplfFF8lLySCdogNjXkAyGm/5b2<span class="char escape_">\n</span>/cJ2lREFT8QHYR1Ik4np8NXaSFNcaM1V+E6sky0BI3kYj/URxOdu3fcz1D1Qhcug<span class="char escape_">\n</span>GeqLjlJpRIzzcayem7R2VMzwmSWhYusJTTM/QNTZ+/wtMiHsKzIg8ydS7TkhNpwD<span class="char escape_">\n</span>cUonGm/CgD2d0PsDJFtv9ebu3Q4d0rQvQoIPEXY79v+P5qnQHdHAs3WNrYqlQv+5<span class="char escape_">\n</span>dbv8+9wmigF0AWfmxM/JzNhQA/cDD+fFcPVTfpYE2LyHQxipaBuGd75e620EX6sY<span class="char escape_">\n</span>rv6T8HvssWsj4PcvQPYnlXhfBllwW/KRt1HAvc78AROOs+Q7bqmkXI6DTMRkK89Z<span class="char escape_">\n</span>QUJEvgt4X7TZut+gTcu0EcA4VnowY1G1BwqgPocj8FGVL7iuXj77f62MHyvPRzfF<span class="char escape_">\n</span>Dd4M9WEaSAdI7Wb18+xWzMeJH+24peTyzcDOlMYcOGM3i4rbjomNDB2grHgX3oB8<span class="char escape_">\n</span>CBVgPWAO6EHYDKkc3dAYI3McYT7CyrAoBKW5vS2pA5l/507RpfsJcyAJ1RUWrKJB<span class="char escape_">\n</span>BkySePJHv/LaPgYBGsBrjRlRKO7+TUtBoXUxmaCGZOa+Jq+ZBnCtfxL+aHqXwzP8<span class="char escape_">\n</span>AbFOcX4ISfpI5VpFz27Zy7uYEb+OAWxxf5Q1JIZjUUdD9c5Mtom+LZwXpJECAwEA<span class="char escape_">\n</span>AQKCAgEAlRpdN762UB2U48Dx4KdhGv4j4moe0bEgSFWrW0GZ7ggeGDpcQr0SyLav<span class="char escape_">\n</span>R4XfAOdRaC2oi8Mey+T8LOawiFIOerFM9Tym3mevks+RVN/tDcQ19OyeQQjhxi+c<span class="char escape_">\n</span>RHU93VAXOTfS4jA2MhrPsvElhNBDZYWWdW1v25X/p+ydRQKkGbGwTeI29hPsTrWR<span class="char escape_">\n</span>ZoiR1qcjnMArovOKAEh9R+gzyLmOSfafIb8x5YwFlkopWBPaTTsDFn/Zc7h4uZVb<span class="char escape_">\n</span>KuWSfuKm7agbbMxqtEisbUkR079HABJverHv8GP8AE2/ahDh1rqLIB8K0SfW3ReM<span class="char escape_">\n</span>Qc0Yw0ObjEQe8lDraQfC4N55IsUs4tongnAt3GUIg1/SAtvc77bk/HyFWXynPHyZ<span class="char escape_">\n</span>scEQJKilmVgHR1K3F8iF2JjwlfdDnH2P5cz4yA1KTFN2+Z06QPnqZg6q2K1Z3Wu+<span class="char escape_">\n</span>8bLJVsex0KPtxx08+8Pe/gV1DtXoXWm9wsURmrQacC0kBiEkZTrS22jw1En/vPcQ<span class="char escape_">\n</span>Pt9EAdTbDIkH+BXLJxjnGNbJVL5Zwl0kj0yxq1l8x4G/xJFmvjz8FU+uL9eks8Au<span class="char escape_">\n</span>flMkHv5MI+fWExP7dXTyhOJ5tDXLbKt+Ch/SLEsZZ1OL4o5S8iDT9iKpSVderCAF<span class="char escape_">\n</span>P7LC9YgOJf6RxRtotNM/y9FJMghtEsrGkoRaZ9Vb3G5aK6ipmgECggEBAPew6Oz2<span class="char escape_">\n</span>E85PT+IqgFh/SCwLHpU5IaGl1xvoHMOupMc+ilqzsG2Cka62HGqFsXwdyJDftiOM<span class="char escape_">\n</span>BS95FmjEIaB7uVQ2mZmaRDFlOQuT2QuU+ykhu99cFD4EdHRPLLzDAR6i10nsdQry<span class="char escape_">\n</span>QnFpS6h7kOVvu1ICsiTmUXfP4i06thHG0YB/O2ibQpxsAyCEOHhy4clb+19mJSLC<span class="char escape_">\n</span>V7RF4qDD5+3dbunXzwKJ7Y81cUMLQ9Boa4yaOpWtHCTf2SQ4PwatbQXO9T79UI4H<span class="char escape_">\n</span>PTaO+c2mQeLQ+MyPD4YuT/DY2GF4X0J3OqY4MkNpzL+2PqmYwlDhPSEM9hzl+Lrq<span class="char escape_">\n</span>RxEFrv7zBBdXAi0CggEBAOI+opEfnlNe82wly8x/RaDarxOTyzM+OvZo6FEibawM<span class="char escape_">\n</span>+B+EsklcJ4bbiD2RD5fn1HbWd6yq51XnJBCN6QmlmpP/oP7IBBN/2gfrkEfjmsq3<span class="char escape_">\n</span>oov6qFMszrQqhIJdj6T5WND/Pncq3G1fs7IoIFnlqlFA57+Hak3N+f1Z2dRLZfVA<span class="char escape_">\n</span>CPbghOljfmShv+yjc+3meET0QRg52DXvOKAl8X9eCpMlb6Hltij3qm6ggf9hM7jV<span class="char escape_">\n</span>VmsCAMVhSr4/wopSYJKfL+cSOQ+ynyp2lUeHYzVgREHpAYrBg4C8C/93sd/+NnoK<span class="char escape_">\n</span>x9rsNoM8NADrV5mzG6CsVnbskezNxrBpD47igKu3/nUCggEBANUGvT3X4m7k/bJp<span class="char escape_">\n</span>lVsHlV3z7kivC0LIrDofJmYSFTwbiMi7lHiK/JrDm6rt8xjpUK9xCGiIK4mJ3gEa<span class="char escape_">\n</span>9kTdRCaukuptqErHYQmZDeoNJvpYPgm7Wtl/4VyLH9H08UiVCw5UJNHWS9jYk66D<span class="char escape_">\n</span>H7qEnxnIochkohqmm0MFJMQjN9oJE2JDbkW0C/hyX1MQkyooRwjkg/niJaYxGNnl<span class="char escape_">\n</span>w9prQNIzvqHTWJJ7hz7/OELNG/qgRtSmPvdj4pBpI6Otkn+VYI3dNeQBS99ZlnUN<span class="char escape_">\n</span>kcruqZzdSZ/AwxZEmc0yxtMWUkXVPT2HiAY2Sqx4al8/aOC9EgsGqyavCZIVTk2N<span class="char escape_">\n</span>Wq5sMb0CggEBAMcgvdDhdWaHwdREB/X7ZvtGvqWKhWSatya9+wu+M60k1RZYotry<span class="char escape_">\n</span>o0+M1YLqtEDNKTFXXom4+lefUxzG6n81JLJyYe8deIj5FJu394tuhoU5z3VIrvJW<span class="char escape_">\n</span>E7B7Y5miY5WeaU+59+7G6K/TdcOukZrOC3Psnozy0NueGROmC5VQr3KGY912i0Un<span class="char escape_">\n</span>7sz/mH7c9mJDYUO/f7Ok5enCnaJHAyFJUiFk57YlColQQs+PshtmIDHkg2U3pBoV<span class="char escape_">\n</span>ocWFNOKt0pX6Sh0k6tgoLPMg4A7O2MDX8/vW6yaHYAjkeeLmJMazZptP9ct38Brd<span class="char escape_">\n</span>2B+fA8Eh5YUragbN/Tnhe6k1Lx5huUJqdSkCggEAFSpGIAhoDUv0CbgsPRoylpp0<span class="char escape_">\n</span>O/Hjv/YWTB/1sy1rjPH4ZMawGDZweitjMC/DHsX8s+P1PUuZyw7Oabeo0wMv0C2J<span class="char escape_">\n</span>Z19AnEr54BaLjpdNnYu8rOzm/FsHzZRln3Elqd7+rTmkiQnKIcekSXivFYqe8l4L<span class="char escape_">\n</span>pTn6iKr81pta5OXMcbE7u4T3SXHqaEBulKNHJd7SBpFGsz+aRjs/ItF25RTnIL5r<span class="char escape_">\n</span>vRjso0+lfNJWejgReYY71XILRu+pbu1KE1F2+AUIos+rEIyf+Wa7Sy7YgCSx5RWr<span class="char escape_">\n</span>e09GGV+ES9pTiG2ML+qsynZhK3xJxch8g4PCXKSdUk7jjfhqI7MgGWoG7z9etA==<span class="char escape_">\n</span>-----END RSA PRIVATE KEY-----<span class="char escape_">\n</span>&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习Gitlab</summary>
    
    
    
    
    <category term="项目管理" scheme="https://ayou129.github.io/blog/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Php垃圾回收机制</title>
    <link href="https://ayou129.github.io/blog/p/210d2447/"/>
    <id>https://ayou129.github.io/blog/p/210d2447/</id>
    <published>2020-05-20T04:34:34.000Z</published>
    <updated>2020-05-23T06:24:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在5.2及更早版本的PHP中，没有专门的垃圾回收器GC（Garbage Collection），引擎在判断一个变量空间是否能够被释放的时候是依据这个变量的zval的refcount的值，如果refcount为0，那么变量的空间可以被释放，否则就不释放，这是一种非常简单的GC实现。然而在这种简单的GC实现方案中，出现了意想不到的变量内存泄漏情况（Bug:<a href="http://bugs.php.net/bug.php?id=33595" target="_blank" rel="noopener">http://bugs.php.net/bug.php?id=33595</a> ），引擎将无法回收这些内存，于是在PHP5.3中出现了新的GC，新的GC有专门的机制负责清理垃圾数据，防止内存泄漏。本文将详细的阐述PHP5.3中新的GC运行机制。</p><p>目前很少有详细的资料介绍新的GC，本文将是目前国内最为详细的从源码角度介绍PHP5.3中GC原理的文章。其中关于垃圾产生以及算法简介部分由笔者根据手册翻译而来，当然其中融入了本人的一些看法。手册中相关内容：Garbage Collection</p><p>在介绍这个新的GC之前，读者必须先了解PHP中变量的内部存储相关知识，请先阅读 变量的内部存储：引用和计数 </p><h2 id="什么算垃圾"><a href="#什么算垃圾" class="headerlink" title="什么算垃圾"></a>什么算垃圾</h2><p>首先我们需要定义一下“垃圾”的概念，新的GC负责清理的垃圾是指变量的容器zval还存在，但是又没有任何变量名指向此zval。因此GC判断是否为垃圾的一个重要标准是有没有变量名指向变量容器zval。</p><p>假设我们有一段PHP代码，使用了一个临时变量$tmp存储了一个字符串，在处理完字符串之后，就不需要这个$tmp变量了，$tmp变量对于我们来说可以算是一个“垃圾”了，但是对于GC来说，$tmp其实并不是一个垃圾，$tmp变量对我们没有意义，但是这个变量实际还存在，$tmp符号依然指向它所对应的zval，GC会认为PHP代码中可能还会使用到此变量，所以不会将其定义为垃圾。</p><p>那么如果我们在PHP代码中使用完$tmp后，调用unset删除这个变量，那么$tmp是不是就成为一个垃圾了呢。很可惜，GC仍然不认为$tmp是一个垃圾，因为$tmp在unset之后，refcount减少1变成了0(这里假设没有别的变量和$tmp指向相同的zval),这个时候GC会直接将$tmp对应的zval的内存空间释放，$tmp和其对应的zval就根本不存在了。此时的$tmp也不是新的GC所要对付的那种“垃圾”。那么新的GC究竟要对付什么样的垃圾呢，下面我们将生产一个这样的垃圾。  </p><h2 id="顽固垃圾的产生过程"><a href="#顽固垃圾的产生过程" class="headerlink" title="顽固垃圾的产生过程"></a>顽固垃圾的产生过程</h2><p>如果读者已经阅读了变量内部存储相关的内容，想必对refcount和isref这些变量内部的信息有了一定的了解。这里我们将结合手册中的一个例子来介绍垃圾的产生过程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;new string&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这么简单的一个代码中，$a变量内部存储信息为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a: (refcount=1, is_ref=0)=&#x27;new string&#x27;</span><br></pre></td></tr></table></figure><p>当把$a赋值给另外一个变量的时候，$a对应的zval的refcount会加1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;new string&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时$a和$b变量对应的内部存储信息为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b: (refcount=2, is_ref=0)=&#x27;new string&#x27;</span><br></pre></td></tr></table></figure><p>当我们用unset删除$b变量的时候，$b对应的zval的refcount会减少1</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = &quot;new string&quot;; //a: (refcount=1, is_ref=0)=&#x27;new string&#x27;</span><br><span class="line"></span><br><span class="line">$b = $a;                 //a,b: (refcount=2, is_ref=0)=&#x27;new string&#x27;</span><br><span class="line"></span><br><span class="line">unset($b);              //a: (refcount=1, is_ref=0)=&#x27;new string&#x27;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对于普通的变量来说，这一切似乎很正常，但是在复合类型变量（数组和对象）中，会发生比较有意思的事情：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = array(&#x27;meaning&#x27; =&gt; &#x27;life&#x27;, &#x27;number&#x27; =&gt; 42);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>a的内部存储信息为:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a: (refcount=1, is_ref=0)=array (</span><br><span class="line">   &#x27;meaning&#x27; =&gt; (refcount=1, is_ref=0)=&#x27;life&#x27;,</span><br><span class="line">   &#x27;number&#x27; =&gt; (refcount=1, is_ref=0)=42</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>数组变量本身($a)在引擎内部实际上是一个哈希表，这张表中有两个zval项 meaning和number，</p><p>所以实际上那一行代码中一共生成了3个zval,这3个zval都遵循变量的引用和计数原则，用图来表示:</p><p> 下面在$a中添加一个元素，并将现有的一个元素的值赋给新的元素:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = array(&#x27;meaning&#x27; =&gt; &#x27;life&#x27;, &#x27;number&#x27; =&gt; 42);</span><br><span class="line"></span><br><span class="line">$a[&#x27;life&#x27;] = $a[&#x27;meaning&#x27;];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>那么$a的内部存储为:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a: (refcount=1, is_ref=0)=array (</span><br><span class="line">   &#x27;meaning&#x27; =&gt; (refcount=2, is_ref=0)=&#x27;life&#x27;,</span><br><span class="line">   &#x27;number&#x27; =&gt; (refcount=1, is_ref=0)=42,</span><br><span class="line">   &#x27;life&#x27; =&gt; (refcount=2, is_ref=0)=&#x27;life&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>其中的meaning元素和life元素之指向同一个zval的：</p><p>现在，如果我们试一下，将数组的引用赋值给数组中的一个元素，有意思的事情就发生了：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = array(&#x27;one&#x27;);</span><br><span class="line"></span><br><span class="line">$a[] = &amp;$a;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这样$a数组就有两个元素，一个索引为0，值为字符one,另外一个索引为1，为$a自身的引用，内部存储如下:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a: (refcount=2, is_ref=1)=array (</span><br><span class="line">   0 =&gt; (refcount=1, is_ref=0)=&#x27;one&#x27;,</span><br><span class="line">   1 =&gt; (refcount=2, is_ref=1)=…</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>“…”表示1指向a自身，是一个环形引用：</p><p>这个时候我们对$a进行unset,那么$a会从符号表中删除，同时$a指向的zval的refcount减少1</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$a = array(&#x27;one&#x27;);</span><br><span class="line"></span><br><span class="line">$a[] = &amp;$a;</span><br><span class="line"></span><br><span class="line">unset($a);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>那么问题也就产生了，$a已经不在符号表中了，用户无法再访问此变量，但是$a之前指向的zval的refcount变为1而不是0，因此不能被回收，这样产生了内存泄露：</p><p>这样，这么一个zval就成为了一个真是意义的垃圾了，新的GC要做的工作就是清理这种垃圾。</p><h3 id="为解决这种垃圾，产生了新的GC"><a href="#为解决这种垃圾，产生了新的GC" class="headerlink" title="为解决这种垃圾，产生了新的GC"></a>为解决这种垃圾，产生了新的GC</h3><p>在PHP5.3版本中，使用了专门GC机制清理垃圾，在之前的版本中是没有专门的GC，那么垃圾产生的时候，没有办法清理，内存就白白浪费掉了。在PHP5.3源代码中多了以下文件:{PHPSRC}&#x2F;Zend&#x2F;zend_gc.h {PHPSRC}&#x2F;Zend&#x2F;zend_gc.c, 这里就是新的GC的实现，我们先简单的介绍一下算法思路，然后再从源码的角度详细介绍引擎中如何实现这个算法的。</p><h3 id="新的GC算法"><a href="#新的GC算法" class="headerlink" title="新的GC算法"></a>新的GC算法</h3><p>在较新的PHP手册中有简单的介绍新的GC使用的垃圾清理算法，这个算法名为 Concurrent Cycle Collection in Reference Counted Systems ， 这里不详细介绍此算法，根据手册中的内容来先简单的介绍一下思路：</p><p>首先我们有几个基本的准则：<br>1：如果一个zval的refcount增加，那么此zval还在使用，不属于垃圾<br>2：如果一个zval的refcount减少到0， 那么zval可以被释放掉，不属于垃圾<br>3：如果一个zval的refcount减少之后大于0，那么此zval还不能被释放，此zval可能成为一个垃圾</p><p>只有在准则3下，GC才会把zval收集起来，然后通过新的算法来判断此zval是否为垃圾。那么如何判断这么一个变量是否为真正的垃圾呢？</p><p>简单的说，就是对此zval中的每个元素进行一次refcount减1操作，操作完成之后，如果zval的refcount&#x3D;0，那么这个zval就是一个垃圾。这个原理咋看起来很简单，但是又不是那么容易理解，起初笔者也无法理解其含义，直到挖掘了源代码之后才算是了解。如果你现在不理解没有关系，后面会详细介绍，这里先把这算法的几个步骤描叙一下,首先引用手册中的一张图:</p><p>A：为了避免每次变量的refcount减少的时候都调用GC的算法进行垃圾判断，此算法会先把所有前面准则3情况下的zval节点放入一个节点(root)缓冲区(root buffer)，并且将这些zval节点标记成紫色，同时算法必须确保每一个zval节点在缓冲区中之出现一次。当缓冲区被节点塞满的时候，GC才开始开始对缓冲区中的zval节点进行垃圾判断。</p><p>B：当缓冲区满了之后，算法以深度优先对每一个节点所包含的zval进行减1操作，为了确保不会对同一个zval的refcount重复执行减1操作，一旦zval的refcount减1之后会将zval标记成灰色。需要强调的是，这个步骤中，起初节点zval本身不做减1操作，但是如果节点zval中包含的zval又指向了节点zval（环形引用），那么这个时候需要对节点zval进行减1操作。</p><p>C：算法再次以深度优先判断每一个节点包含的zval的值，如果zval的refcount等于0，那么将其标记成白色(代表垃圾)，如果zval的refcount大于0，那么将对此zval以及其包含的zval进行refcount加1操作，这个是对非垃圾的还原操作，同时将这些zval的颜色变成黑色（zval的默认颜色属性）</p><p>D：遍历zval节点，将C中标记成白色的节点zval释放掉。</p><p>这ABCD四个过程是手册中对这个算法的介绍，这还不是那么容易理解其中的原理，这个算法到底是个什么意思呢？我自己的理解是这样的：</p><p>比如还是前面那个变成垃圾的数组$a对应的zval,命名为zval_a,  如果没有执行unset， zval_a的refcount为2,分别由$a和$a中的索引1指向这个zval。  用算法对这个数组中的所有元素（索引0和索引1）的zval的refcount进行减1操作，由于索引1对应的就是zval_a，所以这个时候zval_a的refcount应该变成了1，这样zval_a就不是一个垃圾。如果执行了unset操作，zval_a的refcount就是1，由zval_a中的索引1指向zval_a,用算法对数组中的所有元素（索引0和索引1）的zval的refcount进行减1操作，这样zval_a的refcount就会变成0，于是就发现zval_a是一个垃圾了。 算法就这样发现了顽固的垃圾数据。</p><p>举了这个例子，读者大概应该能够知道其中的端倪：</p><p>对于一个包含环形引用的数组，对数组中包含的每个元素的zval进行减1操作，之后如果发现数组自身的zval的refcount变成了0，那么可以判断这个数组是一个垃圾。</p><p>这个道理其实很简单，假设数组a的refcount等于m, a中有n个元素又指向a,如果m等于n,那么算法的结果是m减n，m-n&#x3D;0，那么a就是垃圾，如果m&gt;n,那么算法的结果m-n&gt;0,所以a就不是垃圾了</p><p>m&#x3D;n代表什么？  代表a的refcount都来自数组a自身包含的zval元素,代表a之外没有任何变量指向它，代表用户代码空间中无法再访问到a所对应的zval，代表a是泄漏的内存，因此GC将a这个垃圾回收了。</p><p>PHP中运用新的GC的算法</p><p>在PHP中，GC默认是开启的，你可以通过ini文件中的 zend.enable_gc 项来开启或则关闭GC。当GC开启的时候，垃圾分析算法将在节点缓冲区(roots buffer)满了之后启动。缓冲区默认可以放10,000个节点，当然你也可以通过修改Zend&#x2F;zend_gc.c中的GC_ROOT_BUFFER_MAX_ENTRIES 来改变这个数值，需要重新编译链接PHP。当GC关闭的时候，垃圾分析算法就不会运行，但是相关节点还会被放入节点缓冲区，这个时候如果缓冲区节点已经放满，那么新的节点就不会被记录下来，这些没有被记录下来的节点就永远也不会被垃圾分析算法分析。如果这些节点中有循环引用，那么有可能产生内存泄漏。之所以在GC关闭的时候还要记录这些节点，是因为简单的记录这些节点比在每次产生节点的时候判断GC是否开启更快，另外GC是可以在脚本运行中开启的，所以记录下这些节点，在代码运行的某个时候如果又开启了GC，这些节点就能被分析算法分析。当然垃圾分析算法是一个比较耗时的操作。</p><p>在PHP代码中我们可以通过gc_enable()和gc_disable()函数来开启和关闭GC，也可以通过调用gc_collect_cycles()在节点缓冲区未满的情况下强制执行垃圾分析算法。这样用户就可以在程序的某些部分关闭或则开启GC，也可强制进行垃圾分析算法。 </p><p>新的GC算法的性能</p><p>1.防止泄漏节省内存</p><p>新的GC算法的目的就是为了防止循环引用的变量引起的内存泄漏问题，在PHP中GC算法，当节点缓冲区满了之后，垃圾分析算法会启动，并且会释放掉发现的垃圾，从而回收内存，在PHP手册上给了一段代码和内存使用状况图：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span> = <span class="string">&#x27;3.1415962654&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$baseMemory</span> = memory_get_usage();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">100000</span>; <span class="variable">$i</span>++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> Foo;</span><br><span class="line">    <span class="variable">$a</span>-&gt;self = <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="variable">$i</span> % <span class="number">500</span> === <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> sprintf( <span class="string">&#x27;%8d: &#x27;</span>, <span class="variable">$i</span> ), memory_get_usage() - <span class="variable">$baseMemory</span>, <span class="string">&quot;/n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这段代码的循环体中，新建了一个对象变量，并且用对象的一个成员指向了自己，这样就形成了一个循环引用，当进入下一次循环的时候，又一次给对象变量重新赋值，这样会导致之前的对象变量内存泄漏，在这个例子里面有两个变量泄漏了，一个是对象本身，另外一个是对象中的成员self，但是这两个变量只有对象会作为垃圾收集器的节点被放入缓冲区(因为重新赋值相当于对它进行了unset操作，满足前面的准则3)。在这里我们进行了100,000次循环，而GC在缓冲区中有10,000节点的时候会启动垃圾分析算法，所以这里一共会进行10次的垃圾分析算法。从图中可以清晰的看到，在5.3版本PHP中，每次GC的垃圾分析算法被触发后，内存会有一个明显的减少。而在5.2版本的PHP中，内存使用量会一直增加。</p><p>2：运行效率影响</p><p>启用了新的GC后，垃圾分析算法将是一个比较耗时的操作，手册中给了一段测试代码：</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span> = <span class="string">&#x27;3.1415962654&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">1000000</span>; <span class="variable">$i</span>++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> Foo;</span><br><span class="line">    <span class="variable">$a</span>-&gt;self = <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> memory_get_peak_usage(), <span class="string">&quot;/n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后分别在GC开启和关闭的情况下执行这段代码：</p><p>time php -dzend.enable_gc&#x3D;0 -dmemory_limit&#x3D;-1 -n example2.php</p><h1 id="and"><a href="#and" class="headerlink" title="and"></a>and</h1><p>time php -dzend.enable_gc&#x3D;1 -dmemory_limit&#x3D;-1 -n example2.php</p><p>最终在该机器上，第一次执行大概使用10.7秒，第二次执行大概使用11.4秒，性能大约降低7%,不过内存的使用量降低了98%,从931M降低到了10M。当然这并不是一个比较科学的测试方法，但是也能说明一定的问题。这种代码测试的是一种极端恶劣条件，实际代码中，特别是在WEB的应用中，很难出现大量循环引用，GC的分析算法的启动不会这么频繁，小规模的代码中甚至很少有机会启动GC分析算法。</p><p>总结：</p><p>当GC的垃圾分析算法执行的时候，PHP脚本的效率会受到一定的影响，但是小规模的代码一般不会有这个机会运行这个算法。如果一旦脚本中GC分析算法开始运行了，那么将花费少量的时间节省出来了大量的内存，是一件非常划算的事情。新的GC对一些长期运行的PHP脚本效果更好，比如PHP的DAEMON守护进程，或则PHP-GTK进程等等。</p><p>引擎内部GC的实现：前面已经介绍了新的GC的基本原理以及性能相关的内容，其中一些都是在手册中有简单介绍了，那么这里我们将从源代码的角度来分析一下PHP如何实现新的GC。</p><p>1.zval的变化</p><p>在文件Zend&#x2F;zend_gc.h中，重新定义了分配一个zval结构的宏:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span>  ALLOC_ZVAL  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALLOC_ZVAL(z)                                   /  </span></span><br><span class="line">    <span class="keyword">do</span> &#123;                                                /  </span><br><span class="line">        (z) = (zval*)emalloc(<span class="keyword">sizeof</span>(zval_gc_info));     /  </span><br><span class="line">        GC_ZVAL_INIT(z);                                /  </span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="number">0</span>)  </span><br></pre></td></tr></table></figure><p>ALLOC_ZVAL的原始定义是在Zend&#x2F;zend_alloc.h中，原始的定义只是分配一个zval结构的内存空间，然后在新的GC使用后，分配一个zval空间实际上是分配了一个zval_gc_info结构的空间，下面看看zval_gc_info结构定义:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">zval_gc_info</span> &#123;</span>  </span><br><span class="line">    zval z;  </span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span>  </span><br><span class="line">        gc_root_buffer       *buffered;  </span><br><span class="line">        <span class="class"><span class="keyword">struct</span> _<span class="title">zval_gc_info</span> *<span class="title">next</span>;</span>  </span><br><span class="line">    &#125; u;  </span><br><span class="line">&#125; zval_gc_info;  </span><br></pre></td></tr></table></figure><p>zval_gc_info这个结构的第一个成员就是一个zval结构，第二个成员是一个联合体u，是一个指向gc_root_buffer的指针和一个指向_zval_gc_info的指针。  第一个成员为zval结构，这就保证了对zval_gc_info类型指针做类型转换后和zval等价。在ALLOC_ZVAL宏中，分配了一个zval_gc_info的空间后，是将空间的指针转换成了(zval *)。这样就相当于分配了一个zval的空间。然后GC_ZVAL_INIT宏会把zval_gc_info中的成员u的buffered字段设置成NULL:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_INIT(z) /  </span></span><br><span class="line"></span><br><span class="line">    ((zval_gc_info*)(z))-&gt;u.buffered = <span class="literal">NULL</span>  </span><br></pre></td></tr></table></figure><p>这个u.buffered指针就是用来表示这个zval对应的节点信息指针。</p><p>新的GC会为所有的zval分配一个空间存放节点信息指针，只有当zval被GC放入节点缓冲区的时候，节点信息指针才会被指向一个节点信息结构，否则节点信息指针一直是NULL。</p><p>具体方式是通过分配一个zval_gc_info结构来实现，这个结构包含了zval和节点信息指针buffered。</p><p>2.节点信息</p><p>  zval的节点信息指针buffered指向一个gc_root_buffer类型，这个类型的定义如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">gc_root_buffer</span> &#123;</span>  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">gc_root_buffer</span>   *<span class="title">prev</span>;</span>     <span class="comment">/* double-linked list               */</span>  </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">gc_root_buffer</span>   *<span class="title">next</span>;</span>  </span><br><span class="line">    zend_object_handle        handle;   <span class="comment">/* must be 0 for zval               */</span>  </span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span>  </span><br><span class="line">        zval                 *pz;  </span><br><span class="line">        zend_object_handlers *handlers;  </span><br><span class="line">    &#125; u;  </span><br><span class="line">&#125; gc_root_buffer;  </span><br></pre></td></tr></table></figure><p>这是一个双链表的节点结构类型，prev和next用来指向前一个节点和后一个节点，handel是和对象相关的，对象类型的变量比较特殊，我们这里不讨论，u是一个联合体，u.pz用来指向这个节点所对应的zval结构。 这样每一个zval结构和zval对应的节点信息互相被关联在一起了:</p><p>通过一个zval指针pz找到节点指针: pr &#x3D; ((zval_gc_info *)pz)-&gt;u.buffered</p><p>通过一个节点指针pr找到zval指针: pz &#x3D; pr-&gt;u.pz</p><p>3.为zval设置节点信息以及节点颜色信息</p><p>这里GC应用了一些小技巧，先看看下面相关的宏:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_COLOR  0x03  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_BLACK  0x00  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_WHITE  0x01  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_GREY   0x02  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_PURPLE 0x03  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ADDRESS(v) /  </span></span><br><span class="line">    ((gc_root_buffer*)(((<span class="type">zend_uintptr_t</span>)(v)) &amp; ~GC_COLOR))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_SET_ADDRESS(v, a) /  </span></span><br><span class="line">    (v) = ((gc_root_buffer*)((((<span class="type">zend_uintptr_t</span>)(v)) &amp; GC_COLOR) | ((<span class="type">zend_uintptr_t</span>)(a))))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_GET_COLOR(v) /  </span></span><br><span class="line">    (((<span class="type">zend_uintptr_t</span>)(v)) &amp; GC_COLOR)  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_SET_COLOR(v, c) /  </span></span><br><span class="line">    (v) = ((gc_root_buffer*)((((<span class="type">zend_uintptr_t</span>)(v)) &amp; ~GC_COLOR) | (c)))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_SET_BLACK(v) /  </span></span><br><span class="line">    (v) = ((gc_root_buffer*)(((<span class="type">zend_uintptr_t</span>)(v)) &amp; ~GC_COLOR))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_SET_PURPLE(v) /  </span></span><br><span class="line">    (v) = ((gc_root_buffer*)(((<span class="type">zend_uintptr_t</span>)(v)) | GC_PURPLE))  </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_INIT(z) /  </span></span><br><span class="line">    ((zval_gc_info*)(z))-&gt;u.buffered = <span class="literal">NULL</span>  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_ADDRESS(v) /  </span></span><br><span class="line">    GC_ADDRESS(((zval_gc_info*)(v))-&gt;u.buffered)  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_SET_ADDRESS(v, a) /  </span></span><br><span class="line">    GC_SET_ADDRESS(((zval_gc_info*)(v))-&gt;u.buffered, (a))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_GET_COLOR(v) /  </span></span><br><span class="line">    GC_GET_COLOR(((zval_gc_info*)(v))-&gt;u.buffered)  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_SET_COLOR(v, c) /  </span></span><br><span class="line">    GC_SET_COLOR(((zval_gc_info*)(v))-&gt;u.buffered, (c))  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_SET_BLACK(v) /  </span></span><br><span class="line">    GC_SET_BLACK(((zval_gc_info*)(v))-&gt;u.buffered)  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GC_ZVAL_SET_PURPLE(v) /  </span></span><br><span class="line">    GC_SET_PURPLE(((zval_gc_info*)(v))-&gt;u.buffered)  </span><br></pre></td></tr></table></figure><p>其中宏GC_ZVAL_SET_ADDRESS(v, a)是为v这个zval设置节点信息的指针a，这个宏先得到v中的节点信息指针字段u.buffered，然后调用GC_ADDRESS(v,a)宏，将u.buffered字段设置成指针a。</p><p>GC_ADDRESS(v, a)宏的功能是将地址a赋给v，但是它的实现很奇怪:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(v) = ((gc_root_buffer*)((((<span class="type">zend_uintptr_t</span>)(v)) &amp; GC_COLOR) | ((<span class="type">zend_uintptr_t</span>)(a))))</span><br></pre></td></tr></table></figure><p>为什么需要这么一个复杂的过程，而且设置指针值为何还要牵扯到GC_COLOR颜色这个宏？</p><p>这里就得先说说节点的颜色信息保存方式。</p><p>在前面GC的算法简介中，提到了需要为节点上色，而实际在我们节点结构gc_root_buffer中并没有哪一个字段用来标识节点的颜色，这里GC运用了一个小的技巧：利用节点指针的低两位来标识颜色属性。可能读者会有疑问，用指针中的位来保存颜色属性，那么设置颜色后，指针不就变化了吗，那么还能查找到指针对应的结构吗？ 这个还真能查到！ 为什么？ 这个和malloc分配的内存地址属性有一定的关系，glib的malloc分配的内存地址都会有一定的对齐，这个对齐值为2 * SIZE_SZ,在不同位的机器上这个值是不一样的，但是可以确保的是分配出来的指针的最低两位肯定是0，然后看看颜色相关的宏，GC_COLOR为0x03, 3只需要两个二进制位就能够保存，所以拿指针的最低两位来保存颜色值是没有任何问题的，但是在使用指针的时候一定要先把指针最低的两位还原成0，否则指针指向的值是错误的。</p><p>这样我们就能理解为什么GC_ADDRESS需要这么复杂了。因为v中的低2位保存了v的颜色信息，如果直接把a赋给v会覆盖掉颜色信息，通过((zend_uintptr_t)(v)) &amp; GC_COLOR可以保留低两位的颜色信息，同时其它的位都变成了0，将这个结果同a进行”|”操作，就能将a的赋给v,同时保留了v的颜色信息。</p><p>知道了颜色信息的存储方式，那么就应该很容易理解如何设置和获取颜色信息，这里就不多介绍了。</p><p>4.节点缓冲区</p><p>  GC会将收集到的节点存放到一个缓冲区中，缓冲区满的时候就开始进行垃圾分析算法。这个缓冲区实际上放在一个全局的结构中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">zend_gc_globals</span> &#123;</span>  </span><br><span class="line">    zend_bool         gc_enabled;  </span><br><span class="line">    zend_bool         gc_active;  </span><br><span class="line"></span><br><span class="line">    gc_root_buffer   *buf;              <span class="comment">/* preallocated arrays of buffers   */</span>  </span><br><span class="line">    gc_root_buffer    roots;            <span class="comment">/* list of possible roots of cycles */</span>  </span><br><span class="line">    gc_root_buffer   *unused;           <span class="comment">/* list of unused buffers           */</span>  </span><br><span class="line">    gc_root_buffer   *first_unused;     <span class="comment">/* pointer to first unused buffer   */</span>  </span><br><span class="line">    gc_root_buffer   *last_unused;      <span class="comment">/* pointer to last unused buffer    */</span>  </span><br><span class="line">    zval_gc_info     *zval_to_free;     <span class="comment">/* temporaryt list of zvals to free */</span>  </span><br><span class="line">    zval_gc_info     *free_list;  </span><br><span class="line">    zval_gc_info     *next_to_free;  </span><br><span class="line">    zend_uint gc_runs;  </span><br><span class="line">    zend_uint collected;  </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> GC_BENCH  </span></span><br><span class="line">    zend_uint root_buf_length;  </span><br><span class="line">    zend_uint root_buf_peak;  </span><br><span class="line">    zend_uint zval_possible_root;  </span><br><span class="line">    zend_uint zobj_possible_root;  </span><br><span class="line">    zend_uint zval_buffered;  </span><br><span class="line">    zend_uint zobj_buffered;  </span><br><span class="line">    zend_uint zval_remove_from_buffer;  </span><br><span class="line">    zend_uint zobj_remove_from_buffer;  </span><br><span class="line">    zend_uint zval_marked_grey;  </span><br><span class="line">    zend_uint zobj_marked_grey;  </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">&#125; zend_gc_globals;  </span><br></pre></td></tr></table></figure><p>用宏GC_G(v)可以访问结构中的v字段。<br>简单的介绍这个结构中几个重要的字段的含义:<br>zend_bool  gc_enabled: 是否开启GC<br>zend_bool  gc_active: GC是否正在进行垃圾分析<br>gc_root_buffer   *buf：节点缓冲区指针，在GC初始化的时候，会分配10,000个gc_root_buffer结构的空间，buf为第1个节点的地址<br>gc_root_buffer    roots; GC每次开始垃圾分析算法的时候，都是从这个节点开始进行(注意不是直接在缓冲区中按顺序来分析节点，缓冲区值是存放节点信息内容，roots是分析的节点入口，是一个双链表的入口)</p><p>其他节点和垃圾分析过程中的一些临时数据有关，这里暂不介绍。</p><p>5.GC的初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line">ZEND_API <span class="type">void</span> <span class="title function_">gc_init</span><span class="params">(TSRMLS_D)</span>  </span><br><span class="line"></span><br><span class="line">&#123;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (GC_G(buf) == <span class="literal">NULL</span> &amp;&amp; GC_G(gc_enabled)) &#123;  </span><br><span class="line"></span><br><span class="line">        GC_G(buf) = (gc_root_buffer*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(gc_root_buffer) * GC_ROOT_BUFFER_MAX_ENTRIES);  </span><br><span class="line"></span><br><span class="line">        GC_G(last_unused) = &amp;GC_G(buf)[GC_ROOT_BUFFER_MAX_ENTRIES];  </span><br><span class="line"></span><br><span class="line">        gc_reset(TSRMLS_C);  </span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>首先在初始化之前会有一个全局变量</p><p>extern ZEND_API zend_gc_globals gc_globals;</p><p>在整个GC运行期间都依赖这个全局变量结构。</p><p>初始化是调用的gc_init函数，如果缓冲区指针字段为空并且GC开启，那么就分配缓冲区，然后调用gc_reset初始化全局结构gc_globals中的相关字段。</p><p>6.节点放入缓冲区的时机</p><p>那么现在就是一个比较关键的一步了，GC何时为zval设置节点信息，并将节点信息设置放入缓冲区等待分析处理。从前面介绍的GC算法的原理中，准则3：“如果一个zval的refcount减少之后大于0，那么此zval还不能被释放，此zval可能成为一个垃圾”。我们大概可以知道当一个zval的refcount减少的时候，GC有可能为zval分配节点并放入缓冲区。那么在什么情况下zval的refcount会减少。 在我们调用unset的时候，会从当前符号的哈希表中删除变量名对应的项，并对该项调用一个析构函数，所以这个refcount减少的操作发生在这个析构函数中。通过建立变量符号哈希表的代码段可以知道这个析构函数是什么。这个析构函数最终的实现在Zend&#x2F;zend_execute_API.c中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line">ZEND_API <span class="type">void</span> _zval_ptr_dtor(zval **zval_ptr ZEND_FILE_LINE_DC) <span class="comment">/* &#123;&#123;&#123; */</span>  </span><br><span class="line"></span><br><span class="line">&#123;  </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DEBUG_ZEND&gt;=2  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Reducing refcount for %x (%x): %d-&gt;%d/n&quot;</span>, *zval_ptr, zval_ptr, Z_REFCOUNT_PP(zval_ptr), Z_REFCOUNT_PP(zval_ptr) – <span class="number">1</span>);  </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">    Z_DELREF_PP(zval_ptr);  </span><br><span class="line">    <span class="keyword">if</span> (Z_REFCOUNT_PP(zval_ptr) == <span class="number">0</span>) &#123;  </span><br><span class="line">        TSRMLS_FETCH();  </span><br><span class="line">        <span class="keyword">if</span> (*zval_ptr != &amp;EG(uninitialized_zval)) &#123;  </span><br><span class="line">            GC_REMOVE_ZVAL_FROM_BUFFER(*zval_ptr);  </span><br><span class="line">            zval_dtor(*zval_ptr);  </span><br><span class="line">            efree_rel(*zval_ptr);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        TSRMLS_FETCH();  </span><br><span class="line">        <span class="keyword">if</span> (Z_REFCOUNT_PP(zval_ptr) == <span class="number">1</span>) &#123;  </span><br><span class="line">            Z_UNSET_ISREF_PP(zval_ptr);  </span><br><span class="line">        &#125;  </span><br><span class="line">        GC_ZVAL_CHECK_POSSIBLE_ROOT(*zval_ptr);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p> 这个函数中：</p><p>Z_DELREF_PP(zval_ptr) ：对zval的refcount减1，减1之后</p><p>1.如果zval的refcount等于0,根据前面的准则2，这个变量的空间可以直接被释放掉，在释放之前需要注意，有可能这个变量在之前已经被放入了节点缓冲区，所以需要调用GC_REMOVE_ZVAL_FROM_BUFFER(*zval_ptr)从节点缓冲区中删除相关节点信息，然后调用zval_dtor和efree_rel释放掉变量zval中变量占用的空间和zval结构自身的空间。</p><p>2.如果zval的refcount等于1,根据前面的准则3，这个变量有可能会成为一个垃圾，于是调用GC_ZVAL_CHECK_POSSIBLE_ROOT(*zval_ptr)为其设置节点信息并放入缓冲区</p><p>因此，最终是通过GC_ZVAL_CHECK_POSSIBLE_ROOT宏来产生节点并放入缓冲等待处理，相关的宏和函数代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line"><span class="comment">#define GC_ZVAL_CHECK_POSSIBLE_ROOT(z) /  </span></span><br><span class="line">    gc_zval_check_possible_root((z) TSRMLS_CC)  </span><br><span class="line"><span class="built_in">static</span> zend_always_inline <span class="keyword">void</span> gc_zval_check_possible_root(zval *z TSRMLS_DC)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span> (z-&gt;type == IS_ARRAY || z-&gt;type == IS_OBJECT) &#123;  </span><br><span class="line">        gc_zval_possible_root(z TSRMLS_CC);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">ZEND_API <span class="keyword">void</span> gc_zval_possible_root(zval *zv TSRMLS_DC)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span> (UNEXPECTED(GC_G(free_list) != <span class="literal">NULL</span> &amp;&amp;  </span><br><span class="line">                   GC_ZVAL_ADDRESS(zv) != <span class="literal">NULL</span> &amp;&amp;  </span><br><span class="line">                   GC_ZVAL_GET_COLOR(zv) == GC_BLACK) &amp;&amp;  </span><br><span class="line">                   (GC_ZVAL_ADDRESS(zv) &lt; GC_G(buf) ||  </span><br><span class="line">                    GC_ZVAL_ADDRESS(zv) &gt;= GC_G(last_unused))) &#123;  </span><br><span class="line">        <span class="comment">/* The given zval is a garbage that is going to be deleted by </span></span><br><span class="line"><span class="comment">         * currently running GC */</span>  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zv-&gt;type == IS_OBJECT) &#123;  </span><br><span class="line">        GC_ZOBJ_CHECK_POSSIBLE_ROOT(zv);  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    GC_BENCH_INC(zval_possible_root);  </span><br><span class="line">    <span class="keyword">if</span> (GC_ZVAL_GET_COLOR(zv) != GC_PURPLE) &#123;  </span><br><span class="line">        GC_ZVAL_SET_PURPLE(zv);  </span><br><span class="line">        <span class="keyword">if</span> (!GC_ZVAL_ADDRESS(zv)) &#123;  </span><br><span class="line">            gc_root_buffer *newRoot = GC_G(unused);  </span><br><span class="line">            <span class="keyword">if</span> (newRoot) &#123;  </span><br><span class="line">                GC_G(unused) = newRoot-&gt;prev;  </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (GC_G(first_unused) != GC_G(last_unused)) &#123;  </span><br><span class="line">                newRoot = GC_G(first_unused);  </span><br><span class="line">                GC_G(first_unused)++;  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                <span class="keyword">if</span> (!GC_G(gc_enabled)) &#123;  </span><br><span class="line">                    GC_ZVAL_SET_BLACK(zv);  </span><br><span class="line">                    <span class="keyword">return</span>;  </span><br><span class="line">                &#125;  </span><br><span class="line">                zv-&gt;refcount__gc++;  </span><br><span class="line">                gc_collect_cycles(TSRMLS_C);  </span><br><span class="line">                zv-&gt;refcount__gc–;  </span><br><span class="line">                newRoot = GC_G(unused);  </span><br><span class="line">                <span class="keyword">if</span> (!newRoot) &#123;  </span><br><span class="line">                    <span class="keyword">return</span>;  </span><br><span class="line">                &#125;  </span><br><span class="line"></span><br><span class="line">                GC_ZVAL_SET_PURPLE(zv);  </span><br><span class="line">                GC_G(unused) = newRoot-&gt;prev;  </span><br><span class="line">            &#125;  </span><br><span class="line">            newRoot-&gt;next = GC_G(roots).next;  </span><br><span class="line">            newRoot-&gt;prev = &amp;GC_G(roots);  </span><br><span class="line">            GC_G(roots).next-&gt;prev = newRoot;  </span><br><span class="line">            GC_G(roots).next = newRoot;  </span><br><span class="line"></span><br><span class="line">            GC_ZVAL_SET_ADDRESS(zv, newRoot);  </span><br><span class="line"></span><br><span class="line">            newRoot-&gt;handle = <span class="number">0</span>;  </span><br><span class="line">            newRoot-&gt;u.pz = zv;  </span><br><span class="line"></span><br><span class="line">            GC_BENCH_INC(zval_buffered);  </span><br><span class="line">            GC_BENCH_INC(root_buf_length);  </span><br><span class="line">            GC_BENCH_PEAK(root_buf_peak, root_buf_length);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>内联函数gc_zval_check_possible_root会先判断zval的类型，如果是数组或则对象类型才有可能给zval分配节点信息并放入缓冲区。只有这两种类型才可能产生环形引用。虽然GC直接处理对象是数组和对象类型，但是在这些数组和对象中包含的任何类型变量都在GC的职责范围之内，这个内联函数最终掉用的是gc_zval_possible_root函数，下面重点分析此函数中的主要流程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>：</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (UNEXPECTED(GC_G(free_list) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">                GC_ZVAL_ADDRESS(zv) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">             GC_ZVAL_GET_COLOR(zv) == GC_BLACK) &amp;&amp;</span><br><span class="line">             (GC_ZVAL_ADDRESS(zv) &lt; GC_G(buf) ||</span><br><span class="line">              GC_ZVAL_ADDRESS(zv) &gt;= GC_G(last_unused))) &#123;</span><br><span class="line">  <span class="comment">/* The given zval is a garbage that is going to be deleted by</span></span><br><span class="line"><span class="comment">   * currently running GC */</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>首先检查zval节点信息是否已经放入到节点缓冲区，如果已经放入到节点缓冲区，则直接返回，这样保证节点缓冲区中的每个zval节点只出现一次。</p><p>2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (zv-&gt;type == IS_OBJECT) &#123;</span><br><span class="line"> GC_ZOBJ_CHECK_POSSIBLE_ROOT(zv);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果zval是对象类型，则走对象类型相关的流程，本文只以数组类型为例讲解，所以这个流程不阐述，读者可以举一反三。</p><p>3:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (GC_ZVAL_GET_COLOR(zv) != GC_PURPLE) &#123;</span><br><span class="line"> GC_ZVAL_SET_PURPLE(zv);</span><br><span class="line"></span><br><span class="line"> …</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果zval没有被标记为紫色，就将其标记为紫色，表示zval被放入到节点缓冲，否则不做后面的操作。</p><p>4:</p><p>如果zval的节点信息指针为空，则需要为zval分配一个gc_root_buffer节点信息。这之后会有一些判断机制，如果发现节点缓冲区已经满了说明需要启动垃圾分析流程了，垃圾分析流程在函数gc_collect_cycles(TSRMLS_C);  如果缓冲区没有满，则不会进入垃圾分析流程，为zval分配的节点信息会被加入到GC_G(roots)为入口的双链表中。</p><p>从这个函数我们发现了垃圾分析算法是当发现缓冲区满的时候就立即触发，垃圾分析跟代码执行流是同步过程，也就是只有垃圾分析结束之后，代码才会继续执行。所以在我们的PHP代码中，如果某个unset正好使GC的节点缓冲区满，触发了垃圾分析流程，那么这个unset耗费的时间将比一般的unset多很多。</p><p>gc_collect_cycles函数是真正的垃圾分析流程，这个函数定义为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[cpp] view plain copy</span><br><span class="line"></span><br><span class="line">ZEND_API <span class="keyword">int</span> gc_collect_cycles(TSRMLS_D)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">if</span> (GC_G(roots).next != &amp;GC_G(roots)) &#123;  </span><br><span class="line">        zval_gc_info *p, *q, *orig_free_list, *orig_next_to_free;  </span><br><span class="line">        <span class="keyword">if</span> (GC_G(gc_active)) &#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        GC_G(gc_runs)++;  </span><br><span class="line">        GC_G(zval_to_free) = FREE_LIST_END;  </span><br><span class="line">        GC_G(gc_active) = <span class="number">1</span>;  </span><br><span class="line">        gc_mark_roots(TSRMLS_C);  </span><br><span class="line">        gc_scan_roots(TSRMLS_C);  </span><br><span class="line">        gc_collect_roots(TSRMLS_C);  </span><br><span class="line">  </span><br><span class="line">        orig_free_list = GC_G(free_list);  </span><br><span class="line">        orig_next_to_free = GC_G(next_to_free);  </span><br><span class="line">        p = GC_G(free_list) = GC_G(zval_to_free);  </span><br><span class="line">        GC_G(zval_to_free) = <span class="literal">NULL</span>;  </span><br><span class="line">        GC_G(gc_active) = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">        <span class="comment">/* First call destructors */</span>  </span><br><span class="line">        <span class="keyword">while</span> (p != FREE_LIST_END) &#123;  </span><br><span class="line">            <span class="keyword">if</span> (Z_TYPE(p-&gt;z) == IS_OBJECT) &#123;  </span><br><span class="line">                <span class="keyword">if</span> (EG(objects_store).object_buckets &amp;&amp;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].valid &amp;&amp;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.refcount &lt;= <span class="number">0</span> &amp;&amp;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.dtor &amp;&amp;  </span><br><span class="line">                    !EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].destructor_called) &#123;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].destructor_called = <span class="number">1</span>;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.refcount++;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.dtor(EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.<span class="keyword">object</span>, Z_OBJ_HANDLE(p-&gt;z) TSRMLS_CC);  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.refcount–;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            count++;  </span><br><span class="line">            p = p-&gt;u.next;  </span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Destroy zvals */</span>  </span><br><span class="line">        p = GC_G(free_list);  </span><br><span class="line">        <span class="keyword">while</span> (p != FREE_LIST_END) &#123;  </span><br><span class="line">            GC_G(next_to_free) = p-&gt;u.next;  </span><br><span class="line">            <span class="keyword">if</span> (Z_TYPE(p-&gt;z) == IS_OBJECT) &#123;  </span><br><span class="line">                <span class="keyword">if</span> (EG(objects_store).object_buckets &amp;&amp;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].valid &amp;&amp;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.refcount &lt;= <span class="number">0</span>) &#123;  </span><br><span class="line">                    EG(objects_store).object_buckets[Z_OBJ_HANDLE(p-&gt;z)].bucket.obj.refcount = <span class="number">1</span>;  </span><br><span class="line">                    Z_TYPE(p-&gt;z) = IS_NULL;  </span><br><span class="line">                    zend_objects_store_del_ref_by_handle_ex(Z_OBJ_HANDLE(p-&gt;z), Z_OBJ_HT(p-&gt;z) TSRMLS_CC);  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Z_TYPE(p-&gt;z) == IS_ARRAY) &#123;  </span><br><span class="line">                Z_TYPE(p-&gt;z) = IS_NULL;  </span><br><span class="line">                zend_hash_destroy(Z_ARRVAL(p-&gt;z));  </span><br><span class="line">                FREE_HASHTABLE(Z_ARRVAL(p-&gt;z));  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                zval_dtor(&amp;p-&gt;z);  </span><br><span class="line">                Z_TYPE(p-&gt;z) = IS_NULL;  </span><br><span class="line">            &#125;  </span><br><span class="line">            p = GC_G(next_to_free);  </span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Free zvals */</span>  </span><br><span class="line">        p = GC_G(free_list);  </span><br><span class="line">        <span class="keyword">while</span> (p != FREE_LIST_END) &#123;  </span><br><span class="line">            q = p-&gt;u.next;  </span><br><span class="line">            FREE_ZVAL_EX(&amp;p-&gt;z);  </span><br><span class="line">            p = q;  </span><br><span class="line">        &#125;  </span><br><span class="line">        GC_G(collected) += count;  </span><br><span class="line">        GC_G(free_list) = orig_free_list;  </span><br><span class="line">        GC_G(next_to_free) = orig_next_to_free;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> count;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>这里只简单的介绍其中关键的流程:</p><p>1.gc_mark_roots（）</p><p>   这个函数对节点信息的链表进行一次深度优先遍历，将其中的zval的refcount减1，为了避免对同一个zval重复减操作，在操作之后将zval标记成灰色。（对节点自身的zval可以重复减操作，这个是此算法的基础）</p><p>2.gc_scan_roots()</p><p>  这个函数对节点信息的链表再次进行深度优先遍历，如果发现zval的refcount大于等于1，则对该zval和其包含的zval的refcount加1操作，这个是对非垃圾的一个信息还原，然后将这些zval颜色属性去掉(设置成black)。如果发现zval的refcount等于0，则就标记成白色，这些是后面将要清理掉的垃圾。</p><p>3.gc_collect_roots()</p><p>   遍历节点信息链表,将前面一个步骤中标记为白色的节点信息放到GC_G(zval_to_free)为入口的链表中，这个链表用来存放将要释放的垃圾。 然后释放掉全部的节点信息，缓冲区被清空。分析结束后将重新收集节点信息。</p><p>4.释放步骤3中收集到垃圾数据。</p>]]></content>
    
    
    <summary type="html">Php垃圾回收机制讲解</summary>
    
    
    
    
  </entry>
  
</feed>
